var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.149,1,2.792]],["body/interfaces/ActionCache.html",[0,0.26,1,4.165,2,1.078,3,0.218,4,0.218,5,0.158,6,3.226,7,0.349,8,0.516,9,5.18,10,1.648,11,0.598,12,0.012,13,0.389,14,4.875,15,3.67,16,1.32,17,4.902,18,2.03,19,0.703,20,3.226,21,1.11,22,1.839,23,4.613,24,3.226,25,2.713,26,3.427,27,3.427,28,3.226,29,3.053,30,3.427,31,3.226,32,3.226,33,3.226,34,3.053,35,3.053,36,4.739,37,2.902,38,3.427,39,1.861,40,3.427,41,2.621,42,3.427,43,3.146,44,3.427,45,3.574,46,3.427,47,3.226,48,3.427,49,3.226,50,3.427,51,3.226,52,3.427,53,3.427,54,3.427,55,3.053,56,3.427,57,3.427,58,3.427,59,2.768,60,3.427,61,3.226,62,3.427,63,3.226,64,3.427,65,3.427,66,3.427,67,3.427,68,3.427,69,3.427,70,3.053,71,3.427,72,3.427,73,3.427,74,3.427,75,0.008,76,0.008]],["title/interfaces/Album.html",[0,0.149,77,1.592]],["body/interfaces/Album.html",[0,0.089,2,0.557,3,0.112,4,0.112,5,0.191,7,0.112,8,0.322,10,1.195,11,0.378,12,0.012,13,0.188,16,1.306,19,1.086,21,0.573,39,1.16,75,0.005,76,0.005,77,2.675,78,2.263,79,3.513,80,1.229,81,3.204,82,2.121,83,0.709,84,0.893,85,3.071,86,2.131,87,0.525,88,2.76,89,1.635,90,0.352,91,3.706,92,3.225,93,1.43,94,2.597,95,1.667,96,3.199,97,3.526,98,3.526,99,2.955,100,1.771,101,2.131,102,1.578,103,3.199,104,1.311,105,3.199,106,1.166,107,3.199,108,3.199,109,3.199,110,2.053,111,3.199,112,1.897,113,1.311,114,1.197,115,1.667,116,2.228,117,1.578,118,3.199,119,1.897,120,3.526,121,3.526,122,3.526,123,3.526,124,3.526,125,2.263,126,3.526,127,1.897,128,1.897,129,2.955,130,2.263,131,0.982,132,0.95,133,2.263,134,1.211,135,2.263,136,0.34,137,0.982,138,1.049,139,1.578,140,1.5,141,2.263,142,1.882,143,3.526,144,2.263,145,1.777,146,3.526,147,2.263,148,2.263,149,1.67,150,2.263,151,2.263,152,2.263,153,2.263,154,2.263,155,2.263,156,3.191,157,2.263,158,2.053,159,2.263,160,5.864,161,4.891,162,2.263,163,2.263,164,2.263,165,3.097,166,1.58,167,2.263,168,3.63,169,2.263,170,2.263,171,3.526,172,4.891,173,3.526,174,4.332,175,2.228,176,2.053,177,3.199,178,5.302,179,2.263,180,1.897,181,3.526,182,2.263,183,2.263,184,2.263,185,2.263,186,2.263,187,2.263,188,2.263,189,5.864,190,2.263,191,2.263,192,2.597,193,1.635,194,2.263,195,4.332,196,2.263,197,1.771,198,4.332,199,2.263,200,2.263,201,4.332,202,2.263,203,2.263,204,1.578,205,3.526,206,2.263,207,2.813,208,3.526,209,2.263,210,3.526,211,2.263,212,2.263,213,2.263,214,2.263,215,2.263,216,2.263,217,2.053,218,1.897,219,1.771,220,2.263,221,2.263,222,2.263,223,0.843,224,2.263,225,0.982,226,2.053,227,2.263,228,2.053,229,2.053,230,1.897,231,1.897,232,4.332,233,2.263,234,4.891,235,2.053,236,3.526,237,2.263,238,2.263,239,1.771,240,2.263,241,2.263,242,2.263,243,2.263,244,3.199,245,2.263,246,2.263,247,2.263,248,2.263,249,2.156,250,2.053,251,2.793,252,2.053,253,2.263,254,2.263,255,2.263,256,4.332,257,2.263,258,4.891,259,2.263,260,2.263,261,3.526,262,3.526,263,2.053,264,2.263,265,2.263,266,2.263,267,2.263,268,2.263,269,2.263,270,2.263,271,2.263,272,3.526,273,3.526,274,2.263,275,1.259,276,2.263,277,2.263,278,2.263,279,2.053,280,2.263,281,2.263,282,2.053,283,2.263]],["title/interfaces/AnalyserConfig.html",[0,0.149,284,2.396]],["body/interfaces/AnalyserConfig.html",[0,0.281,2,1.018,3,0.206,4,0.206,5,0.149,7,0.206,8,0.498,10,1.732,11,0.615,12,0.011,13,0.392,18,2.824,19,1.04,22,1.737,25,2.614,75,0.008,76,0.008,284,3.444,285,2.615,286,4.024,287,4.291,288,4.291,289,4.291,290,2.501,291,2.302,292,2.397,293,2.501,294,2.501,295,2.397,296,2.501,297,2.501,298,2.501,299,2.615,300,2.615,301,2.397,302,3.294,303,3.157,304,3.157,305,3.157,306,2.397,307,3.157,308,2.501,309,2.708,310,2.708,311,3.157,312,2.501,313,2.397,314,2.501,315,2.615,316,2.742,317,2.397,318,3.53,319,2.501,320,2.302,321,3.851,322,2.916,323,2.501,324,3.157,325,3.603,326,3.603,327,2.397,328,3.157,329,3.603]],["title/components/AppComponent.html",[84,0.961,330,1.699]],["body/components/AppComponent.html",[3,0.203,4,0.203,5,0.194,12,0.011,13,0.217,16,1.231,75,0.008,76,0.008,80,1.41,83,0.715,84,1.534,87,0.948,90,0.635,104,2.366,114,1.493,131,2.343,132,2.269,136,0.614,137,1.772,145,1.586,225,2.626,330,2.888,331,2.003,332,1.893,333,1.893,334,1.893,335,4.661,336,3.767,337,3.767,338,3.198,339,3.277,340,1.831,341,2.888,342,6.165,343,0.894,344,4.661,345,2.848,346,4.661,347,4.661,348,2.707,349,2.272,350,3.581,351,3.197,352,4.903,353,4.661,354,4.661,355,4.661,356,4.661,357,4.661,358,4.661,359,4.661,360,3.197,361,4.661,362,4.661,363,4.661,364,4.661,365,4.661,366,4.661,367,4.661,368,1.893,369,2.505,370,2.13,371,1.662,372,2.987,373,1.893,374,1.893,375,1.831,376,1.662,377,1.893,378,1.831,379,1.893,380,1.831,381,1.772,382,1.893,383,1.61,384,1.662,385,1.662,386,2.505,387,1.831,388,2.987,389,1.831,390,1.893,391,1.831,392,1.715,393,1.893,394,1.831,395,1.893,396,1.715,397,1.831,398,1.831,399,1.893,400,1.831,401,1.772,402,1.893,403,1.831,404,1.893,405,1.831,406,1.715,407,1.831,408,1.893,409,1.831,410,1.772,411,1.831,412,1.893]],["title/injectables/AudioService.html",[413,0.758,414,2.291]],["body/injectables/AudioService.html",[3,0.099,4,0.099,5,0.179,7,0.099,8,0.291,10,1.461,11,0.536,12,0.012,13,0.17,16,1.954,21,1.617,22,1.675,39,2.31,41,1.479,75,0.005,76,0.005,80,1.31,83,0.473,85,1.849,87,0.463,89,1.849,90,0.31,93,1.26,136,0.3,142,2.275,145,1.571,149,1.155,166,2.043,223,1.43,225,1.73,231,1.671,249,1.623,251,0.894,263,1.81,317,2.641,327,2.311,340,0.676,343,1.572,370,0.786,413,0.638,414,1.929,415,0.865,416,1.995,417,4.551,418,3.619,419,3.343,420,5.319,421,3.619,422,4.551,423,4.551,424,3.989,425,4.551,426,4.559,427,0.785,428,5.201,429,3.641,430,3.641,431,3.82,432,4.559,433,5.201,434,3.641,435,3.641,436,3.641,437,3.641,438,3.641,439,3.641,440,3.641,441,2.895,442,4.551,443,2.276,444,2.276,445,1.571,446,3.641,447,4.524,448,2.276,449,2.089,450,1.349,451,4.136,452,3.641,453,4.37,454,2.276,455,4.551,456,2.276,457,2.276,458,1.322,459,2.276,460,3.641,461,2.276,462,3.641,463,4.987,464,2.276,465,1.838,466,2.498,467,2.889,468,2.276,469,2.276,470,3.641,471,2.276,472,3.641,473,4.987,474,2.276,475,3.641,476,2.276,477,3.641,478,3.641,479,2.276,480,2.276,481,3.641,482,2.276,483,4.559,484,2.276,485,2.276,486,3.641,487,2.351,488,2.351,489,2.351,490,2.351,491,2.351,492,2.115,493,2.351,494,2.351,495,2.351,496,2.351,497,2.276,498,4.457,499,2.276,500,2.276,501,5.201,502,2.276,503,2.276,504,2.276,505,3.641,506,2.276,507,3.641,508,2.895,509,2.276,510,2.276,511,2.276,512,2.017,513,1.067,514,1.205,515,2.225,516,2.895,517,0.924,518,3.343,519,0.696,520,1.26,521,2.276,522,4.457,523,2.276,524,2.276,525,2.276,526,2.276,527,5.201,528,2.276,529,2.276,530,2.276,531,3.641,532,2.276,533,2.276,534,2.276,535,2.276,536,2.895,537,3.191,538,2.276,539,2.276,540,2.498,541,3.641,542,2.276,543,2.276,544,2.276,545,2.276,546,1.81,547,2.276,548,2.276,549,2.276,550,3.641,551,2.276,552,1.995,553,1.39,554,1.995,555,1.561,556,2.276,557,1.671,558,1.995,559,2.276,560,1.995,561,3.641,562,3.641,563,2.276,564,2.895,565,3.641,566,3.641,567,2.276,568,2.276,569,2.276,570,2.276,571,2.276,572,2.276,573,2.276,574,2.276,575,1.561,576,1.322,577,1.81,578,2.276,579,2.276,580,2.276,581,2.276,582,2.276,583,2.276,584,3.641,585,2.276,586,2.276,587,2.276,588,2.276,589,2.276,590,1.298,591,2.276,592,2.895,593,2.276,594,2.276,595,1.81,596,2.276,597,1.671,598,1.155,599,2.276,600,1.561,601,2.276,602,2.276,603,2.276,604,2.276,605,2.276,606,2.276,607,2.276,608,2.276,609,2.276,610,2.276,611,2.276,612,2.276,613,2.276,614,2.276,615,2.276,616,2.276,617,2.276,618,2.276,619,3.641,620,2.276,621,1.995,622,2.276,623,2.276,624,1.995,625,1.561,626,1.995,627,2.276,628,2.276,629,2.276,630,3.641,631,2.276,632,2.276,633,2.276,634,2.276,635,2.276,636,2.276,637,3.641,638,2.276,639,2.276,640,2.276,641,2.276,642,2.276,643,2.276,644,2.276,645,2.276,646,2.276,647,2.276,648,3.641,649,2.276,650,2.276,651,2.276,652,2.276,653,2.276]],["title/interfaces/AxisGamepadAction.html",[0,0.149,24,2.792]],["body/interfaces/AxisGamepadAction.html",[0,0.26,1,3.215,2,1.074,3,0.217,4,0.217,5,0.157,6,3.215,7,0.311,8,0.515,9,3.416,10,1.543,11,0.597,12,0.012,13,0.389,14,5.326,15,3.657,16,1.316,17,5.174,18,2.023,19,0.701,20,3.215,21,1.106,22,1.833,23,4.606,24,4.156,25,3,26,5.174,27,5.174,28,3.215,29,3.043,30,3.416,31,3.215,32,3.215,33,3.215,34,3.043,35,3.043,36,4.728,37,2.892,38,3.416,39,1.857,40,3.416,41,2.615,42,3.416,43,3.139,44,3.416,45,3.566,46,3.416,47,3.215,48,3.416,49,3.215,50,3.416,51,3.215,52,3.416,53,3.416,54,3.416,55,3.043,56,3.416,57,3.416,58,3.416,59,2.758,60,3.416,61,3.215,62,3.416,63,3.215,64,3.416,65,3.416,66,3.416,67,3.416,68,3.416,69,3.416,70,3.043,71,3.416,72,3.416,73,3.416,74,3.416,75,0.008,76,0.008]],["title/pipes/BandPipe.html",[113,2.196,654,3.791]],["body/pipes/BandPipe.html",[3,0.252,4,0.252,5,0.183,11,0.443,12,0.011,13,0.27,19,0.996,39,1.67,41,2.353,75,0.009,76,0.009,80,1.467,83,0.644,90,0.789,93,3.208,113,3.594,114,1.403,136,0.763,138,2.353,145,1.249,149,1.572,343,1.111,427,1.249,445,1.213,449,1.772,450,1.144,453,4.867,465,1.929,492,4.111,518,5.199,654,6.205,655,4.254,656,5.791,657,5.629,658,2.691,659,4.254,660,5.629,661,5.791,662,5.629,663,7.079,664,5.791,665,5.791,666,5.791]],["title/interfaces/BarsVisualizerOptions.html",[0,0.149,324,2.196]],["body/interfaces/BarsVisualizerOptions.html",[0,0.278,2,0.973,3,0.196,4,0.196,5,0.142,7,0.196,8,0.483,10,1.74,11,0.632,12,0.011,13,0.389,18,3.162,19,1.021,22,1.659,25,2.857,75,0.008,76,0.008,284,2.498,285,2.498,286,3.875,287,2.619,288,2.619,289,2.619,290,2.389,291,2.199,292,2.289,293,2.389,294,2.389,295,2.289,296,2.389,297,2.389,298,2.389,299,2.498,300,2.498,301,2.289,302,4.006,303,3.84,304,3.84,305,3.84,306,2.289,307,3.062,308,2.389,309,2.627,310,2.627,311,3.062,312,2.389,313,2.289,314,2.389,315,2.498,316,2.619,317,2.289,318,3.45,319,2.389,320,2.199,321,4.019,322,2.828,323,2.389,324,3.45,325,3.937,326,3.794,327,3.684,328,3.062,329,3.538]],["title/interfaces/BaseVisualizerOptions.html",[0,0.149,321,2.396]],["body/interfaces/BaseVisualizerOptions.html",[0,0.281,2,1.007,3,0.203,4,0.203,5,0.147,7,0.203,8,0.494,10,1.724,11,0.622,12,0.011,13,0.391,18,3.193,19,1.145,22,1.718,25,2.595,75,0.008,76,0.008,284,2.586,285,2.586,286,3.587,287,2.711,288,2.711,289,2.711,290,2.473,291,2.276,292,2.37,293,2.473,294,2.473,295,2.37,296,2.473,297,2.473,298,2.473,299,2.586,300,2.586,301,2.37,302,3.269,303,3.133,304,3.133,305,3.133,306,2.37,307,3.133,308,2.473,309,3.332,310,3.332,311,3.884,312,2.473,313,2.37,314,2.473,315,2.586,316,2.711,317,2.37,318,3.51,319,2.473,320,2.276,321,4.075,322,3.45,323,3.897,324,3.133,325,3.587,326,3.587,327,2.37,328,3.133,329,3.587]],["title/pipes/BitratePipe.html",[113,2.196,667,3.439]],["body/pipes/BitratePipe.html",[3,0.259,4,0.259,5,0.187,10,1.528,11,0.455,12,0.011,13,0.277,19,1.012,75,0.009,76,0.009,80,1.484,83,0.541,90,0.81,113,3.652,114,1.44,136,0.783,138,2.415,207,3.252,343,1.14,427,1.282,445,1.246,449,1.819,450,1.175,465,1.873,655,4.366,657,5.72,658,2.734,659,4.366,660,5.72,662,5.72,667,5.72,668,6.305,669,5.945,670,6.305,671,4.91,672,5.945]],["title/interfaces/ButtonGamepadAction.html",[0,0.149,28,2.792]],["body/interfaces/ButtonGamepadAction.html",[0,0.261,1,3.254,2,1.087,3,0.219,4,0.219,5,0.159,6,3.254,7,0.312,8,0.519,9,3.457,10,1.549,11,0.579,12,0.012,13,0.39,14,5.181,15,3.702,16,1.332,17,5.197,18,2.047,19,0.709,20,3.254,21,1.119,22,1.855,23,4.632,24,3.254,25,3.017,26,3.457,27,3.457,28,4.189,29,4.629,30,3.457,31,3.254,32,3.254,33,3.254,34,3.079,35,3.079,36,4.765,37,2.927,38,3.457,39,1.871,40,3.457,41,2.636,42,3.457,43,3.163,44,3.457,45,3.594,46,3.457,47,3.254,48,3.457,49,3.254,50,3.457,51,3.254,52,3.457,53,3.457,54,3.457,55,3.079,56,3.457,57,3.457,58,3.457,59,2.791,60,3.457,61,3.254,62,3.457,63,3.254,64,3.457,65,3.457,66,3.457,67,3.457,68,3.457,69,3.457,70,3.079,71,3.457,72,3.457,73,3.457,74,3.457,75,0.008,76,0.008]],["title/interfaces/Chainable.html",[0,0.149,673,3.791]],["body/interfaces/Chainable.html",[0,0.177,2,1.104,3,0.223,4,0.223,5,0.207,7,0.223,12,0.012,16,1.732,75,0.008,76,0.008,83,0.596,343,0.982,370,1.769,427,1.414,445,1.073,450,1.012,516,5.211,540,3.512,554,5.744,673,5.744,674,5.119,675,6.68,676,5.119,677,5.119,678,4.487,679,4.487,680,5.119,681,4.487,682,5.119,683,5.119,684,5.119,685,6.553,686,7.621,687,5.744,688,5.744,689,5.744,690,5.119,691,5.119,692,5.119,693,5.119,694,4.487,695,5.119,696,5.119,697,5.119,698,5.119,699,7.621,700,5.119,701,5.119,702,3.128,703,5.119,704,5.119,705,5.119,706,5.119,707,6.553,708,5.119,709,6.553,710,6.553,711,5.119,712,5.119,713,4.487,714,5.119,715,6.553,716,4.667,717,5.119,718,5.119,719,5.119,720,5.119,721,2.836]],["title/interfaces/ColorConfig.html",[0,0.149,722,2.291]],["body/interfaces/ColorConfig.html",[0,0.264,2,1.122,3,0.227,4,0.227,5,0.23,7,0.227,8,0.53,11,0.605,12,0.011,13,0.384,19,1.212,25,2.187,75,0.009,76,0.009,77,1.914,79,3.021,81,2.755,82,2.517,83,0.663,91,2.881,92,2.884,114,1.857,115,3.358,145,1.428,165,2.113,193,2.113,275,3.228,309,3.339,310,3.339,450,1.515,453,4.045,487,3.358,488,3.358,489,3.358,490,3.358,491,3.358,492,3.021,493,3.358,494,3.358,495,3.358,496,3.358,515,3.178,575,3.568,722,3.507,723,3.358,724,4.045,725,3.178,726,2.187,727,3.361,728,4.274,729,2.881,730,4.045,731,4.702,732,3.021,733,3.568,734,2.44,735,3.568,736,3.358,737,3.821,738,3.568,739,3.821,740,3.821,741,3.358,742,3.021]],["title/interfaces/ColorVariant.html",[0,0.149,743,3.439]],["body/interfaces/ColorVariant.html",[0,0.119,2,0.746,3,0.151,4,0.151,5,0.109,7,0.151,8,0.401,10,1.414,11,0.451,12,0.012,13,0.161,19,1.039,21,0.768,22,1.273,39,0.998,59,1.916,75,0.006,76,0.006,80,1.131,83,0.672,85,2.994,86,3.636,87,0.704,89,1.405,90,0.471,136,0.456,142,1.947,145,1.272,149,1.31,223,1.547,225,1.315,340,1.489,348,2.009,349,1.687,350,2.009,406,2.17,413,0.879,450,1.278,512,2.777,513,1.622,514,1.833,519,1.059,520,1.916,625,3.439,722,2.656,743,4.689,744,3.032,745,7.024,746,6.949,747,7.378,748,3.682,749,4.749,750,4.331,751,3.032,752,4.749,753,4.749,754,4.045,755,3.032,756,3.032,757,3.032,758,3.032,759,3.032,760,2.373,761,3.032,762,3.032,763,4.395,764,3.032,765,2.751,766,3.032,767,2.541,768,3.032,769,4.395,770,2.751,771,3.032,772,3.032,773,3.032,774,3.032,775,3.032,776,3.032,777,3.032,778,3.032,779,3.032,780,3.032,781,3.032,782,3.032,783,3.032,784,2.751,785,3.032,786,3.032,787,3.032,788,5.064,789,5.169,790,3.032,791,3.032,792,3.032,793,3.032,794,3.032,795,3.032,796,3.032,797,3.032,798,3.032,799,3.032,800,3.032,801,3.032,802,3.032,803,4.395,804,4.395,805,3.032,806,5.169,807,3.032,808,4.395,809,3.032,810,3.032,811,3.032,812,3.032,813,3.032,814,3.032,815,3.032,816,3.032,817,3.032,818,3.032,819,3.032,820,3.032,821,3.032,822,3.032,823,5.169,824,2.751,825,3.032,826,4.395,827,3.032,828,4.395,829,4.395,830,3.987,831,3.032,832,3.032,833,3.032,834,2.541,835,3.032,836,4.395,837,3.032,838,3.032,839,3.032,840,3.032,841,3.032,842,3.032,843,3.032,844,3.032,845,3.032,846,4.395,847,3.032,848,3.032,849,1.916,850,2.751,851,2.751,852,3.032]],["title/interfaces/CoverColor.html",[0,0.149,853,2.792]],["body/interfaces/CoverColor.html",[0,0.28,2,1.23,3,0.248,4,0.248,5,0.239,7,0.248,8,0.561,11,0.536,12,0.011,13,0.379,19,1.215,75,0.009,76,0.009,82,2.167,83,0.519,450,1.565,590,2.032,726,2.397,727,2.894,849,4.388,853,5.469,854,2.316,855,3.911,856,5.114,857,3.054,858,2.673,859,3.483,860,3.68,861,3.68,862,3.68,863,3.68,864,3.68,865,2.779,866,2.779,867,3.483,868,3.714,869,3.483,870,2.779]],["title/interfaces/CoverColorPalette.html",[0,0.149,727,2.196]],["body/interfaces/CoverColorPalette.html",[0,0.275,2,1.149,3,0.232,4,0.232,5,0.232,7,0.232,8,0.538,11,0.623,12,0.011,13,0.372,19,1.164,75,0.009,76,0.009,82,2.024,83,0.485,450,1.698,590,1.899,726,2.239,727,3.412,849,2.95,853,5.666,854,2.164,855,3.653,856,3.438,857,2.927,858,2.497,859,4.725,860,4.992,861,4.992,862,4.992,863,4.992,864,4.992,865,2.597,866,2.597,867,3.254,868,3.56,869,3.254,870,2.597]],["title/components/CoverDisplayComponent.html",[84,0.961,375,1.699]],["body/components/CoverDisplayComponent.html",[3,0.151,4,0.151,5,0.159,7,0.151,8,0.403,12,0.012,13,0.162,21,1.313,75,0.006,76,0.006,77,1.852,79,3.994,80,1.243,81,2.665,83,0.653,84,1.313,85,3.492,87,0.707,90,0.473,101,3.433,102,2.124,114,1.219,131,1.912,132,1.852,134,2.359,136,0.458,137,1.321,140,2.922,142,1.95,145,1.085,149,1.117,223,0.728,330,1.365,331,1.635,332,1.412,333,1.412,334,1.412,336,3.074,337,3.074,338,3.099,339,3.159,341,1.365,343,1.134,345,2.124,350,2.922,351,2.384,360,2.384,368,1.412,369,2.044,370,1.738,371,1.239,372,2.633,373,1.412,374,1.412,375,2.546,376,2.829,377,1.412,378,1.365,379,1.412,380,1.365,381,1.321,382,1.412,383,1.201,384,1.239,385,1.239,386,2.044,387,1.365,388,2.633,389,1.365,390,1.412,391,1.365,392,1.279,393,1.412,394,1.365,395,1.412,396,1.279,397,1.365,398,1.365,399,1.412,400,1.365,401,1.321,402,1.412,403,1.365,404,1.412,405,1.365,406,1.279,407,2.546,408,1.412,409,1.365,410,1.321,411,1.365,412,1.412,419,3.695,465,1.432,667,4.702,668,5.68,670,5.68,734,2.359,871,5.68,872,3.476,873,3.451,874,4.343,875,5.031,876,5.031,877,5.912,878,6.48,879,5.031,880,5.031,881,5.031,882,5.031,883,3.476,884,5.031,885,3.476,886,3.476,887,3.476,888,3.476,889,3.047,890,5.153,891,2.764,892,4.41,893,4.41,894,4.41,895,6.48,896,6.48,897,3.476,898,6.48,899,3.451,900,6.48,901,6.48,902,6.48,903,6.48,904,5.031,905,5.031,906,3.476]],["title/interfaces/DirHandleEntry.html",[0,0.149,907,3.439]],["body/interfaces/DirHandleEntry.html",[0,0.152,2,0.952,3,0.192,4,0.192,5,0.249,7,0.192,8,0.476,10,1.328,11,0.455,12,0.012,13,0.206,41,1.793,75,0.008,76,0.008,83,0.683,87,0.898,89,1.793,90,0.601,136,0.581,138,1.793,142,1.201,145,1.668,149,1.755,156,2.849,223,0.925,225,1.678,249,2.564,251,3.038,275,2.152,340,1.311,349,2.152,413,1.042,467,3.018,513,2.07,517,1.793,519,1.35,553,2.697,590,2.119,658,2.26,702,2.697,868,3.977,907,4.727,908,2.697,909,2.152,910,3.51,911,3.242,912,5.585,913,5.97,914,2.849,915,2.849,916,2.445,917,2.338,918,2.697,919,3.984,920,2.697,921,3.293,922,2.849,923,3.51,924,3.028,925,3.028,926,3.242,927,3.869,928,3.869,929,5.892,930,3.869,931,5.211,932,3.869,933,3.242,934,2.641,935,1.994,936,3.869,937,3.869,938,3.869,939,3.869,940,1.994,941,3.869,942,3.242,943,3.869,944,3.869,945,3.632,946,3.51,947,3.869,948,3.869,949,3.869,950,3.51,951,3.51,952,3.869,953,3.869,954,3.869,955,3.51,956,3.869,957,3.028,958,3.51,959,3.869,960,3.869,961,3.869,962,3.51,963,3.242,964,5.892,965,4.727,966,3.51,967,3.869,968,3.869,969,3.869]],["title/components/EqualizerComponent.html",[84,0.961,378,1.699]],["body/components/EqualizerComponent.html",[3,0.132,4,0.132,5,0.144,7,0.132,8,0.365,10,1.285,11,0.232,12,0.012,13,0.142,16,1.203,19,0.641,21,1.445,39,1.576,41,2.467,43,2.665,45,1.682,49,1.961,59,1.682,63,3.92,75,0.006,76,0.006,80,1.248,83,0.592,84,1.214,86,2.413,87,0.618,89,1.234,90,0.414,92,2.645,93,1.682,114,1.103,131,1.731,132,1.676,134,2.136,136,0.4,137,1.155,142,1.487,145,1.607,149,1.348,225,2.077,313,2.313,330,1.193,331,1.48,332,1.234,333,1.234,334,1.234,336,2.783,337,2.783,338,3.046,339,3.097,341,1.193,343,1.359,345,1.856,350,3.526,351,2.084,360,3.125,368,1.234,369,1.851,370,1.574,371,1.083,372,2.467,373,1.234,374,1.234,375,1.193,376,1.083,377,1.234,378,2.385,379,1.234,380,1.193,381,1.155,382,1.234,383,1.049,384,1.083,385,1.083,386,1.851,387,1.193,388,2.467,389,1.193,390,1.234,391,1.193,392,1.118,393,1.234,394,1.193,395,1.234,396,1.118,397,1.193,398,1.193,399,1.234,400,1.193,401,1.155,402,1.234,403,1.193,404,1.234,405,1.193,406,1.118,407,1.193,408,1.234,409,1.193,410,1.155,411,1.193,412,1.234,414,3.216,427,0.983,445,0.954,449,0.929,450,0.6,465,1.654,473,4.79,492,1.764,515,3.339,518,5.472,564,5.632,760,2.084,767,2.231,873,2.084,916,3.027,970,3.037,971,4.346,972,4.346,973,4.555,974,4.555,975,6.505,976,5.465,977,4.555,978,6.072,979,4.555,980,4.555,981,3.037,982,3.037,983,2.645,984,3.037,985,4.555,986,3.037,987,3.037,988,2.415,989,2.415,990,1.856,991,2.231,992,3.037,993,3.993,994,3.037,995,3.037,996,3.037,997,3.037,998,4.555,999,3.037,1000,3.037,1001,3.037,1002,4.555,1003,3.037,1004,4.462,1005,3.037,1006,5.472,1007,3.037,1008,2.415,1009,3.037,1010,5.322,1011,4.555,1012,4.555,1013,4.555,1014,3.037,1015,4.555,1016,3.037,1017,3.037,1018,3.037,1019,4.555,1020,3.037,1021,6.072,1022,3.037,1023,5.465,1024,3.993,1025,3.037,1026,3.037,1027,6.83,1028,6.505,1029,3.037,1030,3.037,1031,5.465,1032,3.037,1033,4.346,1034,4.555,1035,2.231,1036,6.505,1037,3.037,1038,3.037,1039,2.662,1040,3.037,1041,3.037,1042,3.037,1043,3.037,1044,3.037,1045,2.415,1046,3.037,1047,3.037,1048,3.037,1049,3.037,1050,3.037,1051,3.037,1052,3.037,1053,3.037,1054,3.037,1055,3.037,1056,3.037,1057,3.037,1058,3.037,1059,2.415,1060,3.037,1061,3.037]],["title/interfaces/FileData.html",[0,0.149,919,2.396]],["body/interfaces/FileData.html",[0,0.206,2,1.29,3,0.26,4,0.26,5,0.27,7,0.26,8,0.578,11,0.552,12,0.011,13,0.362,75,0.009,76,0.009,145,1.557,275,3.926,450,1.426,730,4.738,908,3.655,909,2.916,918,3.655,919,3.999,1062,3.313,1063,5.243,1064,5.243,1065,5.243,1066,5.243,1067,6.328,1068,5.243,1069,5.243,1070,5.243,1071,5.243,1072,5.243,1073,5.243,1074,5.243,1075,5.243,1076,5.243,1077,5.243,1078,5.243,1079,5.243,1080,5.243,1081,5.243]],["title/components/FileDropOverlayComponent.html",[84,0.961,380,1.699]],["body/components/FileDropOverlayComponent.html",[3,0.125,4,0.125,5,0.256,7,0.19,8,0.35,11,0.404,12,0.011,13,0.134,16,1.397,21,1.174,39,1.26,75,0.006,76,0.006,80,1.334,83,0.262,84,1.174,87,0.585,90,0.392,114,1.059,132,1.608,136,0.379,137,1.093,138,1.776,142,1.996,145,1.443,149,0.639,197,1.972,218,3.883,219,2.998,223,1.537,330,1.13,331,1.42,332,1.168,333,1.168,334,1.168,338,3.023,339,3.069,341,1.13,343,1.283,368,1.168,369,1.776,370,1.51,371,1.025,372,2.581,373,1.168,374,1.168,375,1.13,376,1.025,377,1.168,378,1.13,379,1.168,380,2.32,381,3.253,382,1.168,383,0.994,384,1.025,385,1.025,386,1.776,387,1.13,388,2.399,389,1.13,390,1.168,391,1.13,392,1.058,393,1.168,394,1.13,395,1.168,396,1.058,397,1.13,398,1.13,399,1.168,400,1.13,401,1.093,402,1.168,403,1.13,404,1.168,405,1.13,406,1.608,407,1.13,408,1.168,409,1.13,410,1.093,411,1.13,412,1.168,427,0.943,445,1.108,449,1.618,450,1.045,465,1.281,466,1.972,546,2.287,590,1.885,598,2.684,624,2.52,626,2.52,694,3.831,702,4.087,729,2.421,730,1.757,760,1.972,770,2.287,788,2.998,830,2.287,834,2.112,873,1.972,912,1.972,934,1.717,935,1.974,940,1.974,957,1.972,988,2.287,1045,2.287,1082,2.875,1083,5.106,1084,6.094,1085,6.952,1086,6.952,1087,2.875,1088,5.286,1089,3.413,1090,2.998,1091,4.37,1092,5.286,1093,4.37,1094,5.286,1095,5.286,1096,5.286,1097,4.37,1098,4.37,1099,4.37,1100,7.483,1101,2.875,1102,4.37,1103,2.875,1104,4.37,1105,2.875,1106,3.627,1107,2.875,1108,6.352,1109,2.875,1110,2.875,1111,2.875,1112,2.875,1113,2.875,1114,2.875,1115,2.875,1116,2.875,1117,2.875,1118,2.875,1119,2.875,1120,2.875,1121,2.875,1122,4.37,1123,6.352,1124,2.875,1125,4.37,1126,4.37,1127,2.875,1128,4.37,1129,2.875,1130,4.37,1131,4.37,1132,2.875,1133,4.37,1134,2.875,1135,1.856,1136,4.634,1137,4.634,1138,4.37,1139,2.875,1140,2.875,1141,4.37,1142,5.286,1143,2.52,1144,4.37,1145,2.875,1146,5.905,1147,2.875,1148,2.875,1149,2.875,1150,2.875,1151,3.831,1152,3.475,1153,2.875,1154,2.875,1155,2.875,1156,2.875,1157,2.875,1158,2.875,1159,2.875,1160,2.875,1161,2.875,1162,2.875,1163,5.286,1164,2.875,1165,5.286,1166,2.875,1167,2.52,1168,2.875,1169,3.475,1170,2.875,1171,2.52,1172,2.52,1173,2.875,1174,2.875,1175,2.875,1176,2.875,1177,2.875,1178,2.875,1179,2.875,1180,2.875,1181,2.875,1182,2.875,1183,2.875,1184,2.875,1185,2.875,1186,4.37,1187,2.875,1188,4.37,1189,2.875,1190,2.875,1191,2.875,1192,2.875,1193,2.875,1194,2.875,1195,2.52,1196,3.831,1197,2.875,1198,2.875,1199,2.875,1200,2.875,1201,3.831]],["title/classes/FileLoaderService.html",[136,0.57,921,2.396]],["body/classes/FileLoaderService.html",[3,0.254,4,0.254,5,0.224,7,0.254,8,0.569,11,0.446,12,0.011,13,0.272,75,0.009,76,0.009,83,0.647,90,0.794,136,0.767,343,1.471,427,1.533,445,1.489,908,4.877,909,3.891,919,3.227,920,3.56,921,3.935,926,5.63,933,5.862,934,3.135,942,5.862,1062,4.421,1202,5.826,1203,5.826,1204,8.618,1205,7.666,1206,5.826,1207,5.826,1208,5.826]],["title/interfaces/FrequencyBarsConfig.html",[0,0.149,301,2.196]],["body/interfaces/FrequencyBarsConfig.html",[0,0.281,2,1.018,3,0.206,4,0.206,5,0.149,7,0.206,8,0.498,10,1.737,11,0.615,12,0.011,13,0.392,18,2.824,19,1.04,22,1.737,25,2.614,75,0.008,76,0.008,284,2.615,285,2.615,286,3.603,287,2.742,288,2.742,289,2.742,290,2.501,291,2.302,292,2.397,293,2.501,294,2.501,295,2.397,296,2.501,297,2.501,298,2.501,299,2.615,300,2.615,301,3.157,302,4.067,303,3.898,304,3.898,305,3.898,306,2.397,307,3.157,308,2.501,309,2.708,310,2.708,311,3.157,312,2.501,313,2.397,314,2.501,315,2.615,316,2.742,317,2.397,318,3.53,319,2.501,320,2.302,321,3.851,322,2.916,323,2.501,324,3.157,325,3.603,326,3.603,327,2.397,328,3.157,329,3.603]],["title/interfaces/GamepadAction.html",[0,0.149,17,2.967]],["body/interfaces/GamepadAction.html",[0,0.256,1,3.093,2,1.034,3,0.209,4,0.209,5,0.151,6,3.093,7,0.345,8,0.502,9,3.287,10,1.635,11,0.626,12,0.012,13,0.386,14,4.798,15,3.519,16,1.266,17,5.098,18,3.019,19,0.986,20,4.798,21,1.65,22,2.577,23,5.283,24,3.093,25,2.64,26,3.287,27,3.287,28,3.093,29,2.927,30,3.287,31,3.093,32,3.093,33,3.093,34,2.927,35,2.927,36,4.611,37,2.783,38,3.287,39,1.811,40,3.287,41,2.551,42,3.287,43,3.061,44,3.287,45,3.477,46,3.287,47,3.093,48,3.287,49,3.093,50,3.287,51,3.093,52,3.287,53,3.287,54,3.287,55,2.927,56,3.287,57,3.287,58,3.287,59,2.654,60,3.287,61,3.093,62,3.287,63,3.093,64,3.287,65,3.287,66,3.287,67,3.287,68,3.287,69,3.287,70,2.927,71,3.287,72,3.287,73,3.287,74,3.287,75,0.008,76,0.008,450,1.468]],["title/injectables/GamepadService.html",[413,0.758,1209,2.792]],["body/injectables/GamepadService.html",[1,3.269,3,0.117,4,0.117,5,0.085,7,0.313,8,0.332,9,2.842,10,1.622,11,0.498,12,0.012,13,0.125,14,5.019,16,1.626,18,3.083,20,4.9,21,1.445,22,0.987,23,1.732,24,3.677,26,4.464,27,4.464,28,3.677,29,3.48,31,1.732,32,4.379,33,3.677,34,3.094,35,2.532,37,2.94,39,1.775,70,3.094,75,0.005,76,0.005,80,1.092,83,0.377,90,0.365,136,0.353,138,1.09,142,1.127,145,1.694,149,1.445,223,1.611,225,1.924,228,2.133,235,2.133,340,0.797,343,1.301,413,0.727,415,1.02,427,0.894,445,1.193,449,1.743,450,1.125,465,1.811,519,0.821,598,2.104,658,1.575,671,1.639,1089,2.675,1135,1.732,1209,2.675,1210,2.682,1211,5.063,1212,5.063,1213,4.143,1214,4.143,1215,5.063,1216,4.143,1217,4.143,1218,4.143,1219,2.682,1220,7.345,1221,4.143,1222,2.682,1223,7.345,1224,2.682,1225,5.695,1226,2.682,1227,7.006,1228,4.143,1229,2.682,1230,2.682,1231,2.682,1232,2.682,1233,2.682,1234,2.682,1235,2.682,1236,2.682,1237,2.682,1238,2.682,1239,5.063,1240,2.682,1241,5.063,1242,2.682,1243,2.682,1244,5.695,1245,2.682,1246,2.682,1247,2.682,1248,2.682,1249,4.143,1250,5.063,1251,5.396,1252,4.143,1253,2.351,1254,4.143,1255,2.682,1256,2.682,1257,2.682,1258,2.682,1259,4.143,1260,2.682,1261,2.682,1262,2.682,1263,2.682,1264,2.682,1265,2.682,1266,3.719,1267,6.156,1268,2.682,1269,2.682,1270,5.063,1271,2.682,1272,2.682,1273,2.682,1274,2.682,1275,2.682,1276,2.682,1277,2.682,1278,4.143,1279,2.682,1280,2.682,1281,2.682,1282,2.682,1283,2.682,1284,2.682,1285,5.063,1286,4.143,1287,3.043,1288,4.143,1289,4.143,1290,2.682,1291,2.682,1292,2.682,1293,4.143,1294,2.682,1295,2.682,1296,2.682,1297,4.143,1298,4.143,1299,5.063,1300,5.063,1301,5.695,1302,4.521,1303,5.063,1304,2.682,1305,5.695,1306,2.682,1307,5.704,1308,4.143,1309,4.143,1310,4.143,1311,2.682,1312,5.695,1313,2.682,1314,2.682,1315,4.143,1316,2.682,1317,2.682,1318,4.143,1319,4.143,1320,2.682,1321,2.682,1322,2.682]],["title/interfaces/Hotkey.html",[0,0.149,1323,2.967]],["body/interfaces/Hotkey.html",[0,0.191,2,0.858,3,0.173,4,0.173,5,0.125,7,0.173,8,0.443,11,0.527,12,0.012,13,0.297,19,1.121,75,0.007,76,0.007,83,0.659,87,0.81,90,0.542,136,0.524,145,1.718,149,1.608,166,2.175,175,3.067,207,1.673,223,1.335,340,1.182,348,2.311,349,1.94,370,2.501,383,1.375,384,1.974,385,1.419,413,0.971,431,2.923,467,3.904,517,1.617,519,1.218,557,2.923,598,2.812,658,2.105,716,2.569,945,3.384,1004,2.73,1266,2.923,1287,2.923,1323,3.799,1324,3.164,1325,5.317,1326,5.275,1327,5.647,1328,4.067,1329,2.923,1330,3.384,1331,2.311,1332,4.404,1333,3.799,1334,5.476,1335,3.164,1336,2.569,1337,2.431,1338,3.164,1339,3.164,1340,3.216,1341,2.923,1342,3.164,1343,4.067,1344,3.164,1345,3.164,1346,2.431,1347,3.164,1348,3.164,1349,3.164,1350,3.164,1351,3.164,1352,3.164,1353,3.164,1354,3.164,1355,4.404,1356,3.164,1357,4.404,1358,4.404,1359,4.404,1360,3.164,1361,3.164,1362,3.164,1363,3.164,1364,3.164,1365,4.067,1366,3.164,1367,3.164,1368,3.164,1369,3.164,1370,5.065,1371,3.164,1372,4.404,1373,3.164,1374,3.164,1375,4.404,1376,3.164,1377,3.164,1378,3.164,1379,3.164,1380,3.164,1381,3.164,1382,3.164,1383,4.404,1384,3.164,1385,3.164,1386,3.164,1387,3.164,1388,5.476,1389,3.164,1390,4.404,1391,3.164,1392,3.164,1393,3.164,1394,1.513,1395,2.73,1396,3.164,1397,3.164,1398,3.164]],["title/interfaces/HotkeyInfo.html",[0,0.149,1336,2.792]],["body/interfaces/HotkeyInfo.html",[0,0.193,2,0.873,3,0.176,4,0.176,5,0.128,7,0.176,8,0.448,11,0.428,12,0.012,13,0.3,19,1.087,75,0.007,76,0.007,83,0.663,87,0.823,90,0.551,136,0.533,145,1.724,149,1.617,166,2.201,175,3.103,207,1.701,223,1.346,340,1.202,348,2.35,349,1.973,370,1.936,383,1.398,384,1.997,385,1.442,413,0.982,431,2.971,467,3.922,517,1.644,519,1.238,557,2.971,598,2.844,658,2.129,716,2.612,1004,2.775,1266,2.971,1287,2.971,1323,2.775,1324,3.217,1325,4.114,1326,5.299,1327,5.094,1328,4.114,1329,2.971,1330,3.423,1331,2.35,1332,4.455,1333,3.843,1334,6.356,1335,3.217,1336,3.617,1337,2.472,1338,3.217,1339,3.217,1340,3.253,1341,2.971,1342,3.217,1343,4.114,1344,3.217,1345,3.217,1346,2.472,1347,3.217,1348,3.217,1349,3.217,1350,3.217,1351,3.217,1352,3.217,1353,3.217,1354,3.217,1355,4.455,1356,3.217,1357,4.455,1358,4.455,1359,4.455,1360,3.217,1361,3.217,1362,3.217,1363,3.217,1364,3.217,1365,4.114,1366,3.217,1367,3.217,1368,3.217,1369,3.217,1370,5.11,1371,3.217,1372,4.455,1373,3.217,1374,3.217,1375,4.455,1376,3.217,1377,3.217,1378,3.217,1379,3.217,1380,3.217,1381,3.217,1382,3.217,1383,4.455,1384,3.217,1385,3.217,1386,3.217,1387,3.217,1388,5.515,1389,3.217,1390,4.455,1391,3.217,1392,3.217,1393,3.217,1394,1.538,1395,2.775,1396,3.217,1397,3.217,1398,3.217]],["title/interfaces/HotkeysData.html",[0,0.149,1399,3.439]],["body/interfaces/HotkeysData.html",[0,0.193,2,1.208,3,0.244,4,0.244,5,0.177,7,0.244,8,0.555,11,0.428,12,0.011,13,0.324,75,0.009,76,0.009,83,0.75,84,1.54,87,1.14,90,0.763,94,4.478,95,3.617,104,2.844,106,2.53,131,2.129,132,2.062,134,2.627,136,0.738,149,1.244,175,4.173,338,2.062,339,2.129,383,1.936,384,2.686,385,2.807,1330,3.423,1331,3.253,1336,3.617,1340,3.253,1346,3.423,1394,2.129,1395,5.401,1399,5.515,1400,4.91,1401,4.114,1402,4.114,1403,5.094,1404,4.91,1405,4.238,1406,3.522,1407,4.114,1408,4.91,1409,4.114,1410,4.114,1411,4.91,1412,4.91,1413,4.455,1414,4.91]],["title/components/HotkeysHelpDialogComponent.html",[84,0.961,383,1.494]],["body/components/HotkeysHelpDialogComponent.html",[0,0.134,3,0.169,4,0.169,5,0.172,7,0.169,8,0.436,12,0.011,13,0.254,16,1.026,21,1.209,41,2.768,43,2.655,75,0.007,76,0.007,80,1.307,83,0.677,84,1.396,87,0.79,90,0.529,92,2.372,94,4.059,95,2.507,104,1.972,106,1.754,114,1.319,131,2.07,132,2.004,134,2.553,136,0.512,137,1.476,149,0.863,175,2.151,330,1.526,331,1.769,332,1.578,333,1.578,334,1.578,338,3.139,339,3.207,341,1.526,343,1.307,368,1.578,369,2.212,370,1.881,371,1.385,372,2.768,373,1.578,374,1.578,375,1.526,376,1.385,377,1.578,378,1.526,379,1.578,380,1.526,381,1.476,382,1.578,383,2.354,384,2.723,385,2.919,386,2.212,387,1.526,388,2.768,389,1.526,390,1.578,391,1.526,392,1.429,393,1.578,394,1.526,395,1.578,396,1.429,397,1.526,398,1.526,399,1.578,400,1.526,401,1.476,402,1.578,403,1.526,404,1.578,405,1.526,406,1.429,407,1.526,408,1.578,409,1.526,410,1.476,411,1.526,412,1.578,427,1.175,441,4.33,445,0.814,465,1.319,1323,3.735,1330,2.373,1331,2.256,1336,2.507,1340,3.162,1346,3.842,1394,2.39,1395,2.664,1399,3.088,1400,6.289,1401,2.853,1402,2.853,1403,4.618,1404,3.404,1405,3.842,1406,3.192,1407,3.999,1408,4.772,1409,3.999,1410,3.999,1411,6.289,1412,3.404,1413,5.419,1414,3.404,1415,3.884,1416,3.404,1417,3.884,1418,3.884,1419,3.884,1420,6.814,1421,7.437,1422,6.814,1423,5.445,1424,5.445,1425,6.814,1426,5.445,1427,5.445,1428,4.772,1429,5.445,1430,5.445,1431,5.445,1432,5.445]],["title/injectables/HotkeysService.html",[413,0.758,1337,2.643]],["body/injectables/HotkeysService.html",[0,0.175,3,0.154,4,0.154,5,0.111,7,0.154,8,0.407,11,0.529,12,0.012,13,0.278,16,1.828,19,1.07,21,1.45,75,0.007,76,0.007,80,0.976,83,0.63,87,0.718,90,0.481,136,0.465,145,1.671,149,1.537,166,2.343,175,3.616,207,2.139,223,1.25,340,1.049,343,1.527,348,2.051,349,1.721,370,2.061,383,1.22,384,2.327,385,1.259,413,0.892,415,1.342,427,1.098,431,4.794,445,1.51,449,1.557,450,1.29,465,1.581,467,3.932,517,1.434,519,1.08,557,4.794,598,2.583,658,1.934,716,3.285,1004,2.422,1266,2.593,1287,2.593,1323,2.422,1324,2.808,1325,3.737,1326,4.478,1327,5.082,1328,3.737,1329,2.593,1330,3.645,1331,2.051,1332,4.046,1333,3.49,1334,5.191,1335,2.808,1336,2.279,1337,3.109,1338,2.808,1339,2.808,1340,2.955,1341,2.593,1342,4.744,1343,5.082,1344,4.046,1345,4.744,1346,3.645,1347,4.744,1348,2.808,1349,2.808,1350,2.808,1351,2.808,1352,2.808,1353,2.808,1354,4.046,1355,4.046,1356,2.808,1357,4.046,1358,4.046,1359,4.046,1360,2.808,1361,2.808,1362,2.808,1363,2.808,1364,2.808,1365,3.737,1366,2.808,1367,2.808,1368,2.808,1369,2.808,1370,4.744,1371,2.808,1372,4.046,1373,2.808,1374,2.808,1375,4.046,1376,2.808,1377,2.808,1378,2.808,1379,2.808,1380,4.046,1381,2.808,1382,2.808,1383,4.046,1384,2.808,1385,2.808,1386,5.191,1387,5.191,1388,5.191,1389,2.808,1390,4.046,1391,2.808,1392,2.808,1393,2.808,1394,1.342,1395,2.422,1396,2.808,1397,2.808,1398,2.808,1433,5.088,1434,5.088,1435,3.531,1436,3.531,1437,3.531,1438,3.531,1439,3.531,1440,3.531,1441,3.531,1442,3.531,1443,3.531,1444,3.531,1445,3.531]],["title/interfaces/Id3CoverPicture.html",[0,0.149,724,2.643]],["body/interfaces/Id3CoverPicture.html",[0,0.249,2,1.288,3,0.26,4,0.26,5,0.188,7,0.26,8,0.577,10,1.425,11,0.551,12,0.011,13,0.336,19,1.192,75,0.009,76,0.009,77,2.197,81,3.162,83,0.543,92,2.6,114,1.446,165,2.425,193,2.425,320,3.778,671,4.406,724,4.734,725,3.647,728,4.655,729,3.306,734,3.864,854,2.425,857,2.6,1394,3.059,1446,5.232,1447,4.747]],["title/interfaces/Id3Tags.html",[0,0.149,857,1.884]],["body/interfaces/Id3Tags.html",[0,0.234,2,1.17,3,0.236,4,0.236,5,0.171,7,0.236,8,0.544,10,1.343,11,0.647,12,0.011,13,0.317,19,1.218,75,0.009,76,0.009,77,2.865,81,4.123,83,0.494,92,3.391,114,1.314,165,3.162,193,3.162,320,2.645,450,1.703,671,4.154,724,4.756,725,3.315,728,5.025,729,3.005,734,3.759,854,2.204,857,2.961,1394,2.062,1446,4.755,1447,6.19,1448,6.798]],["title/injectables/Id3TagsService.html",[413,0.758,1449,3.439]],["body/injectables/Id3TagsService.html",[3,0.184,4,0.184,5,0.241,7,0.184,10,1.141,11,0.442,12,0.012,13,0.197,16,1.954,20,2.729,21,0.939,39,1.219,75,0.007,76,0.007,80,0.811,83,0.599,90,0.576,136,0.557,138,1.718,145,1.647,149,1.282,166,2.583,175,2.342,192,2.729,223,1.55,225,2.499,340,1.256,343,1.108,413,1.012,415,1.607,427,1.246,445,0.886,449,1.294,450,0.835,458,2.455,465,1.024,519,1.294,536,3.362,590,2.837,598,3.339,725,4.018,726,1.778,854,2.671,857,1.842,858,1.983,867,3.528,868,3.918,869,2.583,870,2.815,934,2.268,963,5.19,1089,3.728,1135,2.729,1151,3.706,1449,4.592,1450,4.228,1451,5.061,1452,4.228,1453,5.061,1454,7.066,1455,4.228,1456,5.774,1457,2.455,1458,5.433,1459,4.228,1460,4.228,1461,7.397,1462,6.575,1463,3.706,1464,4.228,1465,3.706,1466,3.706,1467,4.228,1468,5.774,1469,4.228,1470,5.774,1471,4.228,1472,5.774,1473,4.228,1474,3.362,1475,4.228,1476,4.228,1477,4.228,1478,3.706,1479,6.575,1480,4.228,1481,3.105,1482,4.228,1483,3.706,1484,4.228,1485,3.706,1486,5.774,1487,4.228,1488,4.228,1489,4.228,1490,4.228,1491,4.228,1492,4.228,1493,4.228,1494,6.575,1495,4.228,1496,4.228,1497,4.228,1498,4.228,1499,4.228,1500,5.774,1501,5.774,1502,4.228,1503,4.228,1504,4.228,1505,4.228,1506,4.228,1507,4.228,1508,4.228,1509,4.228,1510,4.228,1511,4.228]],["title/interfaces/IndexedDbTrackMetadata.html",[0,0.149,91,2.396]],["body/interfaces/IndexedDbTrackMetadata.html",[0,0.266,2,1.136,3,0.229,4,0.229,5,0.231,7,0.229,8,0.534,11,0.589,12,0.011,13,0.385,19,1.186,25,2.806,75,0.009,76,0.009,77,1.939,79,3.059,81,2.79,82,2.537,83,0.667,91,3.697,92,2.907,114,1.866,115,3.401,145,1.44,165,2.14,193,2.14,275,3.874,309,2.295,310,2.295,450,1.319,453,4.078,487,3.401,488,3.401,489,3.401,490,3.401,491,3.401,492,3.059,493,3.401,494,3.401,495,3.401,496,3.401,515,3.219,575,3.613,722,2.79,723,3.401,724,4.078,725,3.219,726,2.215,727,3.388,728,4.309,729,2.918,730,4.706,731,4.972,732,3.059,733,3.613,734,2.47,735,3.613,736,3.401,737,3.869,738,3.613,739,3.869,740,3.869,741,3.401,742,3.059]],["title/interfaces/LastfmAlbum.html",[0,0.149,1512,2.792]],["body/interfaces/LastfmAlbum.html",[0,0.24,2,0.881,3,0.178,4,0.178,5,0.129,7,0.178,8,0.451,10,0.807,11,0.533,12,0.012,13,0.191,19,1.171,39,1.178,75,0.007,76,0.007,77,2.563,80,1.336,82,2.144,83,0.688,87,0.831,90,0.556,136,0.538,142,1.534,145,1.63,149,1.779,165,2.969,166,1.605,207,3.177,223,1.583,249,2.011,251,1.605,340,1.213,413,0.989,517,1.66,519,1.25,590,2.303,721,2.263,726,1.718,734,1.916,854,1.66,857,2.457,858,1.916,865,1.992,866,1.992,917,2.164,934,2.216,935,1.845,940,1.845,1394,2.455,1457,2.373,1512,4.17,1513,2.638,1514,2.638,1515,4.045,1516,4.497,1517,2.802,1518,2.638,1519,2.496,1520,2.638,1521,2.263,1522,3.446,1523,3.446,1524,3.446,1525,2.638,1526,3.641,1527,2.496,1528,2.802,1529,2.802,1530,2.802,1531,2.802,1532,2.802,1533,2.802,1534,2.638,1535,2.496,1536,3.446,1537,2.802,1538,2.802,1539,2.638,1540,2.638,1541,2.638,1542,2.802,1543,2.802,1544,2.802,1545,2.802,1546,2.638,1547,2.802,1548,3.641,1549,2.802,1550,2.802,1551,2.802,1552,2.802,1553,2.802,1554,2.802,1555,2.802,1556,2.802,1557,2.802,1558,4.431,1559,2.802,1560,2.802,1561,2.638,1562,4.431,1563,5.013,1564,5.013,1565,2.802,1566,2.802,1567,2.802,1568,3.869,1569,2.802,1570,2.802,1571,2.802,1572,2.802,1573,2.802,1574,2.802,1575,2.802]],["title/interfaces/LastfmErrorResponse.html",[0,0.149,1524,2.643]],["body/interfaces/LastfmErrorResponse.html",[0,0.241,2,0.89,3,0.18,4,0.18,5,0.13,7,0.18,8,0.454,10,1.283,11,0.497,12,0.012,13,0.192,19,1.155,39,1.19,75,0.007,76,0.007,77,2.574,80,0.791,82,2.158,83,0.69,87,0.84,90,0.562,136,0.544,142,1.545,145,1.635,149,1.783,165,2.307,166,1.621,207,3.187,223,1.588,249,2.024,251,1.621,340,1.226,413,0.996,517,1.676,519,1.262,590,2.702,721,2.285,726,1.735,734,1.935,854,1.676,857,2.473,858,1.935,865,2.012,866,2.012,917,2.186,934,2.231,935,1.864,940,1.864,1394,2.468,1457,2.396,1512,3.666,1513,2.664,1514,2.664,1515,2.396,1516,3.666,1517,2.83,1518,2.664,1519,2.521,1520,2.664,1521,2.285,1522,3.47,1523,3.47,1524,3.967,1525,4.515,1526,3.666,1527,2.521,1528,2.83,1529,2.83,1530,2.83,1531,2.83,1532,2.83,1533,2.83,1534,2.664,1535,2.521,1536,3.47,1537,2.83,1538,2.83,1539,2.664,1540,2.664,1541,2.664,1542,2.83,1543,2.83,1544,2.83,1545,2.83,1546,2.664,1547,2.83,1548,3.666,1549,2.83,1550,2.83,1551,2.83,1552,2.83,1553,2.83,1554,2.83,1555,2.83,1556,2.83,1557,2.83,1558,4.454,1559,2.83,1560,2.83,1561,2.664,1562,4.454,1563,5.031,1564,5.031,1565,2.83,1566,2.83,1567,2.83,1568,3.895,1569,2.83,1570,2.83,1571,2.83,1572,2.83,1573,2.83,1574,2.83,1575,2.83]],["title/interfaces/LastfmImage.html",[0,0.149,1516,2.792]],["body/interfaces/LastfmImage.html",[0,0.241,2,0.89,3,0.18,4,0.18,5,0.13,7,0.18,8,0.454,10,0.815,11,0.497,12,0.012,13,0.192,19,1.173,39,1.19,75,0.007,76,0.007,77,2.574,80,0.791,82,2.158,83,0.69,87,0.84,90,0.562,136,0.544,142,1.545,145,1.635,149,1.783,165,2.307,166,1.621,207,3.187,223,1.588,249,2.024,251,1.621,340,1.226,413,0.996,517,1.676,519,1.262,590,2.315,721,2.285,726,1.735,734,1.935,854,1.676,857,2.473,858,1.935,865,2.012,866,2.012,917,2.186,934,2.231,935,1.864,940,1.864,1394,2.468,1457,2.396,1512,3.666,1513,2.664,1514,2.664,1515,2.396,1516,4.192,1517,2.83,1518,2.664,1519,2.521,1520,2.664,1521,3.874,1522,4.481,1523,3.47,1524,3.47,1525,2.664,1526,3.666,1527,2.521,1528,2.83,1529,2.83,1530,2.83,1531,2.83,1532,2.83,1533,2.83,1534,2.664,1535,2.521,1536,3.47,1537,2.83,1538,2.83,1539,2.664,1540,2.664,1541,2.664,1542,2.83,1543,2.83,1544,2.83,1545,2.83,1546,2.664,1547,2.83,1548,3.666,1549,2.83,1550,2.83,1551,2.83,1552,2.83,1553,2.83,1554,2.83,1555,2.83,1556,2.83,1557,2.83,1558,4.454,1559,2.83,1560,2.83,1561,2.664,1562,4.454,1563,5.031,1564,5.031,1565,2.83,1566,2.83,1567,2.83,1568,3.895,1569,2.83,1570,2.83,1571,2.83,1572,2.83,1573,2.83,1574,2.83,1575,2.83]],["title/injectables/LastfmMetadataService.html",[413,0.758,1527,2.643]],["body/injectables/LastfmMetadataService.html",[0,0.24,3,0.178,4,0.178,5,0.129,7,0.178,10,0.808,11,0.432,12,0.012,13,0.191,19,1.128,39,1.18,75,0.007,76,0.007,77,2.565,80,1.083,82,2.146,83,0.688,87,0.832,90,0.557,136,0.539,142,1.536,145,1.631,149,1.779,165,2.293,166,1.607,207,3.179,223,1.584,249,2.485,251,1.607,340,1.215,343,0.785,413,0.99,415,1.555,427,1.218,445,0.857,449,1.252,450,0.808,517,1.662,519,1.252,590,2.304,721,2.266,726,1.72,734,1.919,854,2.293,857,3.036,858,1.919,865,1.995,866,1.995,870,1.995,917,2.167,934,2.539,935,1.848,940,1.848,1394,2.457,1457,2.376,1512,3.645,1513,3.645,1514,2.641,1515,2.376,1516,3.645,1517,2.806,1518,2.641,1519,2.5,1520,2.641,1521,2.266,1522,3.449,1523,3.449,1524,3.449,1525,2.641,1526,3.645,1527,3.449,1528,2.806,1529,2.806,1530,2.806,1531,2.806,1532,2.806,1533,2.806,1534,3.645,1535,2.5,1536,3.449,1537,2.806,1538,2.806,1539,2.641,1540,2.641,1541,2.641,1542,2.806,1543,2.806,1544,2.806,1545,2.806,1546,2.641,1547,2.806,1548,3.645,1549,2.806,1550,2.806,1551,2.806,1552,2.806,1553,2.806,1554,2.806,1555,2.806,1556,2.806,1557,2.806,1558,4.434,1559,2.806,1560,2.806,1561,2.641,1562,4.434,1563,5.016,1564,5.016,1565,2.806,1566,2.806,1567,2.806,1568,3.873,1569,2.806,1570,2.806,1571,2.806,1572,2.806,1573,2.806,1574,2.806,1575,2.806,1576,4.948,1577,4.091]],["title/interfaces/LastfmSuccessResponse.html",[0,0.149,1523,2.643]],["body/interfaces/LastfmSuccessResponse.html",[0,0.242,2,0.899,3,0.181,4,0.181,5,0.131,7,0.181,8,0.458,10,0.823,11,0.437,12,0.012,13,0.194,19,1.132,39,1.202,75,0.007,76,0.007,77,2.865,80,0.799,82,2.173,83,0.692,87,0.848,90,0.568,136,0.549,142,1.555,145,1.64,149,1.787,165,2.323,166,1.637,207,3.197,223,1.593,249,2.038,251,1.637,340,1.238,413,1.003,517,1.693,519,1.275,590,2.327,721,2.308,726,1.752,734,1.954,854,1.693,857,2.49,858,1.954,865,2.032,866,2.032,917,2.207,934,2.246,935,1.882,940,1.882,1394,2.481,1457,2.42,1512,4.534,1513,2.69,1514,2.69,1515,2.42,1516,3.691,1517,2.859,1518,2.69,1519,2.546,1520,2.69,1521,2.308,1522,3.493,1523,3.988,1524,3.493,1525,2.69,1526,3.691,1527,2.546,1528,2.859,1529,2.859,1530,2.859,1531,2.859,1532,2.859,1533,2.859,1534,2.69,1535,2.546,1536,3.493,1537,2.859,1538,2.859,1539,2.69,1540,2.69,1541,2.69,1542,2.859,1543,2.859,1544,2.859,1545,2.859,1546,2.69,1547,2.859,1548,3.691,1549,2.859,1550,2.859,1551,2.859,1552,2.859,1553,2.859,1554,2.859,1555,2.859,1556,2.859,1557,2.859,1558,4.477,1559,2.859,1560,2.859,1561,2.69,1562,4.477,1563,5.049,1564,5.049,1565,2.859,1566,2.859,1567,2.859,1568,3.922,1569,2.859,1570,2.859,1571,2.859,1572,2.859,1573,2.859,1574,2.859,1575,2.859]],["title/injectables/LegacyFileLoaderService.html",[413,0.758,1578,3.791]],["body/injectables/LegacyFileLoaderService.html",[3,0.211,4,0.211,5,0.27,7,0.307,8,0.506,12,0.012,13,0.226,21,1.076,39,1.398,75,0.008,76,0.008,83,0.641,89,1.969,90,0.66,136,0.638,138,1.969,142,1.915,145,1.365,149,1.076,156,4.084,166,1.904,223,1.475,225,2.677,249,2.761,251,1.904,340,1.44,343,1.432,413,1.109,415,1.842,427,1.365,445,1.325,465,1.174,519,1.483,546,3.854,598,2.461,658,1.842,702,4.561,908,4.731,909,3.775,911,3.56,918,2.962,919,2.685,920,2.962,921,3.504,922,3.129,926,5.172,933,5.172,934,2.766,942,5.483,1106,3.325,1474,3.854,1485,4.248,1578,5.545,1579,7.743,1580,4.847,1581,4.847,1582,4.847,1583,4.847,1584,4.847,1585,4.847,1586,4.847,1587,4.847,1588,4.847,1589,4.847,1590,4.847,1591,4.847,1592,4.847,1593,4.847,1594,4.847,1595,4.847,1596,4.847,1597,4.847,1598,4.847,1599,4.847,1600,4.847,1601,4.847,1602,4.847]],["title/components/LibraryComponent.html",[84,0.961,137,1.644]],["body/components/LibraryComponent.html",[0,0.051,3,0.065,4,0.065,5,0.155,7,0.174,8,0.204,10,1.29,11,0.475,12,0.012,13,0.119,16,1.297,19,1.039,21,1.417,39,1.151,75,0.003,76,0.003,77,2.74,78,1.303,79,1.952,80,1.39,81,1.78,82,0.971,83,0.618,84,0.746,85,2.945,86,1.353,87,0.302,88,2.306,89,1.365,90,0.202,91,3.874,92,3.187,93,0.823,94,2.17,95,0.959,96,2.673,97,2.946,98,2.946,99,2.469,100,1.019,101,2.114,102,0.908,103,2.673,104,0.755,105,2.673,106,0.671,107,2.673,108,2.673,109,2.673,110,1.182,111,2.673,112,1.091,113,0.755,114,1.089,115,0.959,116,2.21,117,0.908,118,2.673,119,1.091,120,2.946,121,2.946,122,2.946,123,2.946,124,2.946,125,1.303,126,2.946,127,1.091,128,1.091,129,2.931,130,1.303,131,0.971,132,0.94,133,2.24,134,1.198,135,2.24,136,0.196,137,1.517,138,1.038,139,1.561,140,1.484,141,2.24,142,2.04,143,4.606,144,2.946,145,1.725,146,3.497,147,2.24,148,2.24,149,1.625,150,2.24,151,2.24,152,2.24,153,2.24,154,2.24,155,2.946,156,3.17,157,3.94,158,2.673,159,2.946,160,5.841,161,4.606,162,2.24,163,2.24,164,2.24,165,3.126,166,1.567,167,2.24,168,3.606,169,2.24,170,2.946,171,3.497,172,4.863,173,3.497,174,4.303,175,2.21,176,2.032,177,2.673,178,4.606,179,2.24,180,1.877,181,3.497,182,2.24,183,2.24,184,2.24,185,2.24,186,2.24,187,2.24,188,2.24,189,5.443,190,2.24,191,2.24,192,2.576,193,1.621,194,2.24,195,4.303,196,2.24,197,1.753,198,4.303,199,2.24,200,2.24,201,4.303,202,2.24,203,2.24,204,1.561,205,3.497,206,2.24,207,2.941,208,3.497,209,2.24,210,3.497,211,2.24,212,2.24,213,2.24,214,2.24,215,2.24,216,2.24,217,2.032,218,1.877,219,1.753,220,2.24,221,2.24,222,2.24,223,0.535,224,1.303,225,1.278,226,1.182,227,1.303,228,1.182,229,1.182,230,1.091,231,1.091,232,2.946,233,1.303,234,3.497,235,1.182,236,2.24,237,1.303,238,1.303,239,1.019,240,1.303,241,2.24,242,1.303,243,1.303,244,2.032,245,2.24,246,1.303,247,2.24,248,1.303,249,2.419,250,2.032,251,2.278,252,1.182,253,1.303,254,1.303,255,2.24,256,2.946,257,1.303,258,3.497,259,1.303,260,2.24,261,2.24,262,3.497,263,1.182,264,1.303,265,1.303,266,1.303,267,1.303,268,1.303,269,2.24,270,1.303,271,2.24,272,2.24,273,2.946,274,1.303,275,0.725,276,1.303,277,1.303,278,1.303,279,1.182,280,2.24,281,2.24,282,2.032,283,1.303,330,0.584,331,0.83,332,0.604,333,0.604,334,0.604,338,2.608,339,2.579,341,0.584,343,1.428,368,0.604,369,1.038,370,0.883,371,0.53,372,1.621,373,0.604,374,0.604,375,0.584,376,0.53,377,0.604,378,0.584,379,0.604,380,0.584,381,0.565,382,0.604,383,0.513,384,0.53,385,0.53,386,1.038,387,0.584,388,1.621,389,0.584,390,0.604,391,0.584,392,0.547,393,0.604,394,0.584,395,0.604,396,0.547,397,0.584,398,0.584,399,0.604,400,0.584,401,0.565,402,0.604,403,0.584,404,0.604,405,0.584,406,0.547,407,0.584,408,0.604,409,0.584,410,0.565,411,0.584,412,0.604,427,0.551,445,1.301,449,1.9,450,1.227,465,1.504,597,3.606,1603,2.555,1604,2.555,1605,2.555,1606,2.24,1607,2.555,1608,2.555,1609,2.555,1610,2.555,1611,2.555,1612,2.555,1613,2.24,1614,1.486,1615,1.486,1616,1.486,1617,1.486,1618,1.486,1619,1.486,1620,1.486,1621,1.486,1622,1.486,1623,1.486,1624,1.486,1625,1.486,1626,1.486,1627,1.486,1628,1.486,1629,1.486,1630,1.486,1631,1.486,1632,1.486,1633,1.486,1634,1.486,1635,1.486,1636,1.486,1637,4.909,1638,2.555,1639,3.606,1640,2.555,1641,2.555,1642,3.99,1643,3.99,1644,2.555,1645,3.99,1646,3.99,1647,3.99,1648,2.555]],["title/injectables/LibraryService.html",[129,3.177,413,0.758]],["body/injectables/LibraryService.html",[3,0.222,4,0.222,5,0.161,7,0.222,8,0.523,12,0.011,13,0.238,21,1.452,75,0.008,76,0.008,83,0.716,87,1.038,89,2.932,90,0.695,91,2.826,93,2.826,114,1.236,116,3.622,117,3.117,129,4.803,136,0.672,139,3.117,142,2.255,145,1.411,149,1.133,223,1.37,249,2.573,251,2.569,340,1.515,343,1.384,413,1.147,415,1.939,421,5.739,427,1.411,445,1.069,465,1.584,498,4.803,513,2.392,517,2.073,519,1.561,590,2.573,592,4.057,595,4.057,914,3.294,915,3.294,916,2.826,917,2.702,924,3.5,925,3.5,934,2.569,935,2.304,940,2.304,1394,1.939,1649,5.101,1650,7.216,1651,7.611,1652,5.101,1653,5.101,1654,5.101,1655,4.472,1656,5.101,1657,5.101,1658,5.101,1659,6.539,1660,5.101,1661,5.101,1662,6.539,1663,5.101,1664,5.101,1665,5.101,1666,4.057,1667,4.472,1668,2.963,1669,5.101,1670,6.539,1671,5.101,1672,5.101,1673,5.101]],["title/interceptors/LoaderInterceptor.html",[1674,4.325,1675,3.439]],["body/interceptors/LoaderInterceptor.html",[3,0.252,4,0.252,5,0.182,7,0.252,11,0.442,12,0.011,13,0.27,75,0.009,76,0.009,80,1.109,83,0.743,87,1.176,90,0.787,136,0.761,138,2.348,149,1.284,223,1.211,343,1.109,413,1.24,427,1.525,445,1.211,449,1.769,450,1.142,517,2.348,963,4.245,1333,5.24,1518,3.731,1675,5.623,1676,5.78,1677,5.78,1678,7.07,1679,7.07,1680,7.959,1681,6.696,1682,7.959,1683,5.78,1684,5.78,1685,7.07,1686,5.78,1687,5.066,1688,5.193,1689,5.78,1690,5.066,1691,5.78,1692,5.78,1693,5.78]],["title/injectables/LoaderService.html",[413,0.758,1688,3.177]],["body/injectables/LoaderService.html",[3,0.244,4,0.244,5,0.177,7,0.244,8,0.555,12,0.011,13,0.261,16,1.833,21,1.244,39,2.271,41,2.818,75,0.009,76,0.01,83,0.51,89,2.276,90,0.763,136,0.738,142,2.049,223,1.174,340,1.664,343,1.445,413,1.216,415,2.129,421,5.991,427,1.496,445,1.453,465,1.357,498,5.094,519,1.714,592,4.455,595,4.455,621,4.91,1688,5.094,1694,5.602,1695,8.092,1696,8.092,1697,5.602,1698,5.602,1699,5.602,1700,5.602,1701,8.092,1702,5.602,1703,5.602,1704,4.91]],["title/injectables/MediaSessionService.html",[413,0.758,1705,2.967]],["body/injectables/MediaSessionService.html",[3,0.189,4,0.189,5,0.137,7,0.189,10,1.521,11,0.546,12,0.012,13,0.202,16,2.079,29,4.562,75,0.008,76,0.008,80,1.37,83,0.535,86,3.531,87,0.883,90,0.591,114,1.052,136,0.572,145,1.438,166,1.705,223,1.232,225,2.534,231,3.188,340,1.289,343,1.432,413,1.031,414,3.114,415,1.65,418,6.12,419,5.247,427,1.268,445,1.497,449,2.186,450,1.412,466,2.978,519,1.328,590,2.096,935,2.656,940,2.656,945,3.592,983,2.521,1365,5.247,1705,4.033,1706,6.746,1707,6.12,1708,4.341,1709,5.879,1710,5.879,1711,5.879,1712,5.879,1713,4.341,1714,5.879,1715,6.666,1716,7.465,1717,6.262,1718,4.341,1719,5.879,1720,6.666,1721,4.341,1722,5.879,1723,4.341,1724,5.879,1725,4.341,1726,4.341,1727,5.153,1728,5.153,1729,4.341,1730,3.805,1731,4.341,1732,4.341,1733,4.341,1734,4.341,1735,3.805,1736,4.341,1737,4.341,1738,5.879,1739,5.153,1740,5.879,1741,5.879,1742,4.341,1743,4.341,1744,4.341,1745,4.341,1746,4.341,1747,4.341,1748,4.341,1749,4.341,1750,4.341,1751,4.341]],["title/injectables/MetadataService.html",[116,2.396,413,0.758]],["body/injectables/MetadataService.html",[3,0.085,4,0.085,5,0.149,7,0.085,8,0.256,10,0.384,11,0.477,12,0.012,13,0.091,19,0.273,21,1.384,39,1.719,41,0.789,43,1.561,51,1.254,55,1.186,75,0.004,76,0.004,77,0.715,79,2.372,80,0.909,81,1.029,82,1.217,83,0.645,85,3.027,87,0.395,89,1.659,90,0.264,91,1.773,92,2.456,93,1.076,114,1.509,116,1.773,136,0.256,142,2.179,145,1.749,149,1.693,165,0.789,166,1.861,168,1.426,180,2.351,193,0.789,207,2.203,223,1.306,230,4.141,249,2.431,251,2.87,275,1.561,291,1.991,292,2.073,295,2.405,340,0.577,343,1.336,376,1.456,413,0.561,415,0.738,427,0.69,445,0.992,449,1.449,450,0.936,465,1.509,483,2.806,512,1.773,513,1.501,514,1.029,517,0.789,519,0.594,520,1.076,522,1.426,553,1.186,590,1.689,597,1.426,658,2.368,687,2.806,702,2.894,721,3.577,727,2.073,731,3.849,732,3.463,733,1.332,734,0.911,735,1.332,736,1.254,738,1.332,742,1.128,748,2.999,749,3.479,754,2.196,765,1.544,784,3.766,788,2.196,834,1.426,849,1.076,850,1.544,854,2.881,856,1.254,858,0.911,859,1.186,860,1.254,861,1.254,862,1.254,863,1.254,864,1.254,865,1.991,866,1.991,870,1.991,909,0.947,914,1.254,915,1.254,916,1.076,917,1.029,919,3.928,920,1.186,924,1.332,925,1.332,934,2.215,935,1.446,940,1.446,945,1.956,1035,1.426,1062,1.076,1201,3.579,1449,2.545,1457,1.128,1474,1.544,1481,1.426,1515,2.372,1521,3.123,1527,1.956,1535,1.956,1536,1.956,1655,1.702,1666,3.247,1667,1.702,1752,1.702,1753,4.083,1754,4.083,1755,4.083,1756,4.083,1757,4.083,1758,4.083,1759,4.083,1760,3.201,1761,3.201,1762,3.201,1763,3.201,1764,1.942,1765,1.942,1766,1.702,1767,3.201,1768,3.201,1769,1.942,1770,3.201,1771,1.942,1772,3.201,1773,1.942,1774,3.201,1775,1.942,1776,5.638,1777,1.942,1778,1.942,1779,4.736,1780,1.942,1781,5.962,1782,3.201,1783,3.201,1784,2.806,1785,1.942,1786,3.201,1787,1.942,1788,3.201,1789,1.942,1790,3.201,1791,1.942,1792,1.942,1793,1.702,1794,1.942,1795,2.545,1796,1.942,1797,4.942,1798,1.942,1799,1.702,1800,1.942,1801,1.942,1802,1.942,1803,1.942,1804,1.942,1805,1.942,1806,1.942,1807,1.942,1808,1.942,1809,1.942,1810,1.942,1811,5.239,1812,1.942,1813,3.201,1814,1.942,1815,1.702,1816,1.702,1817,1.942,1818,1.942,1819,1.942,1820,1.942,1821,1.942,1822,1.942,1823,3.201,1824,1.942,1825,1.942,1826,3.201,1827,4.083,1828,1.942,1829,1.942,1830,3.201,1831,1.942,1832,4.736,1833,3.201,1834,3.201,1835,2.545,1836,2.806,1837,3.201,1838,4.083,1839,1.942,1840,1.942,1841,3.201,1842,4.083,1843,2.806,1844,1.942,1845,3.201,1846,1.942,1847,5.239,1848,1.942,1849,1.332,1850,1.942,1851,1.942,1852,1.942,1853,5.638,1854,1.942,1855,1.942,1856,3.201,1857,1.942,1858,1.942,1859,1.942,1860,1.942,1861,1.942,1862,1.942,1863,1.942,1864,1.942,1865,1.942,1866,1.942,1867,1.942,1868,1.942,1869,1.942,1870,1.942,1871,1.942,1872,1.942,1873,1.942,1874,1.942,1875,1.942,1876,1.942,1877,1.942,1878,1.942,1879,1.942,1880,1.942,1881,1.702,1882,4.736,1883,1.942,1884,1.702,1885,1.702,1886,1.942,1887,3.201,1888,4.083,1889,1.942,1890,1.942,1891,1.942,1892,4.083,1893,4.736,1894,1.942,1895,1.942,1896,1.942,1897,3.201,1898,1.942,1899,1.942,1900,3.201,1901,1.942,1902,1.942,1903,1.942,1904,3.201,1905,1.702,1906,1.942,1907,1.942,1908,1.942,1909,1.702,1910,4.083,1911,1.942,1912,1.942,1913,1.942,1914,1.942,1915,1.942,1916,1.942,1917,1.942,1918,1.942,1919,3.201,1920,1.942,1921,1.942,1922,1.942,1923,3.201,1924,1.942,1925,1.942,1926,3.579,1927,1.942,1928,1.942,1929,1.702,1930,1.942,1931,1.942,1932,1.942,1933,1.942,1934,1.942,1935,3.201,1936,1.942,1937,4.083,1938,1.942,1939,3.201,1940,1.942,1941,1.702,1942,1.942,1943,1.942,1944,1.942,1945,1.942,1946,1.942,1947,1.942,1948,1.942,1949,1.942,1950,1.942,1951,1.942,1952,1.942,1953,1.942,1954,1.942,1955,1.942,1956,1.942,1957,4.083,1958,1.942,1959,1.942,1960,1.942,1961,1.942]],["title/components/MetadataSettingsComponent.html",[84,0.961,387,1.699]],["body/components/MetadataSettingsComponent.html",[3,0.16,4,0.16,5,0.23,7,0.16,8,0.418,11,0.508,12,0.011,13,0.171,16,1.754,21,0.814,75,0.007,76,0.007,80,1.473,83,0.684,84,1.352,87,0.746,90,0.499,106,1.655,114,1.92,116,3.678,117,2.239,131,1.986,132,1.923,136,0.483,137,1.393,139,3.193,204,3.193,223,1.095,249,2.171,251,1.439,330,1.439,331,1.698,332,1.489,333,1.489,334,1.489,338,3.119,339,3.182,341,1.439,343,1.4,368,1.489,369,2.123,370,1.805,371,1.306,372,2.697,373,1.489,374,1.489,375,1.439,376,1.306,377,1.489,378,1.439,379,1.489,380,1.439,381,1.393,382,1.489,383,1.266,384,1.306,385,1.306,386,2.123,387,2.608,388,2.697,389,1.439,390,1.489,391,1.439,392,1.348,393,1.489,394,1.439,395,1.489,396,1.348,397,1.439,398,1.439,399,1.489,400,1.439,401,1.393,402,1.489,403,1.439,404,1.489,405,1.439,406,1.348,407,1.439,408,1.489,409,1.439,410,1.393,411,1.439,412,1.489,427,1.127,445,1.471,449,2.032,450,1.312,465,0.888,512,2.894,513,2.45,514,1.941,520,2.029,576,3.856,598,3.371,870,3.744,914,2.365,915,3.932,916,3.888,924,2.513,925,2.513,1008,4.155,1302,3.838,1406,3.092,1541,3.373,1962,7.51,1963,6.583,1964,2.914,1965,4.843,1966,6.09,1967,3.838,1968,6.639,1969,5.225,1970,5.225,1971,5.225,1972,5.225,1973,3.664,1974,5.225,1975,8.17,1976,3.664,1977,5.225,1978,3.664,1979,5.225,1980,3.664,1981,5.225,1982,3.664,1983,3.664,1984,3.664,1985,3.664,1986,3.212,1987,2.914,1988,3.664,1989,3.664,1990,6.639,1991,3.664,1992,3.664,1993,3.664,1994,3.664,1995,3.664,1996,3.664,1997,3.664,1998,5.225,1999,3.838,2000,6.639,2001,5.225]],["title/injectables/MusicbrainzService.html",[413,0.758,1795,3.439]],["body/injectables/MusicbrainzService.html",[3,0.179,4,0.179,5,0.129,7,0.179,11,0.314,12,0.012,13,0.191,19,0.911,39,1.183,75,0.007,76,0.007,77,1.51,80,0.787,82,1.559,83,0.689,90,0.559,136,0.54,142,1.539,145,1.704,149,1.82,166,2.222,192,2.649,197,2.814,204,3.456,207,3.322,218,3.013,219,2.814,223,1.462,249,2.609,251,2.875,279,3.262,340,1.219,343,0.787,376,2.308,413,0.992,415,1.559,427,1.22,445,0.86,449,1.255,450,0.811,519,1.255,540,2.814,590,2.308,721,2.272,726,1.725,854,2.298,857,3.039,858,1.924,865,2,866,2,868,2.173,870,2,934,2.741,935,3.152,940,2.924,957,2.814,1169,3.262,1394,1.559,1457,2.383,1515,3.285,1519,2.507,1520,2.649,1534,3.652,1535,2.507,1536,3.456,1539,3.652,1540,4.179,1546,2.649,1561,2.649,1576,4.958,1795,4.498,1999,4.154,2002,4.103,2003,4.103,2004,5.656,2005,5.656,2006,3.596,2007,3.262,2008,4.103,2009,4.103,2010,3.262,2011,4.103,2012,4.103,2013,4.103,2014,4.103,2015,4.103,2016,5.656,2017,4.103,2018,4.103,2019,4.103,2020,4.103,2021,4.103,2022,4.103,2023,4.103,2024,4.103,2025,5.656,2026,4.103,2027,4.103,2028,4.103,2029,4.103,2030,4.103,2031,4.103,2032,4.103,2033,4.103,2034,5.656,2035,4.103,2036,4.103,2037,5.656,2038,6.977,2039,4.103,2040,4.103,2041,4.103,2042,4.103,2043,4.103,2044,4.103,2045,4.103,2046,4.103,2047,5.656,2048,4.103,2049,5.656,2050,3.596,2051,4.103,2052,3.596,2053,3.596,2054,4.103,2055,4.103,2056,4.103]],["title/injectables/NativeBrowserFileLoaderService.html",[413,0.758,923,3.439]],["body/injectables/NativeBrowserFileLoaderService.html",[0,0.143,3,0.181,4,0.181,5,0.259,7,0.181,8,0.456,10,0.82,12,0.012,13,0.194,21,0.922,41,1.686,75,0.007,76,0.007,83,0.669,87,0.844,89,1.686,90,0.565,136,0.547,138,1.686,142,1.771,145,1.638,149,1.727,156,3.68,223,0.869,225,2.475,249,2.824,251,2.983,275,2.023,340,1.233,343,1.345,349,3.583,413,1,415,1.577,427,1.23,445,1.194,465,1.005,467,2.894,513,1.946,517,1.686,519,1.27,553,2.535,590,2.032,658,2.167,702,2.535,868,3.02,907,3.3,908,4.49,909,3.583,910,5.844,911,3.048,912,5.208,913,5.178,914,2.679,915,2.679,916,2.298,917,2.198,918,2.535,919,3.883,920,2.535,921,3.158,922,2.679,923,4.533,924,2.846,925,2.846,926,4.783,927,3.637,928,3.637,929,5.708,930,3.637,931,4.997,932,3.637,933,5.149,934,2.887,935,1.874,936,3.637,937,3.637,938,3.637,939,3.637,940,1.874,941,3.637,942,5.149,943,3.637,944,3.637,945,3.483,946,3.3,947,3.637,948,3.637,949,3.637,950,3.3,951,3.3,952,3.637,953,3.637,954,3.637,955,3.3,956,3.637,957,2.846,958,3.3,959,3.637,960,3.637,961,3.637,962,3.3,963,3.048,964,5.708,965,4.533,966,3.3,967,3.637,968,3.637,969,3.637,2057,5.7,2058,4.149,2059,4.149]],["title/interfaces/OscVisualizerOptions.html",[0,0.149,328,2.196]],["body/interfaces/OscVisualizerOptions.html",[0,0.282,2,1.028,3,0.208,4,0.208,5,0.15,7,0.208,8,0.501,10,1.72,11,0.589,12,0.011,13,0.392,18,3.212,19,1.044,22,1.755,25,2.937,75,0.008,76,0.008,284,2.641,285,2.641,286,3.616,287,2.769,288,2.769,289,2.769,290,2.525,291,2.325,292,2.421,293,2.525,294,2.525,295,2.421,296,2.525,297,2.525,298,2.525,299,2.641,300,2.641,301,2.421,302,3.315,303,3.177,304,3.177,305,3.177,306,2.421,307,3.911,308,2.525,309,2.726,310,2.726,311,3.177,312,2.525,313,2.421,314,2.525,315,2.641,316,2.769,317,2.421,318,3.547,319,2.525,320,2.325,321,4.108,322,2.935,323,2.525,324,3.177,325,3.616,326,3.854,327,2.421,328,3.547,329,3.986]],["title/interfaces/OsciloscopeConfig.html",[0,0.149,306,2.196]],["body/interfaces/OsciloscopeConfig.html",[0,0.283,2,1.054,3,0.213,4,0.213,5,0.154,7,0.213,8,0.509,10,1.724,11,0.573,12,0.011,13,0.394,18,2.872,19,1.054,22,1.799,25,2.674,75,0.008,76,0.008,284,2.707,285,2.707,286,3.651,287,2.839,288,2.839,289,2.839,290,2.589,291,2.383,292,2.482,293,2.589,294,2.589,295,2.482,296,2.589,297,2.589,298,2.589,299,2.707,300,2.707,301,2.482,302,3.369,303,3.229,304,3.229,305,3.229,306,3.229,307,3.942,308,2.589,309,2.77,310,2.77,311,3.229,312,2.589,313,2.482,314,2.589,315,2.707,316,2.839,317,2.482,318,3.59,319,2.589,320,2.383,321,3.916,322,2.983,323,2.589,324,3.229,325,3.651,326,3.651,327,2.482,328,3.229,329,3.651]],["title/components/PlayerComponent.html",[84,0.961,389,1.699]],["body/components/PlayerComponent.html",[3,0.183,4,0.183,5,0.207,7,0.183,8,0.46,12,0.011,13,0.196,21,1.455,75,0.007,76,0.007,80,1.351,83,0.76,84,1.455,87,0.854,88,4.494,90,0.572,100,2.879,101,3.732,102,2.565,104,2.131,106,1.896,114,1.392,131,2.184,132,2.114,134,2.695,136,0.553,137,1.595,138,2.334,140,3.337,223,1.204,239,2.879,330,1.649,331,1.867,332,1.705,333,1.705,334,1.705,336,3.511,337,3.511,338,3.165,339,3.238,341,1.649,343,1.102,345,2.565,368,1.705,369,2.334,370,1.985,371,1.496,372,2.862,373,1.705,374,1.705,375,2.767,376,2.048,377,1.705,378,1.649,379,1.705,380,1.649,381,1.595,382,1.705,383,1.45,384,1.496,385,1.496,386,2.334,387,1.649,388,2.862,389,2.767,390,1.705,391,1.649,392,2.411,393,1.705,394,2.767,395,1.705,396,1.545,397,1.649,398,1.649,399,1.705,400,1.649,401,1.595,402,1.705,403,1.649,404,1.705,405,1.649,406,1.545,407,1.649,408,1.705,409,1.649,410,1.595,411,1.649,412,1.705,414,3.732,465,1.392,871,3.679,909,2.046,921,3.182,922,2.71,972,5.209,983,3.337,990,2.565,991,3.083,1062,2.325,1405,4.003,1406,3.326,2060,4.197,2061,5.742,2062,5.209,2063,5.209,2064,5.745,2065,5.745,2066,4.197,2067,4.197,2068,4.22,2069,3.679,2070,3.083,2071,3.338,2072,4.197,2073,4.197,2074,3.679,2075,3.338,2076,4.197]],["title/injectables/PlayerService.html",[101,2.291,413,0.758]],["body/injectables/PlayerService.html",[3,0.084,4,0.084,5,0.188,7,0.084,8,0.256,10,1.346,11,0.508,12,0.012,13,0.09,16,1.756,19,0.574,21,1.433,39,1.796,41,1.922,43,0.945,75,0.004,76,0.004,77,0.713,80,1.238,83,0.62,85,3.024,86,1.693,87,0.394,89,1.657,90,0.264,92,3.436,93,1.073,101,1.693,114,0.469,116,1.77,117,1.184,136,0.255,139,1.184,142,2.146,145,1.681,149,1.692,156,3.054,158,4.162,165,0.787,193,0.787,197,2.192,207,2.368,223,1.458,225,1.55,230,1.423,244,1.541,249,2.827,250,1.541,251,2.446,252,1.541,275,1.558,309,2.453,310,2.453,317,2.402,340,0.576,343,1.536,350,1.856,351,1.329,360,1.329,413,0.56,414,1.693,415,0.737,418,3.243,427,0.689,432,1.699,445,1.582,449,1.974,450,1.346,458,2.368,463,3.574,465,1.717,467,2.402,512,1.77,513,0.909,514,1.027,519,0.593,520,1.073,553,1.953,560,1.699,590,1.454,600,1.329,658,1.55,675,4.146,722,2.506,732,1.856,736,2.063,741,1.251,742,1.126,909,1.558,918,1.184,919,3.12,920,1.184,921,1.77,922,1.251,934,1.602,935,0.875,940,0.875,945,1.184,950,1.541,983,1.126,990,1.184,1062,1.77,1167,1.699,1428,1.699,1483,1.699,1548,1.251,1606,2.801,1639,3.475,1666,1.541,1668,1.126,1681,4.146,1705,2.192,1707,1.541,1717,1.699,1735,2.801,1766,2.801,2075,1.541,2077,1.699,2078,4.078,2079,4.078,2080,4.078,2081,4.078,2082,4.078,2083,3.196,2084,4.078,2085,3.196,2086,3.196,2087,4.078,2088,3.196,2089,2.801,2090,2.801,2091,4.73,2092,4.078,2093,3.196,2094,3.196,2095,4.146,2096,4.146,2097,1.938,2098,1.938,2099,1.938,2100,3.196,2101,1.938,2102,3.574,2103,1.938,2104,1.938,2105,1.938,2106,1.938,2107,1.938,2108,3.196,2109,1.938,2110,1.938,2111,3.196,2112,1.938,2113,3.196,2114,1.938,2115,4.73,2116,3.196,2117,1.938,2118,1.938,2119,1.938,2120,1.938,2121,1.938,2122,3.196,2123,1.938,2124,1.938,2125,1.938,2126,1.938,2127,3.196,2128,3.196,2129,3.196,2130,1.938,2131,1.938,2132,1.938,2133,5.632,2134,4.73,2135,3.196,2136,3.196,2137,1.938,2138,3.196,2139,1.938,2140,3.196,2141,1.938,2142,1.938,2143,3.196,2144,1.938,2145,1.541,2146,2.192,2147,1.938,2148,1.938,2149,1.938,2150,1.541,2151,1.423,2152,1.423,2153,1.938,2154,1.938,2155,1.541,2156,1.541,2157,3.196,2158,1.938,2159,3.196,2160,1.938,2161,1.938,2162,3.196,2163,1.938,2164,3.196,2165,1.938,2166,1.938,2167,1.938,2168,1.938,2169,1.938,2170,1.938,2171,1.938,2172,1.938,2173,1.938,2174,3.196,2175,1.938,2176,3.196,2177,1.938,2178,1.938,2179,1.938,2180,3.196,2181,1.938,2182,1.938,2183,1.938,2184,3.196,2185,1.699,2186,1.938,2187,1.938,2188,1.938,2189,1.938,2190,1.938,2191,1.938,2192,1.938,2193,1.699,2194,1.938,2195,4.078,2196,1.938,2197,1.938,2198,1.938,2199,1.938,2200,1.938,2201,1.938,2202,1.938,2203,1.938,2204,1.938,2205,1.938,2206,1.938,2207,1.938,2208,1.938,2209,1.938,2210,1.938,2211,1.938,2212,1.938,2213,1.938,2214,1.938,2215,1.938,2216,1.938,2217,1.938,2218,1.938,2219,1.938,2220,1.938,2221,1.938,2222,1.938,2223,1.938,2224,1.938,2225,1.938,2226,1.938,2227,1.938,2228,1.938,2229,1.699,2230,3.196,2231,3.196,2232,2.801,2233,1.938,2234,1.938,2235,1.938,2236,4.078,2237,1.938,2238,1.938,2239,1.938,2240,1.938,2241,1.938,2242,1.938,2243,1.938,2244,3.196,2245,1.938,2246,3.196,2247,1.938,2248,1.938,2249,1.938,2250,1.699,2251,1.938,2252,4.73,2253,1.938,2254,1.938,2255,1.938,2256,1.938,2257,1.938,2258,1.938,2259,1.938,2260,1.938,2261,3.196,2262,1.938,2263,1.938,2264,1.938,2265,3.196,2266,1.184,2267,1.938,2268,2.368,2269,1.938,2270,2.797,2271,1.938,2272,1.938,2273,1.938,2274,1.938,2275,1.938,2276,1.699,2277,3.574,2278,3.243,2279,1.938,2280,1.938,2281,1.699,2282,1.938,2283,1.938,2284,1.938,2285,1.938,2286,1.938]],["title/components/PlayerToolbarComponent.html",[84,0.961,391,1.699]],["body/components/PlayerToolbarComponent.html",[3,0.105,4,0.105,5,0.149,7,0.105,8,0.306,10,1.547,11,0.499,12,0.012,13,0.113,16,1.885,19,0.538,21,1.302,34,1.478,35,3.809,37,1.405,39,1.367,70,1.478,75,0.005,76,0.005,80,1.396,83,0.707,84,1.052,85,2.406,87,0.492,88,3.251,90,0.33,96,3.768,99,3.481,100,1.66,101,2.852,102,1.478,103,3.768,104,1.228,105,3.768,106,1.093,114,1.148,116,2.982,117,1.478,131,1.453,132,1.407,134,1.793,136,0.319,137,0.92,138,1.553,139,2.336,140,2.22,142,1.289,149,0.537,223,0.993,239,1.66,249,1.92,291,1.18,330,0.95,331,1.242,332,0.983,333,0.983,334,0.983,336,2.336,337,2.336,338,2.944,339,2.922,341,0.95,343,1.502,345,1.478,368,0.983,369,1.553,370,1.321,371,0.862,372,2.187,373,0.983,374,0.983,375,0.95,376,0.862,377,0.983,378,0.95,379,0.983,380,0.95,381,0.92,382,0.983,383,0.836,384,0.862,385,0.862,386,1.553,387,0.95,388,2.187,389,0.95,390,0.983,391,2.115,392,2.402,393,0.983,394,0.95,395,0.983,396,0.89,397,0.95,398,0.95,399,0.983,400,0.95,401,0.92,402,0.983,403,0.95,404,0.983,405,0.95,406,0.89,407,0.95,408,0.983,409,0.95,410,0.92,411,0.95,412,0.983,414,2.852,426,2.121,427,0.825,445,1.55,449,1.997,450,1.376,458,2.22,465,1.912,658,1.453,742,2.22,767,1.777,874,3.481,889,2.121,891,3.04,899,3.694,909,1.18,921,2.982,922,1.562,983,2.22,990,1.478,991,1.777,1062,1.34,1089,3.06,1135,1.562,1209,2.468,1325,1.777,1326,1.66,1327,1.777,1337,2.336,1909,3.351,2007,1.924,2063,3.768,2070,1.777,2071,1.924,2075,3.04,2089,3.351,2090,3.351,2095,4.154,2096,4.154,2266,2.336,2268,3.62,2287,7.892,2288,6.918,2289,2.419,2290,3.823,2291,4.739,2292,4.739,2293,4.739,2294,4.739,2295,3.823,2296,3.823,2297,4.739,2298,3.823,2299,3.823,2300,3.823,2301,4.739,2302,3.823,2303,3.823,2304,4.739,2305,4.739,2306,2.419,2307,2.419,2308,2.419,2309,2.419,2310,2.419,2311,2.419,2312,2.419,2313,3.823,2314,2.419,2315,3.823,2316,2.419,2317,2.419,2318,2.419,2319,2.419,2320,2.419,2321,2.419,2322,2.419,2323,2.419,2324,2.419,2325,2.419,2326,2.419,2327,2.419,2328,2.419,2329,3.823,2330,2.419,2331,1.924,2332,2.121,2333,2.121,2334,2.419,2335,2.121,2336,2.419,2337,2.419,2338,2.419,2339,2.419,2340,2.419,2341,2.419,2342,3.823,2343,3.823,2344,2.419,2345,2.419,2346,2.419,2347,2.419,2348,2.419,2349,2.419,2350,2.419,2351,2.419,2352,3.823,2353,2.419,2354,3.823,2355,4.739,2356,2.419,2357,2.419,2358,2.419,2359,2.419,2360,2.419,2361,2.419,2362,2.419,2363,3.823,2364,2.419,2365,3.823,2366,2.419,2367,2.419,2368,2.419,2369,2.419,2370,2.419,2371,2.419,2372,2.419,2373,2.419,2374,2.419,2375,2.419,2376,2.419,2377,2.419,2378,2.419,2379,2.419,2380,2.419,2381,2.419,2382,2.419,2383,2.419,2384,2.419,2385,2.419,2386,2.419,2387,2.419,2388,2.419,2389,2.419,2390,2.419,2391,5.384,2392,2.419,2393,3.351,2394,5.384,2395,3.823,2396,3.823,2397,3.823,2398,3.823,2399,3.823,2400,3.823]],["title/components/PlaylistComponent.html",[84,0.961,394,1.699]],["body/components/PlaylistComponent.html",[3,0.098,4,0.098,5,0.114,7,0.157,8,0.289,10,0.893,11,0.433,12,0.012,13,0.105,16,1.194,19,0.508,21,1.149,39,1.042,41,1.467,43,2.204,45,1.248,75,0.005,76,0.005,80,1.305,83,0.696,84,1.004,85,2.295,86,2.739,87,0.458,89,2.454,90,0.307,92,3.418,93,1.248,94,2.919,95,1.454,99,1.655,100,1.545,101,2.739,102,1.376,104,1.144,106,1.018,107,3.595,108,3.595,109,3.595,110,1.791,111,3.595,112,1.655,113,1.144,114,0.875,118,3.595,119,1.655,127,1.655,128,1.655,131,1.373,132,1.329,134,1.694,136,0.297,137,0.856,140,2.098,142,1.726,145,1.715,149,1.465,204,1.376,223,1.084,225,1.718,249,1.612,282,2.872,330,0.885,331,1.174,332,0.915,333,0.915,334,0.915,336,2.207,337,2.207,338,2.908,339,2.935,341,0.885,343,1.339,345,1.376,368,0.915,369,1.467,370,1.248,371,0.803,372,2.101,373,0.915,374,0.915,375,0.885,376,0.803,377,0.915,378,0.885,379,0.915,380,0.885,381,0.856,382,0.915,383,0.778,384,0.803,385,0.803,386,1.467,387,0.885,388,2.101,389,0.885,390,0.915,391,0.885,392,0.829,393,0.915,394,2.032,395,0.915,396,0.829,397,0.885,398,0.885,399,0.915,400,0.885,401,0.856,402,0.915,403,0.885,404,0.915,405,0.885,406,0.829,407,0.885,408,0.915,409,0.885,410,1.966,411,0.885,412,0.915,414,2.739,424,4.533,427,0.779,445,1.186,449,1.732,450,1.118,465,1.253,466,3.101,498,1.655,536,1.791,552,1.975,598,2.874,713,1.975,760,1.545,890,4.113,934,1.419,951,2.872,965,2.872,983,2.098,989,1.791,990,1.376,993,3.166,1006,1.655,1035,1.655,1090,1.545,1136,1.975,1137,1.975,1143,3.166,1152,3.595,1195,3.166,1196,3.166,1405,2.762,1406,2.295,1413,1.791,1478,3.963,1613,3.166,1639,5.127,1727,1.975,1728,3.963,1730,1.975,1815,1.975,1884,1.975,1885,1.975,1926,3.166,2063,3.595,2102,6.634,2145,1.791,2150,1.791,2151,1.655,2152,1.655,2155,1.791,2156,1.791,2185,1.975,2229,3.166,2250,3.166,2401,2.253,2402,3.963,2403,3.963,2404,4.521,2405,3.612,2406,3.612,2407,4.521,2408,4.521,2409,3.612,2410,3.612,2411,3.612,2412,2.253,2413,5.171,2414,2.253,2415,5.171,2416,2.253,2417,3.612,2418,4.521,2419,2.253,2420,3.612,2421,2.253,2422,2.253,2423,2.253,2424,3.612,2425,2.253,2426,2.253,2427,3.612,2428,2.253,2429,2.253,2430,1.791,2431,2.253,2432,2.253,2433,2.253,2434,2.253,2435,6.041,2436,2.253,2437,3.963,2438,6.804,2439,4.521,2440,2.253,2441,2.253,2442,2.253,2443,3.612,2444,2.253,2445,3.612,2446,2.253,2447,2.253,2448,3.612,2449,2.253,2450,2.253,2451,1.975,2452,4.521,2453,2.253,2454,2.253,2455,2.253,2456,2.253,2457,2.253,2458,1.975,2459,3.612,2460,2.253,2461,1.376,2462,2.253,2463,2.253,2464,2.253,2465,2.253,2466,4.521,2467,2.253,2468,5.171,2469,2.253,2470,2.253,2471,2.253,2472,3.612,2473,2.253,2474,2.253,2475,2.253,2476,3.612,2477,3.612,2478,4.521,2479,2.253,2480,2.253,2481,3.612,2482,2.253,2483,2.253,2484,3.612,2485,2.253,2486,4.521,2487,2.253,2488,2.253,2489,3.612,2490,3.612,2491,2.253,2492,4.521,2493,2.253,2494,1.975,2495,2.253,2496,2.253,2497,3.612,2498,2.253,2499,2.253,2500,3.612,2501,2.253,2502,2.253,2503,1.975,2504,2.253,2505,2.253,2506,2.253,2507,2.253,2508,2.253,2509,2.253,2510,3.612,2511,2.253,2512,2.253,2513,2.253,2514,2.253,2515,2.253,2516,2.253,2517,2.253,2518,2.253,2519,2.253,2520,3.612,2521,3.612,2522,5.171,2523,3.612,2524,3.612,2525,3.612]],["title/components/PromptDialogComponent.html",[84,0.961,396,1.592]],["body/components/PromptDialogComponent.html",[0,0.149,3,0.188,4,0.188,5,0.185,7,0.188,8,0.47,12,0.011,13,0.274,16,1.55,19,0.937,21,1.303,75,0.008,76,0.008,80,1.369,83,0.606,84,1.478,87,0.881,90,0.59,106,1.955,114,1.421,131,2.23,132,2.159,136,0.57,137,1.645,193,1.758,330,1.7,331,1.906,332,1.758,333,1.758,334,1.758,338,3.175,339,3.249,341,1.7,343,1.369,368,1.758,369,2.384,370,2.027,371,1.543,372,2.899,373,1.758,374,1.758,375,1.7,376,1.543,377,1.758,378,1.7,379,1.758,380,1.7,381,1.645,382,1.758,383,1.496,384,1.543,385,1.543,386,2.384,387,1.7,388,2.899,389,1.7,390,1.758,391,1.7,392,1.593,393,1.758,394,1.7,395,1.758,396,2.626,397,2.93,398,1.7,399,1.758,400,1.7,401,1.645,402,1.758,403,1.7,404,1.758,405,1.7,406,1.593,407,1.7,408,1.758,409,1.7,410,1.645,411,1.7,412,1.758,427,1.266,445,1.229,465,1.421,600,5.275,1083,5.478,1330,2.645,1331,2.514,1340,3.407,1346,4.067,1394,2.53,1401,3.179,1402,3.179,1403,4.888,1406,3.379,1407,4.309,1409,4.309,1410,4.309,1416,3.794,1521,2.397,2526,6.537,2527,6.537,2528,6.254,2529,4.328,2530,4.328,2531,4.328,2532,3.179,2533,3.442,2534,3.794,2535,3.794,2536,5.867,2537,5.867,2538,5.867]],["title/interfaces/PromptDialogData.html",[0,0.149,2532,3.177]],["body/interfaces/PromptDialogData.html",[0,0.195,2,1.22,3,0.246,4,0.246,5,0.178,7,0.246,8,0.558,11,0.579,12,0.011,13,0.325,19,1.2,75,0.009,76,0.009,83,0.689,84,1.55,87,1.151,90,0.77,106,2.555,131,2.15,132,2.082,136,0.745,193,3.209,338,2.082,339,2.15,396,2.082,397,2.741,600,3.88,1083,4.154,1330,3.456,1331,3.285,1340,3.285,1346,3.456,1394,2.15,1401,4.154,1402,4.154,1403,5.125,1406,3.543,1407,4.154,1409,4.154,1410,4.154,1521,4.376,2526,4.958,2527,4.958,2528,4.958,2532,5.125,2533,6.282,2534,4.958,2535,4.958]],["title/interfaces/RemoteCoverArtUrls.html",[0,0.149,82,1.644]],["body/interfaces/RemoteCoverArtUrls.html",[0,0.281,2,1.239,3,0.25,4,0.25,5,0.24,7,0.25,8,0.564,11,0.539,12,0.011,13,0.38,19,1.217,75,0.009,76,0.009,82,2.678,83,0.523,590,2.048,726,2.416,727,2.917,849,3.182,853,5.424,854,2.334,855,3.941,856,3.709,857,3.069,858,2.695,859,3.511,860,3.709,861,3.709,862,3.709,863,3.709,864,3.709,865,3.873,866,3.873,867,3.511,868,3.732,869,3.511,870,2.801]],["title/components/SettingsComponent.html",[84,0.961,398,1.699]],["body/components/SettingsComponent.html",[3,0.215,4,0.215,5,0.202,12,0.011,13,0.23,21,1.095,75,0.008,76,0.008,80,1.441,83,0.684,84,1.577,90,0.671,114,1.72,131,2.431,132,2.354,134,2.999,136,0.649,137,1.874,330,1.936,331,2.078,332,2.002,333,2.002,334,2.002,338,3.214,339,3.296,341,1.936,368,2.002,369,2.598,370,2.21,371,1.757,372,3.052,373,2.002,374,2.002,375,1.936,376,1.757,377,2.002,378,1.936,379,2.002,380,1.936,381,1.874,382,2.002,383,1.703,384,1.757,385,1.757,386,2.598,387,2.951,388,3.052,389,1.936,390,2.002,391,1.936,392,1.814,393,2.002,394,1.936,395,2.002,396,1.814,397,1.936,398,2.951,399,2.002,400,1.936,401,1.874,402,2.002,403,2.951,404,2.598,405,2.951,406,2.354,407,1.936,408,2.002,409,1.936,410,1.874,411,1.936,412,2.002,576,3.714,1963,4.32,1967,4.697,2539,4.929,2540,6.395,2541,4.32,2542,7.099,2543,4.32]],["title/components/ShellComponent.html",[84,0.961,341,1.699]],["body/components/ShellComponent.html",[3,0.126,4,0.126,5,0.226,7,0.126,8,0.352,11,0.406,12,0.012,13,0.135,16,0.766,19,0.748,21,1.595,75,0.006,76,0.006,80,1.337,83,0.748,84,1.18,87,0.59,90,0.395,94,3.43,95,1.871,101,3.141,104,1.472,106,1.309,113,1.472,114,1.065,116,3.284,117,1.771,127,3.229,128,2.129,131,1.671,132,1.618,134,2.062,136,0.382,137,1.102,139,2.687,140,2.554,142,2,145,1.146,149,0.976,175,1.605,223,1.113,249,2.392,251,1.139,275,2.144,330,1.139,331,1.429,332,1.177,333,1.177,334,1.177,338,3.026,339,3.073,341,2.329,343,1.438,368,1.177,369,1.786,370,1.519,371,1.033,372,2.409,373,1.177,374,1.177,375,1.139,376,1.033,377,1.177,378,1.139,379,1.177,380,2.329,381,1.671,382,1.177,383,1.001,384,1.033,385,1.033,386,1.786,387,1.139,388,2.409,389,1.139,390,1.177,391,2.329,392,1.955,393,1.177,394,1.139,395,1.177,396,1.067,397,1.139,398,1.139,399,1.177,400,1.139,401,1.102,402,1.177,403,1.139,404,1.177,405,1.139,406,1.067,407,1.139,408,1.177,409,1.139,410,1.102,411,1.139,412,1.177,427,0.948,445,1.113,449,1.625,450,1.05,458,2.554,465,1.74,467,3.011,517,1.177,576,2.554,702,3.246,730,3.246,890,3.496,891,3.496,892,3.854,893,3.854,894,5.197,909,1.413,918,3.246,919,2.942,920,1.771,958,2.305,971,3.496,989,2.305,1062,1.605,1084,2.54,1090,1.988,1333,3.016,1405,3.246,1406,2.697,1668,2.554,1687,2.54,1688,4.355,1690,3.854,1986,2.54,2061,4.656,2068,4.355,2069,2.54,2071,2.305,2074,3.854,2151,2.129,2152,2.129,2193,2.54,2288,2.54,2403,4.656,2544,2.898,2545,4.397,2546,5.312,2547,5.312,2548,5.312,2549,4.397,2550,4.397,2551,5.312,2552,6.709,2553,5.312,2554,4.397,2555,4.397,2556,4.397,2557,4.397,2558,6.374,2559,2.898,2560,2.54,2561,4.397,2562,2.898,2563,4.397,2564,2.898,2565,2.898,2566,4.397,2567,4.397,2568,2.898,2569,2.898,2570,2.898,2571,2.898,2572,4.397,2573,2.898,2574,2.898,2575,4.397,2576,2.898,2577,2.898,2578,2.898,2579,2.898,2580,4.397,2581,2.54,2582,4.397,2583,2.898,2584,2.898,2585,2.305,2586,2.898,2587,2.898,2588,2.898,2589,2.898,2590,2.898,2591,2.898,2592,2.898,2593,2.898,2594,2.898,2595,2.898,2596,2.898,2597,2.898,2598,2.898,2599,2.898,2600,2.898,2601,2.898,2602,2.898,2603,2.898,2604,2.898,2605,5.93,2606,4.397,2607,4.397,2608,4.397]],["title/components/SlidePanelComponent.html",[84,0.961,400,1.699]],["body/components/SlidePanelComponent.html",[3,0.123,4,0.123,5,0.136,7,0.123,8,0.345,11,0.558,12,0.012,13,0.132,16,1.381,19,1.003,21,1.621,22,1.923,75,0.006,76,0.006,80,1.122,83,0.573,84,1.161,90,0.384,104,1.433,106,1.275,114,1.044,131,1.638,132,1.586,134,2.021,136,0.372,137,1.073,138,1.751,142,1.422,330,1.109,331,1.4,332,1.147,333,1.147,334,1.147,338,3.015,339,3.06,341,1.109,343,1.507,368,1.147,369,1.751,370,1.489,371,1.006,372,2.376,373,1.147,374,1.147,375,1.109,376,1.006,377,1.147,378,1.109,379,1.147,380,1.109,381,1.073,382,1.147,383,0.975,384,1.006,385,1.006,386,1.751,387,1.109,388,2.376,389,1.109,390,1.147,391,1.109,392,1.039,393,1.147,394,1.109,395,1.147,396,1.039,397,1.109,398,1.109,399,1.147,400,2.298,401,3.013,402,1.147,403,1.109,404,1.147,405,1.109,406,1.039,407,1.109,408,1.147,409,1.109,410,1.073,411,1.109,412,1.147,427,0.93,445,0.903,465,1.768,467,3.616,553,4.221,658,2.83,659,2.073,1004,3.585,1006,3.839,1059,4.651,1083,5.822,1106,5.558,1405,3.194,1406,2.654,2062,4.156,2070,2.073,2232,2.474,2266,2.633,2268,3.397,2270,4.555,2402,4.581,2430,2.244,2437,4.581,2503,4.581,2609,6.949,2610,7.927,2611,2.822,2612,5.226,2613,5.469,2614,4.309,2615,4.309,2616,5.226,2617,5.226,2618,5.849,2619,5.849,2620,3.777,2621,5.226,2622,6.299,2623,6.907,2624,5.226,2625,4.309,2626,4.309,2627,4.309,2628,2.822,2629,5.849,2630,2.822,2631,2.822,2632,6.64,2633,2.822,2634,2.822,2635,2.822,2636,2.822,2637,4.309,2638,4.309,2639,2.822,2640,2.822,2641,2.822,2642,4.309,2643,4.309,2644,4.309,2645,4.309,2646,6.64,2647,6.907,2648,7.122,2649,2.822,2650,2.474,2651,2.822,2652,2.822,2653,6.64,2654,6.299,2655,6.64,2656,2.822,2657,2.822,2658,2.822,2659,2.822,2660,2.822,2661,2.822,2662,2.822,2663,2.822,2664,2.822,2665,2.822,2666,2.822,2667,2.822,2668,5.226,2669,5.849,2670,5.849]],["title/components/StorageSettingsComponent.html",[84,0.961,403,1.699]],["body/components/StorageSettingsComponent.html",[3,0.204,4,0.204,5,0.195,7,0.204,12,0.011,13,0.219,16,1.239,75,0.008,76,0.008,80,1.414,83,0.671,84,1.539,87,0.954,90,0.639,106,2.119,114,1.5,131,2.353,132,2.279,136,0.618,137,1.783,223,0.983,330,1.843,331,2.012,332,1.906,333,1.906,334,1.906,338,3.2,339,3.279,341,1.843,343,0.9,368,1.906,369,2.515,370,2.139,371,1.672,372,2.994,373,1.906,374,1.906,375,1.843,376,1.672,377,1.906,378,1.843,379,1.906,380,1.843,381,1.783,382,1.906,383,1.621,384,1.672,385,1.672,386,2.515,387,1.843,388,2.994,389,1.843,390,1.906,391,1.843,392,1.726,393,1.906,394,1.843,395,1.906,396,1.726,397,1.843,398,1.843,399,1.906,400,1.843,401,1.783,402,1.906,403,2.895,404,3.26,405,1.843,406,1.726,407,1.843,408,1.906,409,1.843,410,1.783,411,1.843,412,1.906,427,1.336,445,0.983,512,2.598,513,2.2,514,2.485,520,2.598,576,4.57,577,3.73,1008,4.923,1302,4.547,1406,3.519,1835,4.923,1964,3.73,1965,5.511,1967,4.547,1987,3.73,2541,5.427,2671,6.191,2672,7.37,2673,4.112,2674,4.691]],["title/interfaces/TagsWorkerRequest.html",[0,0.149,867,2.643]],["body/interfaces/TagsWorkerRequest.html",[0,0.281,2,1.239,3,0.25,4,0.25,5,0.268,7,0.25,8,0.564,11,0.539,12,0.011,13,0.38,19,1.203,75,0.009,76,0.009,82,2.184,83,0.523,590,2.048,726,2.416,727,2.917,849,3.182,853,5.424,854,2.334,855,3.941,856,3.709,857,3.069,858,2.695,859,3.511,860,3.709,861,3.709,862,3.709,863,3.709,864,3.709,865,2.801,866,2.801,867,4.305,868,4.318,869,3.511,870,2.801]],["title/interfaces/TagsWorkerResponse.html",[0,0.149,869,2.643]],["body/interfaces/TagsWorkerResponse.html",[0,0.279,2,1.213,3,0.245,4,0.245,5,0.238,7,0.245,8,0.556,11,0.577,12,0.011,13,0.378,19,1.213,75,0.009,76,0.009,82,2.138,83,0.512,450,1.558,590,2.811,726,2.365,727,2.855,849,3.115,853,5.4,854,2.285,855,3.858,856,3.631,857,3.434,858,2.637,859,3.436,860,3.631,861,3.631,862,3.631,863,3.631,864,3.631,865,2.742,866,2.742,867,3.436,868,4.291,869,4.248,870,3.844]],["title/interfaces/ThemeColor.html",[0,0.149,750,3.177]],["body/interfaces/ThemeColor.html",[0,0.217,2,1.357,3,0.274,4,0.274,5,0.198,7,0.274,8,0.596,11,0.606,12,0.011,13,0.293,19,1.193,22,2.916,75,0.01,76,0.01,80,1.571,750,5.465,849,4.536,851,6.512,2675,6.292]],["title/injectables/ThemeService.html",[350,2.512,413,0.758]],["body/injectables/ThemeService.html",[0,0.105,3,0.132,4,0.132,5,0.096,7,0.132,8,0.365,10,0.901,11,0.465,12,0.012,13,0.142,16,1.72,19,1.049,21,1.517,22,2.013,39,0.877,59,1.684,75,0.006,76,0.006,80,1.359,83,0.645,85,3.304,86,3.447,87,0.619,89,1.235,90,0.414,136,0.401,142,2.202,145,1.18,149,1.214,223,1.485,225,2.079,340,1.354,343,1.478,348,1.766,349,1.482,350,2.647,406,2.013,413,0.799,415,1.156,427,0.983,445,1.364,449,1.859,450,1.2,465,1.576,512,2.525,513,1.426,514,1.611,519,0.93,520,1.684,625,3.127,722,3.218,743,3.625,744,2.665,745,6.532,746,6.387,747,7.142,748,3.348,749,4.462,750,4.017,751,2.665,752,4.78,753,4.78,754,4.167,755,2.665,756,2.665,757,2.665,758,2.665,759,2.665,760,2.086,761,2.665,762,2.665,763,3.996,764,2.665,765,2.418,766,2.665,767,2.233,768,2.665,769,3.996,770,2.418,771,2.665,772,2.665,773,2.665,774,2.665,775,2.665,776,2.665,777,2.665,778,2.665,779,2.665,780,2.665,781,2.665,782,2.665,783,2.665,784,2.418,785,5.325,786,3.996,787,3.996,788,5.207,789,5.325,790,3.996,791,4.793,792,3.996,793,4.793,794,3.996,795,4.793,796,3.996,797,4.793,798,3.996,799,2.665,800,2.665,801,2.665,802,2.665,803,3.996,804,3.996,805,2.665,806,4.793,807,2.665,808,3.996,809,2.665,810,2.665,811,5.325,812,3.996,813,2.665,814,3.996,815,2.665,816,2.665,817,3.996,818,2.665,819,3.996,820,2.665,821,2.665,822,2.665,823,4.793,824,2.418,825,2.665,826,3.996,827,2.665,828,3.996,829,3.996,830,3.625,831,2.665,832,2.665,833,2.665,834,2.233,835,2.665,836,3.996,837,2.665,838,2.665,839,2.665,840,2.665,841,2.665,842,2.665,843,2.665,844,2.665,845,2.665,846,3.996,847,2.665,848,2.665,849,1.684,850,2.418,851,2.418,852,2.665,2676,4.558,2677,4.558,2678,4.558,2679,4.558,2680,4.558,2681,3.04,2682,3.04,2683,3.04,2684,3.04,2685,3.04,2686,3.04,2687,3.04,2688,3.04,2689,3.04]],["title/components/ThemeSettingsComponent.html",[84,0.961,405,1.699]],["body/components/ThemeSettingsComponent.html",[3,0.199,4,0.199,5,0.192,7,0.199,8,0.487,11,0.35,12,0.011,13,0.213,16,1.208,18,2.473,21,1.016,75,0.008,76,0.008,80,1.458,83,0.664,84,1.52,87,0.93,90,0.623,114,1.475,131,2.314,132,2.24,136,0.602,137,1.738,330,1.796,331,1.978,332,1.858,333,1.858,334,1.858,338,3.192,339,3.27,341,1.796,343,1.168,350,4.238,351,3.137,360,4.176,368,1.858,369,2.473,370,2.103,371,1.63,372,2.964,373,1.858,374,1.858,375,1.796,376,1.63,377,1.858,378,1.796,379,1.858,380,1.796,381,1.738,382,1.858,383,1.58,384,1.63,385,1.63,386,2.473,387,1.796,388,2.964,389,1.796,390,1.858,391,1.796,392,1.683,393,1.858,394,1.796,395,1.858,396,1.683,397,1.796,398,1.796,399,1.858,400,1.796,401,1.738,402,1.858,403,1.796,404,1.858,405,2.866,406,2.935,407,1.796,408,1.858,409,1.796,410,1.738,411,1.796,412,1.858,427,1.313,445,0.958,449,1.399,450,0.904,465,1.108,576,3.536,598,2.322,754,4.176,824,4.841,1964,3.636,1965,5.442,1967,4.471,1987,3.636,2543,5.998,2673,4.008,2690,6.843,2691,6.843,2692,6.088,2693,6.088,2694,7.296,2695,4.573,2696,4.573,2697,4.573]],["title/pipes/TimePipe.html",[113,2.196,874,3.177]],["body/pipes/TimePipe.html",[3,0.258,4,0.258,5,0.187,10,1.525,11,0.453,12,0.011,13,0.276,19,1.01,75,0.009,76,0.009,80,1.481,83,0.653,90,0.806,113,3.643,114,1.434,136,0.78,138,2.405,149,1.315,207,3.246,343,1.136,427,1.277,445,1.241,449,1.812,450,1.17,458,3.439,465,1.434,655,4.349,657,5.706,658,2.727,659,4.349,660,5.706,662,5.706,874,5.27,899,4.922,2007,4.708,2331,4.708,2698,5.921,2699,7.72,2700,5.921,2701,5.19]],["title/injectables/TitleService.html",[413,0.758,2068,3.177]],["body/injectables/TitleService.html",[3,0.256,4,0.256,5,0.186,7,0.256,8,0.572,11,0.45,12,0.011,13,0.275,16,1.555,19,1.084,21,1.307,75,0.009,76,0.009,80,1.129,83,0.651,87,1.197,89,3.128,90,0.802,136,0.775,142,2.094,193,3.334,223,1.233,340,1.748,343,1.371,348,3.418,349,2.869,413,1.253,415,2.237,427,1.542,445,1.233,449,1.801,450,1.163,465,1.426,519,1.801,2068,5.25,2702,5.885,2703,7.148,2704,7.148,2705,5.885,2706,5.885,2707,5.885,2708,5.885,2709,5.885,2710,5.885]],["title/interfaces/Track.html",[0,0.149,92,1.884]],["body/interfaces/Track.html",[0,0.263,2,1.112,3,0.225,4,0.225,5,0.262,7,0.225,8,0.527,11,0.617,12,0.011,13,0.383,19,1.181,25,2.168,75,0.008,76,0.008,77,1.897,79,2.994,81,2.731,82,2.502,83,0.66,91,2.856,92,3.159,114,1.988,115,3.329,145,1.42,165,2.095,193,2.095,275,3.849,309,2.246,310,2.246,450,1.301,453,4.022,487,3.329,488,3.329,489,3.329,490,3.329,491,3.329,492,2.994,493,3.329,494,3.329,495,3.329,496,3.329,515,3.15,575,3.537,722,2.731,723,3.329,724,4.022,725,3.15,726,2.168,727,3.342,728,4.25,729,2.856,730,4.669,731,5.097,732,2.994,733,3.537,734,2.418,735,3.537,736,3.329,737,3.787,738,3.537,739,3.787,740,3.787,741,3.329,742,2.994]],["title/interfaces/TrackMetadata.html",[0,0.149,731,2.792]],["body/interfaces/TrackMetadata.html",[0,0.253,2,0.996,3,0.201,4,0.201,5,0.217,7,0.201,8,0.49,11,0.651,12,0.011,13,0.373,19,1.229,25,1.941,75,0.008,76,0.008,77,2.695,79,4.254,81,3.88,82,2.784,83,0.626,91,2.557,92,3.32,114,1.774,115,2.98,145,1.322,165,2.975,193,2.975,275,2.987,309,2.011,310,2.011,450,1.664,453,3.743,487,2.98,488,2.98,489,2.98,490,2.98,491,2.98,492,2.681,493,2.98,494,2.98,495,2.98,496,2.98,515,2.821,575,3.167,722,2.445,723,2.98,724,4.475,725,2.821,726,1.941,727,3.718,728,4.728,729,2.557,730,3.743,731,4.728,732,4.254,733,5.024,734,3.435,735,5.024,736,4.728,737,3.391,738,3.167,739,3.391,740,3.391,741,2.98,742,2.681]],["title/injectables/UpdateService.html",[352,3.439,413,0.758]],["body/injectables/UpdateService.html",[3,0.203,4,0.203,5,0.147,7,0.203,12,0.012,13,0.217,75,0.008,76,0.008,83,0.715,87,0.948,90,0.635,136,0.614,145,1.49,149,1.534,166,1.831,193,1.893,204,2.848,223,1.447,225,2.626,249,2.801,340,1.384,343,1.325,352,4.903,396,1.715,413,1.081,415,1.772,427,1.33,445,1.292,467,2.366,517,1.893,519,1.426,600,5.043,625,5.043,658,1.772,917,2.469,934,2.888,1253,4.085,1329,3.423,1331,2.707,1340,2.707,1341,3.423,1394,2.626,1458,3.423,1521,2.582,1816,4.085,2145,3.706,2150,3.706,2151,3.423,2152,3.423,2155,3.706,2156,3.706,2266,2.848,2268,4.012,2270,4.739,2532,4.528,2533,3.706,2585,3.706,2711,4.661,2712,7.351,2713,7.351,2714,4.661,2715,4.661,2716,4.661,2717,6.165,2718,6.908,2719,4.085,2720,4.661,2721,4.661,2722,4.661,2723,4.661,2724,4.661,2725,4.661,2726,4.661,2727,4.661,2728,5.4,2729,6.165,2730,4.661,2731,4.661,2732,4.661,2733,4.661,2734,4.661,2735,4.661,2736,4.661,2737,4.661,2738,4.661,2739,4.661,2740,4.661,2741,4.661,2742,4.661,2743,4.661,2744,4.661,2745,4.661,2746,4.661,2747,4.661,2748,4.661,2749,4.661,2750,4.661,2751,4.661,2752,4.661]],["title/components/VisualizerComponent.html",[84,0.961,407,1.699]],["body/components/VisualizerComponent.html",[3,0.08,4,0.08,5,0.097,7,0.08,8,0.246,10,1.545,11,0.524,12,0.012,13,0.086,16,1.772,21,1.675,37,1.071,43,1.496,47,1.981,55,1.874,75,0.004,76,0.004,80,1.341,83,0.665,84,0.875,85,3.216,87,0.375,88,2.701,89,0.749,90,0.251,92,1.336,101,2.431,102,1.127,104,0.937,106,0.833,114,0.743,131,1.166,132,1.129,134,1.439,136,0.243,137,0.701,138,1.246,140,1.782,142,2.264,149,1.355,223,0.386,225,1.497,239,1.265,286,3.088,290,1.625,291,1.496,292,1.558,293,1.625,294,1.625,295,1.558,296,2.431,297,1.625,298,1.625,299,1.699,300,1.699,301,0.937,302,2.698,303,2.586,304,2.959,305,2.586,306,0.937,307,2.33,311,2.586,322,3.333,325,3.185,326,2.975,329,2.975,330,0.725,331,0.997,332,0.749,333,0.749,334,0.749,336,1.874,337,1.874,338,2.8,339,2.81,341,0.725,343,1.538,345,1.127,368,0.749,369,1.246,370,1.06,371,0.658,372,1.864,373,0.749,374,0.749,375,0.725,376,0.658,377,0.749,378,0.725,379,0.749,380,0.725,381,0.701,382,0.749,383,0.637,384,0.658,385,0.658,386,1.246,387,0.725,388,1.864,389,0.725,390,0.749,391,0.725,392,0.679,393,0.749,394,0.725,395,0.749,396,0.679,397,0.725,398,0.725,399,0.749,400,1.803,401,0.701,402,0.749,403,0.725,404,0.749,405,0.725,406,0.679,407,1.803,408,2.07,409,0.725,410,1.744,411,0.725,412,0.749,414,2.431,427,0.662,445,1.327,447,2.439,449,1.938,450,1.291,451,3.132,465,2.038,508,2.439,512,2.542,513,0.865,514,0.977,520,1.699,658,0.701,671,4.953,722,2.086,916,1.699,972,3.132,983,1.782,990,1.127,991,1.355,1006,2.253,1033,2.439,1089,2.542,1135,1.191,1209,1.981,1405,2.406,1406,1.999,1522,1.874,1905,2.689,2062,3.132,2070,1.355,2266,1.874,2268,3.794,2278,2.439,2332,1.617,2333,1.617,2335,1.617,2393,2.689,2585,1.467,2609,1.617,2613,1.355,2753,1.845,2754,3.938,2755,3.938,2756,3.068,2757,3.068,2758,3.452,2759,5.094,2760,3.938,2761,3.938,2762,3.452,2763,5.094,2764,5.094,2765,3.649,2766,3.068,2767,3.068,2768,3.068,2769,3.068,2770,3.068,2771,3.068,2772,3.068,2773,3.068,2774,3.068,2775,3.068,2776,3.068,2777,1.845,2778,3.068,2779,1.845,2780,3.068,2781,1.845,2782,3.068,2783,1.845,2784,3.068,2785,1.845,2786,3.068,2787,1.845,2788,3.068,2789,1.845,2790,3.068,2791,1.845,2792,3.068,2793,1.845,2794,3.068,2795,1.845,2796,2.689,2797,1.845,2798,3.068,2799,1.845,2800,3.068,2801,3.068,2802,3.068,2803,3.068,2804,1.845,2805,3.068,2806,1.845,2807,3.068,2808,1.845,2809,3.068,2810,3.068,2811,1.845,2812,1.845,2813,3.068,2814,1.845,2815,3.068,2816,1.845,2817,3.068,2818,1.845,2819,1.845,2820,3.068,2821,3.068,2822,1.845,2823,3.068,2824,1.845,2825,1.845,2826,3.068,2827,1.845,2828,3.068,2829,3.068,2830,1.845,2831,3.068,2832,1.845,2833,1.845,2834,1.845,2835,1.845,2836,1.845,2837,1.845,2838,3.068,2839,1.845,2840,3.068,2841,1.845,2842,3.068,2843,1.845,2844,1.845,2845,1.845,2846,1.845,2847,1.845,2848,1.845,2849,1.845,2850,1.845,2851,1.845,2852,1.845,2853,1.845,2854,1.845,2855,1.845,2856,1.845,2857,1.845,2858,1.845,2859,1.845,2860,1.845,2861,1.845,2862,1.845,2863,1.845,2864,1.845,2865,1.845,2866,1.845,2867,1.845,2868,3.068,2869,3.068,2870,5.498,2871,3.068,2872,4.589,2873,3.068]],["title/interfaces/VisualsColorConfig.html",[0,0.149,308,2.291]],["body/interfaces/VisualsColorConfig.html",[0,0.281,2,1.02,3,0.206,4,0.206,5,0.149,7,0.206,8,0.498,10,1.719,11,0.603,12,0.011,13,0.392,18,2.827,19,1.149,22,1.74,25,2.617,75,0.008,76,0.008,284,2.619,285,2.619,286,3.605,287,2.746,288,2.746,289,2.746,290,2.505,291,2.306,292,2.401,293,2.505,294,2.505,295,2.401,296,2.505,297,2.505,298,2.505,299,2.619,300,2.619,301,2.401,302,3.297,303,3.16,304,3.16,305,3.16,306,2.401,307,3.16,308,3.297,309,3.346,310,3.346,311,3.9,312,2.505,313,2.401,314,2.505,315,2.619,316,2.746,317,2.401,318,3.533,319,2.505,320,2.306,321,3.854,322,2.919,323,2.505,324,3.16,325,3.605,326,3.605,327,2.401,328,3.16,329,3.605,450,1.558]],["title/directives/VisualsDirective.html",[371,1.542,410,1.644]],["body/directives/VisualsDirective.html",[3,0.121,4,0.121,5,0.088,7,0.121,8,0.341,10,0.55,11,0.444,12,0.012,13,0.13,16,1.369,18,2.544,21,1.29,22,2.431,39,1.675,41,2.36,43,2.079,75,0.005,76,0.005,80,0.818,83,0.472,86,2.259,87,0.567,90,0.379,114,0.675,136,0.367,138,1.733,142,2.151,145,1.772,149,1.151,166,1.675,192,3.346,207,1.793,219,1.91,223,1.486,225,1.97,286,1.358,301,1.414,302,2.746,303,2.632,304,2.632,305,2.632,306,1.414,307,2.632,308,1.475,309,1.858,310,1.858,311,2.165,312,3.642,313,2.632,314,3.077,315,2.362,317,1.414,318,2.165,319,1.475,320,1.358,322,1.306,323,2.259,325,2.832,326,3.458,327,1.414,329,2.832,338,1.57,343,1.448,371,1.52,409,1.094,410,1.621,411,1.675,414,2.259,427,0.92,441,3.391,445,1.086,447,4.979,449,1.305,450,0.843,451,4.979,465,1.407,508,3.391,537,2.441,540,1.91,597,2.045,658,1.058,689,2.441,722,3.317,752,3.807,753,3.807,899,1.91,983,1.617,988,2.214,990,1.702,1010,3.738,1033,3.391,1089,3.346,1106,4.865,1135,1.798,1172,2.441,1307,2.441,1394,1.97,1458,3.807,1463,2.441,1465,2.441,1466,2.441,1522,1.702,1525,1.798,1784,2.441,2266,1.702,2268,3.373,2270,3.984,2620,3.738,2758,4.543,2762,4.543,2796,2.441,2874,2.441,2875,5.808,2876,4.265,2877,4.265,2878,2.785,2879,4.265,2880,2.785,2881,4.265,2882,2.785,2883,4.265,2884,2.785,2885,2.785,2886,2.785,2887,4.265,2888,2.785,2889,2.785,2890,2.785,2891,2.785,2892,2.441,2893,2.441,2894,2.441,2895,2.785,2896,2.785,2897,2.785,2898,2.785,2899,4.265,2900,2.785,2901,2.785,2902,2.785,2903,2.785,2904,2.785,2905,2.785,2906,2.785,2907,2.785,2908,2.785,2909,6.875,2910,2.785,2911,2.785,2912,2.785,2913,2.045,2914,4.265,2915,2.785,2916,2.785,2917,2.785,2918,2.785,2919,2.785,2920,2.785,2921,5.183,2922,2.785,2923,4.265,2924,4.265,2925,2.785,2926,2.785,2927,2.785,2928,5.808,2929,2.785,2930,2.785,2931,2.785,2932,2.785,2933,2.785,2934,2.785,2935,4.265,2936,2.785,2937,2.785,2938,2.785,2939,5.183,2940,5.808,2941,2.785,2942,2.785,2943,2.785,2944,2.785,2945,4.265,2946,4.265,2947,4.265,2948,5.183,2949,2.785,2950,2.785,2951,2.785,2952,2.785,2953,2.785,2954,2.785,2955,2.785,2956,2.785,2957,2.785,2958,6.875,2959,4.265,2960,4.265,2961,2.785,2962,2.441,2963,2.785,2964,2.785,2965,2.785,2966,2.785,2967,4.543,2968,4.265,2969,4.265,2970,2.785,2971,2.785,2972,2.785,2973,2.785,2974,2.785,2975,2.785,2976,2.785,2977,2.785,2978,2.785,2979,2.785,2980,2.785,2981,2.785,2982,4.265,2983,2.785,2984,2.785,2985,2.785,2986,2.785,2987,2.785,2988,2.785,2989,2.785,2990,2.785,2991,2.785]],["title/injectables/VisualsService.html",[413,0.758,2765,3.439]],["body/injectables/VisualsService.html",[3,0.234,4,0.234,5,0.169,7,0.234,8,0.54,11,0.41,12,0.012,13,0.25,16,1.417,21,1.191,75,0.009,76,0.009,83,0.672,87,1.092,89,2.179,90,0.731,136,0.707,142,2.009,223,1.124,322,3.166,325,3.78,326,3.78,329,3.78,340,1.593,343,1.295,413,1.184,415,2.039,427,1.456,445,1.124,465,1.299,512,3.739,513,2.516,514,2.842,519,1.641,520,2.971,2266,3.278,2268,4.64,2270,5.481,2765,5.368,2892,4.702,2992,5.364,2993,7.387,2994,7.752,2995,5.364,2996,6.751,2997,5.364,2998,8.279,2999,5.364,3000,5.364,3001,5.364]],["title/interfaces/VisualsWorkerMessage.html",[0,0.149,312,2.291]],["body/interfaces/VisualsWorkerMessage.html",[0,0.28,2,0.994,3,0.201,4,0.201,5,0.145,7,0.201,8,0.49,10,1.706,11,0.621,12,0.011,13,0.39,18,2.791,19,1.03,22,2.528,25,2.573,75,0.008,76,0.008,284,2.553,285,2.553,286,3.569,287,2.677,288,2.677,289,2.677,290,2.441,291,2.247,292,2.34,293,2.441,294,2.441,295,2.34,296,2.441,297,2.441,298,2.441,299,2.553,300,2.553,301,2.34,302,3.242,303,3.107,304,3.107,305,3.107,306,2.34,307,3.107,308,2.441,309,2.666,310,2.666,311,3.107,312,3.242,313,3.716,314,3.639,315,4.054,316,3.99,317,3.716,318,4.12,319,3.877,320,3.35,321,3.805,322,2.87,323,2.441,324,3.107,325,3.569,326,3.569,327,2.34,328,3.107,329,3.569,450,1.603]],["title/injectables/WakelockService.html",[413,0.758,2146,2.967]],["body/injectables/WakelockService.html",[3,0.241,4,0.241,5,0.174,7,0.241,8,0.55,11,0.423,12,0.011,13,0.258,75,0.009,76,0.009,83,0.503,90,0.753,136,0.728,149,1.528,223,1.158,225,2.846,249,2.971,251,2.171,340,1.642,343,1.503,413,1.206,415,2.101,427,1.484,445,1.441,450,1.359,458,3.995,519,1.691,590,1.971,935,2.497,940,2.497,2146,4.719,3002,5.527,3003,6.564,3004,7.836,3005,7.836,3006,6.878,3007,5.527,3008,5.527,3009,6.878,3010,7.488,3011,5.527,3012,5.527,3013,5.527,3014,5.527,3015,5.527,3016,5.527,3017,5.527,3018,5.527]],["title/dependencies.html",[2913,3.813,3019,3.183]],["body/dependencies.html",[12,0.011,75,0.009,76,0.009,90,0.797,112,4.296,113,2.97,114,1.417,119,4.296,348,3.397,349,2.852,513,3.601,514,3.099,517,2.376,729,3.24,732,3.397,749,4.296,915,3.776,916,3.24,957,4.013,1458,4.296,1797,5.127,1799,5.127,1999,4.296,2430,4.652,2581,5.127,2719,5.127,2913,4.296,3020,5.849,3021,8.573,3022,5.849,3023,5.849,3024,5.849,3025,5.849,3026,6.243,3027,7.122,3028,5.849,3029,5.849,3030,5.849,3031,5.849,3032,5.849,3033,5.849,3034,5.849,3035,5.849,3036,5.849,3037,5.849,3038,5.849]],["title/miscellaneous/enumerations.html",[3039,2.109,3040,4.55]],["body/miscellaneous/enumerations.html",[6,3.717,7,0.251,12,0.011,37,4.096,38,3.949,40,3.949,41,2.866,42,3.949,43,3.439,44,3.949,45,3.907,46,3.949,47,3.717,48,3.949,49,3.717,50,3.949,51,3.717,52,3.949,53,3.949,54,3.949,55,3.518,56,3.949,57,3.949,58,3.949,59,3.189,60,3.949,61,3.717,62,3.949,63,3.717,64,3.949,65,3.949,66,3.949,67,3.949,68,3.949,69,3.949,70,4.31,71,3.949,72,3.949,73,3.949,74,3.949,75,0.009,76,0.009,465,2.136,3039,3.344,3040,5.046,3041,6.182]],["title/miscellaneous/functions.html",[3039,2.109,3042,4.55]],["body/miscellaneous/functions.html",[5,0.25,7,0.168,10,1.468,11,0.626,12,0.011,19,1.129,21,0.859,22,2.734,75,0.007,76,0.007,80,1.582,318,3.771,324,1.964,328,1.964,349,3.059,445,1.781,449,2.523,450,1.629,465,1.52,658,1.47,671,4.156,716,4.05,721,3.007,854,2.549,908,3.318,909,2.647,910,3.076,911,4.608,912,2.654,913,5.409,934,2.672,946,3.076,962,3.076,1062,2.143,1209,2.497,1337,2.364,1451,4.759,1453,3.391,1519,3.318,1705,2.654,1706,3.391,1707,3.076,1752,3.391,1881,3.391,1929,3.391,2006,4.759,2077,3.391,2146,2.654,2276,3.391,2277,4.759,2278,3.076,2331,4.318,2701,3.391,3039,2.247,3042,3.391,3043,6.273,3044,6.936,3045,6.273,3046,6.273,3047,6.273,3048,6.273,3049,3.868,3050,3.868,3051,5.429,3052,5.429,3053,5.429,3054,3.868,3055,5.499,3056,3.391,3057,5.429,3058,5.429,3059,5.429,3060,5.499,3061,5.429,3062,5.429,3063,5.429,3064,5.429,3065,5.429,3066,3.868,3067,5.499,3068,5.429,3069,6.273,3070,5.429,3071,6.273,3072,6.273,3073,6.273,3074,5.429,3075,6.273,3076,5.429,3077,6.273,3078,5.429,3079,5.499,3080,5.429,3081,5.429,3082,5.499,3083,3.391,3084,3.391,3085,3.868,3086,3.868,3087,3.868,3088,3.868,3089,3.868,3090,3.868,3091,3.868,3092,3.868,3093,3.868,3094,3.868,3095,5.429,3096,3.868,3097,5.429,3098,3.868,3099,3.868,3100,3.868,3101,3.868]],["title/index.html",[7,0.158,1849,2.491,3102,2.887]],["body/index.html",[5,0.216,12,0.011,59,3.033,75,0.009,76,0.009,77,2.015,114,1.892,165,2.225,180,4.022,193,2.225,349,2.67,376,2.438,392,2.015,406,2.015,518,5.022,522,5.022,576,3.18,577,4.354,625,3.756,729,3.033,754,4.691,788,3.756,859,3.346,870,2.67,971,4.354,1106,4.691,1251,4.799,1302,4.022,1447,4.354,1481,4.022,1739,4.799,1793,4.799,1835,4.354,1843,5.994,1849,3.756,1941,4.799,1999,4.022,2010,4.354,2913,4.022,3003,4.799,3103,5.994,3104,4.799,3105,5.475,3106,5.475,3107,5.475,3108,5.475,3109,5.475,3110,5.475,3111,6.838,3112,6.838,3113,5.475,3114,5.475,3115,5.475,3116,5.475,3117,5.475,3118,5.475,3119,5.475,3120,5.475,3121,5.475,3122,5.475,3123,5.475,3124,5.475,3125,5.475,3126,5.475,3127,5.475,3128,5.475,3129,5.475,3130,5.475,3131,5.475,3132,5.475,3133,5.475,3134,5.475,3135,6.838,3136,3.756,3137,5.475,3138,7.456,3139,5.475,3140,6.838,3141,5.475,3142,5.475,3143,5.475,3144,5.475]],["title/license.html",[1849,2.491,3102,2.887,3145,2.887]],["body/license.html",[10,0.841,12,0.005,29,3.546,61,1.794,75,0.005,76,0.005,86,1.472,168,2.041,192,1.794,193,1.129,204,4.198,217,3.386,226,2.21,229,2.21,343,0.533,371,1.518,419,3.128,458,1.614,516,3.386,540,1.907,564,2.21,681,2.436,688,2.436,873,1.907,899,2.921,955,4.975,966,2.21,1024,2.436,1035,4.262,1039,3.733,1045,2.21,1059,2.21,1169,2.21,1328,4.595,1343,2.041,1394,1.056,1481,2.041,1515,1.614,1704,6.022,2050,2.436,2053,3.733,2268,2.473,2458,3.733,2650,2.436,2728,2.041,2967,2.436,3026,2.436,3145,5.249,3146,6.87,3147,7.087,3148,6.256,3149,6.022,3150,2.436,3151,2.779,3152,2.779,3153,7.087,3154,2.779,3155,2.436,3156,2.779,3157,4.258,3158,2.779,3159,2.779,3160,2.779,3161,2.779,3162,5.177,3163,2.779,3164,5.177,3165,5.177,3166,2.779,3167,5.803,3168,2.779,3169,5.177,3170,2.779,3171,2.779,3172,2.779,3173,2.779,3174,7.087,3175,2.779,3176,2.779,3177,4.258,3178,4.258,3179,2.779,3180,4.258,3181,7.543,3182,7.543,3183,8.25,3184,4.258,3185,4.258,3186,2.779,3187,2.779,3188,2.779,3189,4.258,3190,8.371,3191,2.779,3192,5.177,3193,4.258,3194,2.779,3195,4.258,3196,2.779,3197,4.258,3198,2.779,3199,5.177,3200,2.779,3201,4.258,3202,4.258,3203,5.803,3204,2.779,3205,2.779,3206,2.779,3207,5.803,3208,4.258,3209,2.779,3210,2.779,3211,2.779,3212,4.258,3213,2.779,3214,2.779,3215,2.779,3216,2.779,3217,5.177,3218,6.256,3219,7.266,3220,6.256,3221,5.177,3222,2.779,3223,2.779,3224,2.779,3225,4.258,3226,2.779,3227,4.258,3228,2.436,3229,2.779,3230,2.779,3231,5.177,3232,2.779,3233,2.779,3234,2.779,3235,2.779,3236,1.907,3237,2.779,3238,2.779,3239,4.258,3240,2.779,3241,7.543,3242,6.256,3243,2.779,3244,2.779,3245,2.779,3246,4.258,3247,6.87,3248,2.779,3249,2.779,3250,2.779,3251,2.779,3252,2.779,3253,2.779,3254,2.779,3255,2.779,3256,2.779,3257,2.779,3258,2.779,3259,2.779,3260,2.779,3261,2.779,3262,2.779,3263,5.803,3264,2.779,3265,2.779,3266,2.779,3267,2.779,3268,5.177,3269,2.779,3270,2.779,3271,2.779,3272,4.258,3273,2.779,3274,2.779,3275,5.177,3276,4.258,3277,2.779,3278,2.779,3279,2.779,3280,2.779,3281,4.258,3282,2.779,3283,2.779,3284,2.779,3285,2.779,3286,2.779,3287,6.256,3288,2.779,3289,2.779,3290,2.779,3291,2.779,3292,2.779,3293,2.779,3294,2.779,3295,2.779,3296,2.779,3297,4.258,3298,2.779,3299,5.177,3300,2.779,3301,2.779,3302,2.779,3303,2.779,3304,2.779,3305,2.779,3306,6.87,3307,5.177,3308,2.779,3309,6.87,3310,4.258,3311,4.258,3312,2.779,3313,5.177,3314,2.779,3315,4.258,3316,2.779,3317,2.779,3318,2.779,3319,2.779,3320,2.779,3321,6.6,3322,4.258,3323,5.177,3324,4.258,3325,2.779,3326,2.779,3327,6.256,3328,4.258,3329,4.258,3330,5.177,3331,4.258,3332,4.258,3333,4.258,3334,4.258,3335,4.258,3336,2.779,3337,2.779,3338,2.779,3339,2.779,3340,2.779,3341,2.779,3342,5.803,3343,2.779,3344,2.779,3345,2.779,3346,2.779,3347,2.779,3348,2.779,3349,2.779,3350,2.779,3351,2.779,3352,5.803,3353,5.177,3354,4.258,3355,5.177,3356,4.258,3357,4.258,3358,4.258,3359,2.779,3360,2.779,3361,2.779,3362,2.779,3363,4.258,3364,2.779,3365,5.803,3366,2.779,3367,2.779,3368,2.779,3369,2.779,3370,4.258,3371,2.779,3372,2.779,3373,2.779,3374,2.779,3375,2.779,3376,2.779,3377,2.779,3378,2.779,3379,2.779,3380,4.258,3381,2.779,3382,2.779,3383,2.779,3384,2.779,3385,2.779,3386,2.779,3387,2.779,3388,2.779,3389,2.779,3390,2.779,3391,2.779,3392,2.779,3393,2.779,3394,2.779,3395,2.779,3396,2.779,3397,2.779,3398,2.779,3399,4.258,3400,2.779,3401,2.779,3402,2.779,3403,2.779,3404,2.779,3405,2.779,3406,2.779,3407,2.779,3408,4.258,3409,2.779,3410,2.779,3411,2.779,3412,2.779,3413,2.779,3414,2.779,3415,2.779,3416,2.779,3417,2.779,3418,2.779,3419,2.779,3420,2.779,3421,2.779]],["title/modules.html",[3422,5.14]],["body/modules.html",[12,0.01,75,0.01,76,0.01,3422,6.036]],["title/overview.html",[3423,5.14]],["body/overview.html",[2,1.445,12,0.01,41,3.135,45,3.709,75,0.01,76,0.01,136,0.882,331,2.176,371,2.387,415,2.546,655,4.919,3423,5.87,3424,6.697,3425,6.697,3426,6.697]],["title/properties.html",[8,0.415,3019,3.183]],["body/properties.html",[8,0.526,12,0.011,75,0.01,76,0.01,392,2.42,522,4.83,1326,4.511,2728,4.83,3103,5.764,3104,5.764,3145,5.229,3149,5.764,3150,5.764,3427,6.576,3428,6.576,3429,6.576,3430,6.576,3431,6.576,3432,6.576]],["title/todo.html",[553,2.219,1849,2.491,3102,2.887]],["body/todo.html",[12,0.01,18,2.69,75,0.01,76,0.01,748,4.863,870,3.228,1171,5.803,1639,4.863,3433,6.62,3434,6.62,3435,6.62,3436,6.62,3437,6.62,3438,5.803,3439,6.62,3440,6.62,3441,6.62,3442,6.62,3443,6.62,3444,6.62,3445,6.62]],["title/miscellaneous/typealiases.html",[3039,2.109,3446,5.191]],["body/miscellaneous/typealiases.html",[6,3.666,7,0.247,11,0.434,12,0.011,14,4.515,23,4.515,30,3.895,31,3.666,32,4.515,33,3.666,34,3.47,35,3.47,75,0.009,76,0.009,285,3.145,286,3.41,290,3.008,291,2.769,292,2.883,293,3.008,294,3.008,295,2.883,296,3.008,297,3.008,298,3.008,318,3.551,322,3.28,324,2.883,325,3.41,326,3.41,328,2.883,329,3.41,416,4.977,420,6.131,453,4.274,723,3.666,741,4.515,742,3.298,854,2.307,945,3.47,1513,3.666,1514,4.515,1523,3.47,1524,3.47,1526,4.515,3039,3.298,3041,6.644,3447,5.678,3448,5.678,3449,7.579,3450,6.131,3451,5.678,3452,5.678,3453,5.678]],["title/miscellaneous/variables.html",[3039,2.109,3454,4.55]],["body/miscellaneous/variables.html",[7,0.117,10,1.552,11,0.653,12,0.012,18,1.687,19,0.956,21,1.839,39,0.776,45,1.49,75,0.005,76,0.005,77,1.528,80,1.25,145,0.58,165,1.687,176,3.302,177,4.901,193,2.06,286,2.025,303,2.108,304,2.108,305,2.108,307,2.108,309,1.809,310,1.809,311,2.108,313,2.108,314,1.425,319,2.2,320,1.311,322,1.261,323,2.2,327,2.108,376,0.959,392,1.528,465,2.006,466,1.845,467,3.307,487,1.736,488,1.736,489,1.736,490,1.736,491,1.736,492,1.562,493,1.736,494,1.736,495,1.736,496,1.736,515,2.537,558,3.64,576,1.562,658,2.476,671,1.643,678,3.64,679,3.64,716,3.979,723,1.736,732,2.946,752,4.189,753,4.189,868,1.425,873,1.845,908,1.643,909,1.311,912,2.848,914,1.736,916,2.3,918,2.537,921,1.49,1062,1.49,1063,4.446,1064,2.357,1065,2.357,1066,2.357,1067,3.64,1068,2.357,1069,2.357,1070,2.357,1071,2.357,1072,2.357,1073,2.357,1074,2.357,1075,3.64,1076,2.357,1077,2.357,1078,2.357,1079,2.357,1080,2.357,1081,2.357,1152,2.139,1209,1.736,1337,1.643,1668,1.562,1675,2.139,1705,1.845,1836,3.64,2010,2.139,2052,2.357,2146,1.845,2451,2.357,2494,3.64,2560,2.357,2728,1.975,2874,2.357,2893,3.64,2894,3.64,2962,3.64,3039,1.562,3044,7.285,3055,2.357,3056,3.64,3060,2.357,3067,2.357,3079,2.357,3082,2.357,3083,2.357,3084,4.446,3155,5.952,3228,3.64,3450,2.357,3454,2.357,3455,4.152,3456,2.689,3457,4.152,3458,4.152,3459,4.152,3460,4.152,3461,4.152,3462,4.152,3463,2.689,3464,4.152,3465,5.703,3466,2.689,3467,2.689,3468,4.152,3469,5.072,3470,4.152,3471,4.152,3472,4.152,3473,2.689,3474,4.152,3475,6.514,3476,4.152,3477,4.152,3478,5.072,3479,4.152,3480,4.152,3481,4.152,3482,4.152,3483,4.152,3484,4.152,3485,4.152,3486,4.152,3487,2.689,3488,4.152,3489,2.689,3490,2.689,3491,2.689,3492,2.689,3493,2.689,3494,2.689,3495,2.689,3496,2.689,3497,2.689,3498,2.689,3499,2.689,3500,2.689,3501,2.689,3502,2.689,3503,2.689,3504,2.689,3505,2.689,3506,2.689,3507,2.689,3508,2.689,3509,2.689,3510,2.689,3511,2.689,3512,2.689,3513,6.164,3514,2.689,3515,2.689,3516,2.689,3517,2.689,3518,2.689,3519,2.689,3520,2.689,3521,2.689,3522,2.689,3523,2.689,3524,2.689,3525,2.689,3526,2.689,3527,2.689,3528,4.152,3529,6.79,3530,4.152,3531,4.152,3532,2.689,3533,2.689,3534,2.689,3535,2.689,3536,2.689,3537,2.689,3538,2.689,3539,2.689,3540,2.689,3541,2.689,3542,2.689,3543,2.689,3544,2.689,3545,2.689,3546,2.689,3547,2.689,3548,2.689,3549,2.689,3550,2.689,3551,2.689,3552,2.689,3553,2.689,3554,2.689,3555,2.689,3556,2.689,3557,6.514,3558,4.152,3559,2.689,3560,5.703,3561,2.689,3562,2.689,3563,2.689,3564,2.689,3565,2.689,3566,2.689]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.07,331,0.719,381,0.841,1090,1.517,2461,1.351,3236,1.517,3567,1.624]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.24,12,0.01,75,0.01,76,0.01,331,2.478,381,2.899,555,4.501,1090,5.231,1668,3.81,2461,4.66,3136,4.501,3568,5.601,3569,4.819,3570,5.601,3571,5.601,3572,4.819,3573,4.819]],["title/additional-documentation/ui-components-slide-panel.html",[331,0.796,401,0.932,2461,1.498,2613,1.8,3236,1.681,3567,1.8]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.01,75,0.01,76,0.01,331,2.485,401,2.906,555,4.521,1668,3.828,2461,4.672,2613,5.616,3136,4.521,3568,5.616,3569,4.841,3570,5.616,3571,5.616,3572,4.841,3573,4.841]],["title/additional-documentation/ui-components-dialogs.html",[331,0.893,2461,1.679,3236,1.885,3567,2.019,3574,2.409]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,331,2.491,555,4.542,1668,3.845,2461,4.684,3136,4.542,3568,5.631,3569,4.863,3570,5.631,3571,5.631,3572,4.863,3573,4.863,3574,6.719]],["title/additional-documentation/helpers.html",[3236,2.491,3567,2.667,3575,3.183]],["body/additional-documentation/helpers.html",[12,0.01,75,0.01,76,0.01,555,4.461,1668,3.776,2281,5.7,3136,4.461,3438,6.649,3568,5.9,3569,5.572,3570,5.572,3571,5.572,3572,5.572,3573,5.572,3575,7.041,3576,6.502,3577,8.032]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["0.05",{"_index":772,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.07",{"_index":1235,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.1",{"_index":774,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.15",{"_index":769,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.18",{"_index":777,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.2",{"_index":767,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/PlayerToolbarComponent.html":{},"injectables/ThemeService.html":{}}}],["0.21",{"_index":779,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.24",{"_index":781,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.25",{"_index":765,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["0.25.1",{"_index":3031,"title":{},"body":{"dependencies.html":{}}}],["0.27",{"_index":783,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.3",{"_index":763,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.35",{"_index":761,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.45",{"_index":759,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.5",{"_index":508,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.55",{"_index":758,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.7",{"_index":2829,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":1905,"title":{},"body":{"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{}}}],["000000",{"_index":1949,"title":{},"body":{"injectables/MetadataService.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)).then((entry",{"_index":928,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["1)?.['#text",{"_index":1573,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["1.0",{"_index":3150,"title":{},"body":{"license.html":{},"properties.html":{}}}],["1.0.0",{"_index":2012,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["100",{"_index":784,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":492,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["1000}k",{"_index":1050,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["1024",{"_index":295,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"injectables/MetadataService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.7.3",{"_index":3030,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.1",{"_index":3032,"title":{},"body":{"dependencies.html":{}}}],["125",{"_index":489,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["128",{"_index":292,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"injectables/MetadataService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["12px",{"_index":1056,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["140",{"_index":2446,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["150",{"_index":847,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["16",{"_index":1263,"title":{},"body":{"injectables/GamepadService.html":{}}}],["16384",{"_index":3452,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["16_000",{"_index":496,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":299,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["17",{"_index":3424,"title":{},"body":{"overview.html":{}}}],["18",{"_index":3425,"title":{},"body":{"overview.html":{}}}],["192",{"_index":1957,"title":{},"body":{"injectables/MetadataService.html":{}}}],["199",{"_index":1193,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":3294,"title":{},"body":{"license.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/enumerations.html":{}}}],["2.6.0",{"_index":3025,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":3038,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":3024,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":760,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{}}}],["20.0.0",{"_index":3034,"title":{},"body":{"dependencies.html":{}}}],["20.1.3",{"_index":3021,"title":{},"body":{"dependencies.html":{}}}],["20.3.26",{"_index":3427,"title":{},"body":{"properties.html":{}}}],["200",{"_index":848,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["2000",{"_index":493,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["2048",{"_index":296,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["20rem",{"_index":2629,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21.0.0",{"_index":3033,"title":{},"body":{"dependencies.html":{}}}],["220",{"_index":2845,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["24",{"_index":1033,"title":{},"body":{"components/EqualizerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["25",{"_index":762,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["250",{"_index":490,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["255",{"_index":1201,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/MetadataService.html":{}}}],["256",{"_index":293,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.4",{"_index":3036,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":764,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["300",{"_index":1233,"title":{},"body":{"injectables/GamepadService.html":{}}}],["30_000",{"_index":1456,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["31",{"_index":487,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["32",{"_index":290,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["32768",{"_index":3453,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":300,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["35",{"_index":766,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["360px",{"_index":1392,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["37",{"_index":3426,"title":{},"body":{"overview.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1531,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3db",{"_index":1017,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":3283,"title":{},"body":{"license.html":{}}}],["4.1.0",{"_index":3028,"title":{},"body":{"dependencies.html":{}}}],["4.12.0",{"_index":3029,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":768,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["4000",{"_index":494,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["4096",{"_index":297,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["424242",{"_index":2893,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["440hz",{"_index":711,"title":{},"body":{"interfaces/Chainable.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":770,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":491,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":237,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["512",{"_index":294,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":2221,"title":{},"body":{"injectables/PlayerService.html":{}}}],["5sec.mp3",{"_index":712,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/MetadataService.html":{},"miscellaneous/enumerations.html":{}}}],["60",{"_index":771,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["63",{"_index":488,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["64",{"_index":291,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"injectables/MetadataService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["6px",{"_index":1189,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["7.8.2",{"_index":3035,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":773,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["72",{"_index":2493,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["73",{"_index":2821,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["80",{"_index":775,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["800",{"_index":3518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8000",{"_index":495,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["8192",{"_index":298,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["8mb",{"_index":1896,"title":{},"body":{"injectables/MetadataService.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["90",{"_index":776,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["95",{"_index":778,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["96/9/ec",{"_index":3289,"title":{},"body":{"license.html":{}}}],["98",{"_index":780,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["99",{"_index":782,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["_audiocontext",{"_index":526,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audioelement",{"_index":524,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audiosourcenode",{"_index":528,"title":{},"body":{"injectables/AudioService.html":{}}}],["_connectedanalyzers",{"_index":535,"title":{},"body":{"injectables/AudioService.html":{}}}],["_eqgainnode",{"_index":532,"title":{},"body":{"injectables/AudioService.html":{}}}],["_frequencyfilters",{"_index":533,"title":{},"body":{"injectables/AudioService.html":{}}}],["_gainnode",{"_index":530,"title":{},"body":{"injectables/AudioService.html":{}}}],["_hasended",{"_index":538,"title":{},"body":{"injectables/AudioService.html":{}}}],["_internalanalyzer",{"_index":2895,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":1347,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a.album",{"_index":202,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.artist",{"_index":199,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.localecompare(b",{"_index":169,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":188,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.title",{"_index":221,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.track",{"_index":206,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["abandoned",{"_index":3387,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":3319,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2538,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["above",{"_index":3519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":3399,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2515,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["abstract",{"_index":1204,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":1305,"title":{},"body":{"injectables/GamepadService.html":{}}}],["accent",{"_index":830,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":793,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":797,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["accepts",{"_index":954,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":1172,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["accessors",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":3361,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":3402,"title":{},"body":{"license.html":{}}}],["achse",{"_index":1270,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":3418,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["action(details",{"_index":1743,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["activatewakelock",{"_index":3004,"title":{},"body":{"injectables/WakelockService.html":{}}}],["active",{"_index":2186,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeaxescaches",{"_index":1238,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["adapt",{"_index":3259,"title":{},"body":{"license.html":{}}}],["add",{"_index":597,"title":{},"body":{"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{}}}],["addalbumtoplaylist",{"_index":1603,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addalbumtoplaylist(album",{"_index":260,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addartisttoplaylist",{"_index":1604,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addartisttoplaylist(artist",{"_index":255,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addeventlistener('gamepadconnected",{"_index":1243,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":1246,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestolibrary",{"_index":1760,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(...filedatas",{"_index":1806,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(filedatas",{"_index":1764,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestoplaylist",{"_index":2083,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...filedatas",{"_index":2242,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(filedatas",{"_index":2098,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":3362,"title":{},"body":{"license.html":{}}}],["additional",{"_index":3236,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["addtrackstoplaylist",{"_index":1605,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addtrackstoplaylist(...dbtracks",{"_index":271,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addtracktoplaylist",{"_index":1606,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["addtracktoplaylist(song",{"_index":2100,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addtracktoplaylist(track",{"_index":269,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["adjust",{"_index":3114,"title":{},"body":{"index.html":{}}}],["advertising",{"_index":3334,"title":{},"body":{"license.html":{}}}],["affected",{"_index":3363,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":3241,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":3321,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3377,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":2207,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":2205,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":1088,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["against",{"_index":3277,"title":{},"body":{"license.html":{}}}],["aiff",{"_index":1067,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":77,"title":{"interfaces/Album.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["album.coverurl",{"_index":1641,"title":{},"body":{"components/LibraryComponent.html":{}}}],["album.name",{"_index":262,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["album.year",{"_index":1642,"title":{},"body":{"components/LibraryComponent.html":{}}}],["albumcompare",{"_index":201,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap",{"_index":179,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.has(albumname",{"_index":183,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.set(albumname",{"_index":184,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.values()].sort((a",{"_index":187,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumname",{"_index":181,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albums",{"_index":178,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumtracks",{"_index":266,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["aliases",{"_index":3447,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1194,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allowed_extensions",{"_index":1075,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":918,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":950,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1593,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":2551,"title":{},"body":{"components/ShellComponent.html":{}}}],["allowedtypes",{"_index":1094,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":311,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["amended",{"_index":3300,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analyserconfig",{"_index":284,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":319,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analyservalue",{"_index":2939,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyzer",{"_index":2988,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["and/or",{"_index":3192,"title":{},"body":{"license.html":{}}}],["angular/cdk",{"_index":3020,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2577,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":110,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":2430,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1518,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{}}}],["angular/compiler",{"_index":3022,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":90,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":2151,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":119,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3023,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":106,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1987,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2696,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2835,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":1331,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":2431,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":104,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":125,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["angular/material/list",{"_index":95,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":100,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/material/progress",{"_index":127,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2836,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2579,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1984,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":991,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":2071,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":2070,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":2581,"title":{},"body":{"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2719,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angulartitleservice",{"_index":2707,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2897,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["anonymous",{"_index":1932,"title":{},"body":{"injectables/MetadataService.html":{}}}],["any).getasfilesystemhandle().then((handle",{"_index":1154,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["api",{"_index":957,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["api_key",{"_index":1553,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":1532,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["apis",{"_index":3106,"title":{},"body":{"index.html":{}}}],["app",{"_index":625,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"index.html":{}}}],["app.component.html",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":330,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":3455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontactinfo",{"_index":2013,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["applicable",{"_index":3306,"title":{},"body":{"license.html":{}}}],["application",{"_index":2649,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["applicationconfig",{"_index":3493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":1024,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["apply",{"_index":1039,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["appname",{"_index":2009,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["apps",{"_index":3115,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":3456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":3478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":3487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":3448,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../default",{"_index":3468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":3466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":3467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":3056,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":3061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":3041,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":3068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../idexed",{"_index":3463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../lastfm",{"_index":3451,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":3074,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":3049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":3053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":3054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":3064,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":3475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":3066,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":3450,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../settings.po.ts",{"_index":3473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":3470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":3449,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":3044,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":3078,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":3548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":674,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":676,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":3540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":3536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:14",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":3492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":3556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/idexed",{"_index":3524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":416,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:135",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:142",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:150",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:157",{"_index":471,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:163",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:171",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:177",{"_index":480,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:185",{"_index":476,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:190",{"_index":464,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:198",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:202",{"_index":474,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:212",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:216",{"_index":479,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:224",{"_index":469,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:24",{"_index":499,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:25",{"_index":503,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":502,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":504,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":500,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":484,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":485,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":509,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":482,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":506,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":497,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:42",{"_index":511,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:44",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":668,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":656,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:9",{"_index":661,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":970,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:15",{"_index":984,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16",{"_index":987,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:17",{"_index":986,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19",{"_index":979,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:30",{"_index":981,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:35",{"_index":982,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":908,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":78,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:102",{"_index":1634,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:141",{"_index":1614,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:165",{"_index":1621,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:171",{"_index":1620,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:176",{"_index":1622,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:182",{"_index":1619,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:190",{"_index":1616,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:199",{"_index":1615,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:216",{"_index":1618,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:225",{"_index":1617,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:242",{"_index":1624,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:246",{"_index":1623,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:250",{"_index":1625,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:48",{"_index":1628,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:49",{"_index":1629,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:50",{"_index":1627,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:52",{"_index":1630,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:54",{"_index":1626,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:67",{"_index":1632,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:68",{"_index":1631,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:69",{"_index":1633,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:71",{"_index":1636,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:79",{"_index":1635,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts",{"_index":1649,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:14",{"_index":1654,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:15",{"_index":1653,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:17",{"_index":1652,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":854,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player",{"_index":2287,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":2060,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:25",{"_index":2067,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:26",{"_index":2066,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":2077,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:137",{"_index":2103,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:142",{"_index":2101,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:148",{"_index":2112,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:163",{"_index":2099,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:169",{"_index":2123,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:175",{"_index":2121,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:179",{"_index":2107,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:191",{"_index":2105,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:207",{"_index":2124,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:216",{"_index":2104,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:237",{"_index":2110,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:25",{"_index":2132,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:255",{"_index":2109,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:264",{"_index":2118,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:27",{"_index":2142,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:282",{"_index":2119,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:29",{"_index":2131,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:299",{"_index":2114,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:303",{"_index":2117,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":2141,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:317",{"_index":2125,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:32",{"_index":2144,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:336",{"_index":2126,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:34",{"_index":2130,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:41",{"_index":2139,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:45",{"_index":2137,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:51",{"_index":2097,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":723,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":2401,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:142",{"_index":2414,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:150",{"_index":2416,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:156",{"_index":2421,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:161",{"_index":2422,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:165",{"_index":2419,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:40",{"_index":2426,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:41",{"_index":2423,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:44",{"_index":2425,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:46",{"_index":2428,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:48",{"_index":2412,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2698,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:9",{"_index":2700,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2753,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2785,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2779,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2783,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2781,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2789,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2787,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26",{"_index":2812,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2797,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2825,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31",{"_index":2832,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2819,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2830,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2822,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2795,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2799,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2814,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2808,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2816,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2806,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2818,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2775,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2827,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2811,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2804,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2824,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2793,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2791,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2777,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2874,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:103",{"_index":2882,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:124",{"_index":2884,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:13",{"_index":2888,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2885,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2889,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:186",{"_index":2880,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2886,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2879,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:31",{"_index":2878,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:91",{"_index":2891,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2992,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2997,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2995,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":285,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":3083,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":3098,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":1210,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":1229,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":1222,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":1226,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":1219,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15",{"_index":1230,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":1217,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1400,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":3100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":1324,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:103",{"_index":1439,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:25",{"_index":1442,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:29",{"_index":1445,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:31",{"_index":1444,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:33",{"_index":1443,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:35",{"_index":1441,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:37",{"_index":1435,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:47",{"_index":1437,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:84",{"_index":1440,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:95",{"_index":1436,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:99",{"_index":1438,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1677,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1683,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1694,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1698,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1697,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1699,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1706,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2702,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2706,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2705,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":3101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":3002,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:11",{"_index":3007,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:28",{"_index":3008,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:7",{"_index":3006,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1962,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2539,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2671,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2690,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2544,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:42",{"_index":2574,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:43",{"_index":2569,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:44",{"_index":2571,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:45",{"_index":2570,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:47",{"_index":2565,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:56",{"_index":2568,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:58",{"_index":2573,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:60",{"_index":2559,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:65",{"_index":2564,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:69",{"_index":2562,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":3535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":744,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:41",{"_index":2687,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:43",{"_index":2688,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:45",{"_index":2686,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:47",{"_index":2689,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:48",{"_index":2680,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:70",{"_index":2681,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:75",{"_index":2684,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:79",{"_index":2683,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:84",{"_index":2685,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:88",{"_index":2682,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":2675,"title":{},"body":{"interfaces/ThemeColor.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2711,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2714,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:45",{"_index":2716,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:52",{"_index":2715,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":3533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":3534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appversion",{"_index":2011,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["arguments_",{"_index":2699,"title":{},"body":{"pipes/TimePipe.html":{}}}],["arial",{"_index":1057,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["arising",{"_index":3288,"title":{},"body":{"license.html":{}}}],["array",{"_index":738,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["array.from(droppedfiles",{"_index":1178,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["array.from(event.datatransfer.items",{"_index":1153,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["arrays",{"_index":1940,"title":{},"body":{"injectables/MetadataService.html":{}}}],["art",{"_index":1843,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["artist",{"_index":165,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist:${escapelucenequerystring(artist",{"_index":2021,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["artistcompare",{"_index":198,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artists",{"_index":196,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artwork",{"_index":2216,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2712,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":3379,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1804,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":3322,"title":{},"body":{"license.html":{}}}],["associating",{"_index":3240,"title":{},"body":{"license.html":{}}}],["async",{"_index":249,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["asyncgenerator",{"_index":1767,"title":{},"body":{"injectables/MetadataService.html":{}}}],["atrack",{"_index":205,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["attorney",{"_index":3158,"title":{},"body":{"license.html":{}}}],["audio",{"_index":522,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"index.html":{},"properties.html":{}}}],["audio.service",{"_index":990,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":1071,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":1064,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":1073,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":1065,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":1068,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":1074,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":1070,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":1069,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":1072,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/x",{"_index":1066,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":527,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.creategain",{"_index":565,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":563,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement",{"_index":541,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.autoplay",{"_index":547,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.controls",{"_index":548,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.id",{"_index":543,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.loop",{"_index":542,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.preload",{"_index":551,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.style.display",{"_index":545,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.volume",{"_index":549,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioservice",{"_index":414,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audioservice.isplaying",{"_index":2393,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":562,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiosource.connect(eqgain",{"_index":571,"title":{},"body":{"injectables/AudioService.html":{}}}],["author",{"_index":3431,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":3266,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":3191,"title":{},"body":{"license.html":{}}}],["auto",{"_index":552,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["autoincrement",{"_index":3530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":226,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["automatische",{"_index":799,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["autoscroll",{"_index":2450,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":192,"title":{},"body":{"interfaces/Album.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2974,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2966,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2975,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avoid",{"_index":1475,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["await",{"_index":251,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":2488,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis.valueof",{"_index":1312,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":1317,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":1316,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":1211,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":1315,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":1318,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":1220,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":168,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"license.html":{}}}],["b.track",{"_index":211,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["back",{"_index":219,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{}}}],["background",{"_index":1199,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["backgroundcolor",{"_index":877,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["band",{"_index":518,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"index.html":{}}}],["bandfrequency",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":648,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains[bandfrequency",{"_index":650,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandpipe",{"_index":654,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{}}}],["bands",{"_index":975,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bar",{"_index":2590,"title":{},"body":{"components/ShellComponent.html":{}}}],["barcount",{"_index":302,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["barkscalebandenergy",{"_index":3457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":325,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2758,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":324,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":3458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":710,"title":{},"body":{"interfaces/Chainable.html":{}}}],["basecolor",{"_index":836,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["basecolor.darken(variant.darkenfactor",{"_index":842,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["basecolor.lighten(variant.lightenfactor",{"_index":840,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["based",{"_index":229,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["basegain",{"_index":417,"title":{},"body":{"injectables/AudioService.html":{}}}],["basevisualizeroptions",{"_index":321,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":3163,"title":{},"body":{"license.html":{}}}],["bcbcbc",{"_index":2894,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["behavior",{"_index":2480,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["bei",{"_index":801,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["below",{"_index":3184,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":3336,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":2173,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":1287,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["bessere",{"_index":1660,"title":{},"body":{"injectables/LibraryService.html":{}}}],["better",{"_index":2961,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["biquadfilternode",{"_index":534,"title":{},"body":{"injectables/AudioService.html":{}}}],["bitrate",{"_index":670,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["bitrate.pipe",{"_index":887,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":667,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1879,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1839,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1857,"title":{},"body":{"injectables/MetadataService.html":{}}}],["bold",{"_index":1055,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2645,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["border",{"_index":1188,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["both",{"_index":213,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["bottom",{"_index":2437,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":1186,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["break",{"_index":2270,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2575,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2576,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2597,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2596,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2595,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2598,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["btrack",{"_index":210,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["buffer",{"_index":2958,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffer.buffer",{"_index":2981,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":323,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2963,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2960,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2957,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["build",{"_index":3209,"title":{},"body":{"license.html":{}}}],["buildapiurl(method",{"_index":1547,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["button",{"_index":1285,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.pressed",{"_index":1298,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":1300,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":1212,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":1303,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":1308,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":1223,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2533,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2616,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":3407,"title":{},"body":{"license.html":{}}}],["caapi",{"_index":2015,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["cache",{"_index":1302,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":1310,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":1304,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":1309,"title":{},"body":{"injectables/GamepadService.html":{}}}],["calculate",{"_index":2477,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["call",{"_index":621,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":1325,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["called",{"_index":1703,"title":{},"body":{"injectables/LoaderService.html":{}}}],["caller",{"_index":1672,"title":{},"body":{"injectables/LibraryService.html":{}}}],["cancel",{"_index":2528,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2984,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":3345,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":313,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["canvas.getcontext('2d",{"_index":1003,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.height",{"_index":1007,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.width",{"_index":1005,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvasgradient",{"_index":3490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":3459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasref",{"_index":976,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvaswidth",{"_index":3460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2872,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":305,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":303,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":3461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":3538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2268,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":3505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1502,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":940,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":3323,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":3149,"title":{},"body":{"license.html":{},"properties.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":107,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":108,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":109,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["center",{"_index":1196,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":3194,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2043,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["chainable",{"_index":673,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2454,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["changedarkmode",{"_index":2692,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2693,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changes",{"_index":993,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{}}}],["check",{"_index":953,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":1295,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":1236,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":713,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlaylistComponent.html":{}}}],["child(${link",{"_index":3551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chrome",{"_index":3110,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":1910,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunk.length",{"_index":1923,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks",{"_index":1919,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks.push(new",{"_index":1893,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks.reduce((sum",{"_index":1921,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize",{"_index":1915,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize).arraybuffer",{"_index":1892,"title":{},"body":{"injectables/MetadataService.html":{}}}],["circular",{"_index":326,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":3207,"title":{},"body":{"license.html":{}}}],["class",{"_index":136,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["class.closed",{"_index":2626,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2627,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":1202,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":623,"title":{},"body":{"injectables/AudioService.html":{}}}],["clear",{"_index":1008,"title":{},"body":{"components/EqualizerComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":3409,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":1322,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":1275,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.processinginterval",{"_index":238,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["clearmetadatacache",{"_index":1968,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2672,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1486,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":3159,"title":{},"body":{"license.html":{}}}],["close",{"_index":1413,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2617,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2750,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2618,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["code",{"_index":2650,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":788,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["color.brightness",{"_index":852,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.hex",{"_index":829,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.islight",{"_index":1948,"title":{},"body":{"injectables/MetadataService.html":{}}}],["color.name",{"_index":828,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.tohex",{"_index":850,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["color_variants",{"_index":757,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":722,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2947,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2945,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2946,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colord",{"_index":749,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["colord(hex",{"_index":837,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["colorful",{"_index":3428,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":754,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"index.html":{}}}],["colors.ts",{"_index":3469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorthief",{"_index":1797,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["colorthief.getcolor(img",{"_index":1936,"title":{},"body":{"injectables/MetadataService.html":{}}}],["colorthief.getpalette(img",{"_index":1934,"title":{},"body":{"injectables/MetadataService.html":{}}}],["colorvariant",{"_index":743,"title":{"interfaces/ColorVariant.html":{}},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["combination",{"_index":2654,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["combine",{"_index":1918,"title":{},"body":{"injectables/MetadataService.html":{}}}],["combined",{"_index":1924,"title":{},"body":{"injectables/MetadataService.html":{}}}],["combined.set(chunk",{"_index":1927,"title":{},"body":{"injectables/MetadataService.html":{}}}],["command",{"_index":699,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":686,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":682,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":3221,"title":{},"body":{"license.html":{}}}],["commons",{"_index":3147,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":3261,"title":{},"body":{"license.html":{}}}],["compare",{"_index":195,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["comparison",{"_index":220,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["compensation",{"_index":3238,"title":{},"body":{"license.html":{}}}],["competition",{"_index":3279,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2456,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["component",{"_index":84,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["component_template",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":331,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2720,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2526,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":1084,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/ShellComponent.html":{}}}],["components/slide",{"_index":2609,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":690,"title":{},"body":{"interfaces/Chainable.html":{}}}],["computecolors(hex",{"_index":835,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["computed",{"_index":85,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":3393,"title":{},"body":{"license.html":{}}}],["confer",{"_index":3179,"title":{},"body":{"license.html":{}}}],["config",{"_index":2748,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config).afterclosed",{"_index":2752,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config.ts",{"_index":3464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":570,"title":{},"body":{"injectables/AudioService.html":{}}}],["connected",{"_index":1255,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":1248,"title":{},"body":{"injectables/GamepadService.html":{}}}],["consents",{"_index":3413,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":3237,"title":{},"body":{"license.html":{}}}],["console.error('error",{"_index":1666,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["console.error('file",{"_index":278,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('worker",{"_index":1499,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":591,"title":{},"body":{"injectables/AudioService.html":{}}}],["console.log('button",{"_index":1265,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":2181,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":1271,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":941,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":1269,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":1281,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":1277,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2731,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2727,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2738,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":1273,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":1253,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2907,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":1256,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1819,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1821,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":1284,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":1292,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":1539,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('file",{"_index":1170,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["console.warn('loaderservice",{"_index":1702,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('no",{"_index":2056,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":3016,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":1357,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1738,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":145,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":225,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["contains",{"_index":1911,"title":{},"body":{"injectables/MetadataService.html":{}}}],["contemplated",{"_index":3351,"title":{},"body":{"license.html":{}}}],["content",{"_index":834,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["context",{"_index":558,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/variables.html":{}}}],["contrary",{"_index":3381,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":3312,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":3222,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":3200,"title":{},"body":{"license.html":{}}}],["control",{"_index":2661,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["controls",{"_index":3118,"title":{},"body":{"index.html":{}}}],["convert",{"_index":1938,"title":{},"body":{"injectables/MetadataService.html":{}}}],["converttobarkscale",{"_index":3043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":3333,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1140,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":3181,"title":{},"body":{"license.html":{}}}],["core",{"_index":521,"title":{},"body":{"injectables/AudioService.html":{}}}],["corporation",{"_index":3152,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2926,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["corresponding",{"_index":3305,"title":{},"body":{"license.html":{}}}],["council",{"_index":3292,"title":{},"body":{"license.html":{}}}],["cover",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["coverart",{"_index":2000,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["coverartarchiveapi",{"_index":2004,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":878,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":853,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":727,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":736,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":2128,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":2129,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":2034,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":2039,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images.length",{"_index":2041,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images?.length",{"_index":2036,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images[0",{"_index":2042,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdisplaycomponent",{"_index":375,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":2038,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.image",{"_index":2049,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.large",{"_index":2047,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":2048,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails['500",{"_index":2046,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverurl",{"_index":79,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1847,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.originalurl",{"_index":1854,"title":{},"body":{"injectables/MetadataService.html":{}}}],["create",{"_index":540,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["createcolorinfo",{"_index":1942,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createcolorinfo(dominantcolor",{"_index":1951,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createcolorinfo(palette[1",{"_index":1952,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createcolorinfo(palette[2",{"_index":1953,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createcolorinfo(palette[3",{"_index":1954,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createcolorinfo(palette[4",{"_index":1955,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createcolorinfo(palette[5",{"_index":1956,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":1268,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":1264,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture",{"_index":1761,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1768,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile",{"_index":1762,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(filedata",{"_index":1770,"title":{},"body":{"injectables/MetadataService.html":{}}}],["creative",{"_index":3146,"title":{},"body":{"license.html":{}}}],["creator",{"_index":3186,"title":{},"body":{"license.html":{}}}],["ctx",{"_index":1002,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.beginpath",{"_index":1046,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.clearrect(0",{"_index":1009,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.fillstyle",{"_index":1052,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(`gain",{"_index":1060,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(label",{"_index":1051,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.font",{"_index":1054,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.linewidth",{"_index":1015,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.moveto(freqpoints[0].x",{"_index":1047,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.strokestyle",{"_index":1013,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.textalign",{"_index":1058,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["cultural",{"_index":3201,"title":{},"body":{"license.html":{}}}],["culture",{"_index":3226,"title":{},"body":{"license.html":{}}}],["current",{"_index":2458,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["currentalbum",{"_index":265,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentalbum.name",{"_index":267,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentanalyser",{"_index":2922,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2916,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2920,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":926,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":2481,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":2232,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":2078,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2914,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2918,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":2079,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentposition",{"_index":2252,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":418,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":890,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack.metadata?.hash",{"_index":2471,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":893,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":895,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":894,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":902,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":901,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":900,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":898,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":903,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":892,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":896,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["curve",{"_index":1023,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["custom",{"_index":685,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":706,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":3542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#load_files_menu",{"_index":3543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":3554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":3546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":3547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":3544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":3555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":3537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":3541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":3550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":701,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.wait(300",{"_index":704,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":554,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":718,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":714,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":700,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":719,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":3416,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3171,"title":{},"body":{"license.html":{}}}],["dark",{"_index":824,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["dark)').matches",{"_index":790,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":851,"title":{},"body":{"interfaces/ColorVariant.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["darkenfactor",{"_index":745,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":785,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":862,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":861,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2745,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":1190,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":1394,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["data.album.image",{"_index":1559,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2537,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2536,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":2025,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["database",{"_index":3193,"title":{},"body":{"license.html":{}}}],["databaseconfig",{"_index":3462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":3296,"title":{},"body":{"license.html":{}}}],["date",{"_index":3026,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["db",{"_index":916,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dbconfig",{"_index":3525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbtrack",{"_index":272,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle",{"_index":276,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle?.getfile",{"_index":274,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtracks",{"_index":273,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dddddd",{"_index":1014,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["declare",{"_index":696,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorators",{"_index":2642,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":2298,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["decreasevolume(value",{"_index":2306,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["deemed",{"_index":3371,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":1234,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":1232,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":1342,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["defects",{"_index":3401,"title":{},"body":{"license.html":{}}}],["defined",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1432,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":2460,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dependencies",{"_index":2913,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"dependencies.html":{},"index.html":{}}}],["depicted",{"_index":3274,"title":{},"body":{"license.html":{}}}],["deps",{"_index":3514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":1213,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":1218,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":1214,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":1221,"title":{},"body":{"injectables/GamepadService.html":{}}}],["derive",{"_index":737,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["description",{"_index":1326,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"properties.html":{}}}],["deselect",{"_index":2235,"title":{},"body":{"injectables/PlayerService.html":{}}}],["desktop",{"_index":3128,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":2155,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1510,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":2145,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["details",{"_index":1716,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":2264,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":2263,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":2455,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["determine",{"_index":2479,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":3338,"title":{},"body":{"license.html":{}}}],["dialog",{"_index":1340,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":1335,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1407,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1408,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1401,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2530,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":2531,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1417,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1416,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1419,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2529,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1415,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2527,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":1346,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1390,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1397,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":3574,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["didn't",{"_index":968,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["diesen",{"_index":1351,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["directive",{"_index":371,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":956,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":2397,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["directoryhandles",{"_index":3532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirhandle",{"_index":3099,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirhandle.values",{"_index":947,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry",{"_index":907,"title":{"interfaces/DirHandleEntry.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry).topromise",{"_index":939,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":2282,"title":{},"body":{"injectables/PlayerService.html":{}}}],["disableclose",{"_index":2749,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabletooltipinteractivity",{"_index":3520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":3382,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":3169,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2986,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["disconnectallanalyzers",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnected",{"_index":1274,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":1272,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":3405,"title":{},"body":{"license.html":{}}}],["display",{"_index":873,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":2072,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":875,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":876,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":872,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":886,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":885,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":883,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":669,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:8",{"_index":672,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":871,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayfunction",{"_index":977,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":980,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":1372,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":3348,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":3285,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2478,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":3246,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3157,"title":{},"body":{"license.html":{}}}],["document",{"_index":1328,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":556,"title":{},"body":{"injectables/AudioService.html":{}}}],["document.body.append(this.fileinput",{"_index":1595,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1587,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style",{"_index":822,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2736,"title":{},"body":{"injectables/UpdateService.html":{}}}],["document.queryselector('.cdk",{"_index":2511,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dom",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dominantcolor",{"_index":1935,"title":{},"body":{"injectables/MetadataService.html":{}}}],["domrect",{"_index":316,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["double",{"_index":952,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["download",{"_index":1998,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2927,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["dragend",{"_index":1132,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":1119,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":1124,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":1116,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":1100,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":1129,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":1118,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":1127,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":1117,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":1010,"title":{},"body":{"components/EqualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":3045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":3046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":3047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawequalizerresponse",{"_index":978,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["drawosc",{"_index":3048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":381,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":1099,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":1120,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dual",{"_index":717,"title":{},"body":{"interfaces/Chainable.html":{}}}],["duration",{"_index":419,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":2080,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2746,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":3420,"title":{},"body":{"license.html":{}}}],["e",{"_index":1366,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2664,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":1368,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":1369,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["each",{"_index":1035,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{},"license.html":{}}}],["early",{"_index":1166,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["effect",{"_index":86,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":3372,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":3232,"title":{},"body":{"license.html":{}}}],["eine",{"_index":1288,"title":{},"body":{"injectables/GamepadService.html":{}}}],["elects",{"_index":3244,"title":{},"body":{"license.html":{}}}],["element",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":988,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":523,"title":{},"body":{"injectables/AudioService.html":{}}}],["elementscrolled",{"_index":2440,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2900,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2903,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embeddedpicture",{"_index":735,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["emit",{"_index":1159,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["empty",{"_index":1428,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":2434,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":2451,"title":{},"body":{"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1545,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1544,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":709,"title":{},"body":{"interfaces/Chainable.html":{}}}],["end",{"_index":1042,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["endchunk",{"_index":1913,"title":{},"body":{"injectables/MetadataService.html":{}}}],["enjoyment",{"_index":3350,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2971,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":2185,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":1519,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(largeimage",{"_index":1575,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(original",{"_index":2055,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ensurehttps(smallimage",{"_index":1574,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(thumb",{"_index":2054,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ensurehttps(url",{"_index":3089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entire",{"_index":1886,"title":{},"body":{"injectables/MetadataService.html":{}}}],["entries",{"_index":1648,"title":{},"body":{"components/LibraryComponent.html":{}}}],["entries[0].contentrect",{"_index":2937,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":929,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.getfile",{"_index":949,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":948,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":3040,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":3465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":3500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":575,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["eqgain",{"_index":566,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.connect(eqinput",{"_index":572,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.gain.value",{"_index":581,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqinput",{"_index":567,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput",{"_index":568,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput.connect(gain",{"_index":573,"title":{},"body":{"injectables/AudioService.html":{}}}],["equalizer",{"_index":971,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"index.html":{}}}],["equalizer'},{'name",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizer.component.html",{"_index":973,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":974,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":378,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["equitable",{"_index":3347,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":3304,"title":{},"body":{"license.html":{}}}],["eqvalues[freq",{"_index":1041,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands.at",{"_index":1044,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands[0",{"_index":1032,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["error",{"_index":590,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/WakelockService.html":{}}}],["error('metadata",{"_index":1472,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1509,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1495,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1504,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error.message",{"_index":3017,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errorevent",{"_index":1498,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":3404,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1875,"title":{},"body":{"injectables/MetadataService.html":{}}}],["es",{"_index":1429,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["escape.helper.ts",{"_index":3051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escapelucenequerystring",{"_index":2006,"title":{},"body":{"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["escapelucenequerystring(querystring",{"_index":3091,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslint",{"_index":2281,"title":{},"body":{"injectables/PlayerService.html":{},"additional-documentation/helpers.html":{}}}],["establish",{"_index":2912,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["european",{"_index":3290,"title":{},"body":{"license.html":{}}}],["event",{"_index":598,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["event.checked",{"_index":1990,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["event.clientx}px",{"_index":2517,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.clienty}px",{"_index":2519,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.currentversion.hash",{"_index":2732,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1492,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2964,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2965,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":1139,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer.items[0",{"_index":1149,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":1138,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.items",{"_index":1147,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2740,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":1254,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2733,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":1136,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.stoppropagation",{"_index":1137,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2725,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2729,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventmanager",{"_index":1332,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":624,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":691,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusive",{"_index":3180,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3573,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["exercise",{"_index":3370,"title":{},"body":{"license.html":{}}}],["existing",{"_index":688,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["exists",{"_index":2989,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["exit",{"_index":626,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["expect",{"_index":2177,"title":{},"body":{"injectables/PlayerService.html":{}}}],["expectation",{"_index":3235,"title":{},"body":{"license.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":3352,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2663,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":3331,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3242,"title":{},"body":{"license.html":{}}}],["extractcolorswithcolorthief",{"_index":3052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithcolorthief(coverurls.originalurl",{"_index":1855,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithcolorthief(objecturl",{"_index":1859,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithcolorthief(url",{"_index":1929,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1557,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extracting",{"_index":1961,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extraction",{"_index":1481,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":3113,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1451,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1453,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extralarge')?.['#text",{"_index":1570,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["failed",{"_index":1173,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fall",{"_index":218,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{}}}],["fallback",{"_index":1169,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["fallback_accent_color",{"_index":752,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":753,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2873,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["false",{"_index":467,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2487,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["fear",{"_index":3205,"title":{},"body":{"license.html":{}}}],["features",{"_index":3107,"title":{},"body":{"index.html":{}}}],["fetchalbuminfo(artist",{"_index":1542,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":2031,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ffffff",{"_index":1950,"title":{},"body":{"injectables/MetadataService.html":{}}}],["ffnet",{"_index":1350,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2869,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2759,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":286,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2432,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.size",{"_index":1883,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(math.max(0",{"_index":1914,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(middlepos",{"_index":1891,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(quarterpos",{"_index":1902,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(threequarterpos",{"_index":1907,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata",{"_index":919,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filedata.file",{"_index":1822,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.file.name",{"_index":1861,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.filehandle",{"_index":1823,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.push",{"_index":958,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["filedata.push(...subfiles",{"_index":961,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedatas",{"_index":1766,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["filedatas.values",{"_index":1810,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedatas?.length",{"_index":1807,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":380,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":275,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filehandle.getfile",{"_index":2193,"title":{},"body":{"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filehandles",{"_index":1150,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.length",{"_index":1161,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.push(handle",{"_index":1156,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandlesdropped",{"_index":1095,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileinput",{"_index":1584,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":1177,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":921,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice.currentfolderhandle",{"_index":2396,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["fileloaderservicefactory",{"_index":3055,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":733,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filepath",{"_index":707,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":702,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["files.push(file",{"_index":1180,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesdroped",{"_index":1096,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesize",{"_index":1882,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesize).arraybuffer",{"_index":1916,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filestoprocess",{"_index":1805,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesystemdirectoryhandle",{"_index":913,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filesystemfilehandle",{"_index":730,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["fill",{"_index":2976,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":263,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/LibraryComponent.html":{}}}],["filter((artist",{"_index":164,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filter.gain.value",{"_index":579,"title":{},"body":{"injectables/AudioService.html":{}}}],["filtered",{"_index":160,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.filter((item",{"_index":172,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.sort((a",{"_index":194,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filteredbyserchterm",{"_index":144,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtering",{"_index":2237,"title":{},"body":{"injectables/PlayerService.html":{}}}],["finalize",{"_index":1686,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["finally",{"_index":1673,"title":{},"body":{"injectables/LibraryService.html":{}}}],["find",{"_index":1561,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["findreleasegroupid(artist",{"_index":2019,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":1784,"title":{},"body":{"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":1280,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebuttonaction(index",{"_index":1276,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":3154,"title":{},"body":{"license.html":{}}}],["first",{"_index":197,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{}}}],["firstvaluefrom",{"_index":917,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2751,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":1546,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getall('library",{"_index":1656,"title":{},"body":{"injectables/LibraryService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('directoryhandles",{"_index":927,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('library",{"_index":1828,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":3397,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1185,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["flac",{"_index":1077,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":1184,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["float32array",{"_index":3084,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2662,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["fns",{"_index":3027,"title":{},"body":{"dependencies.html":{}}}],["focus",{"_index":2183,"title":{},"body":{"injectables/PlayerService.html":{}}}],["folder/files",{"_index":2395,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["following",{"_index":3257,"title":{},"body":{"license.html":{}}}],["forcefully",{"_index":2506,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["form",{"_index":3216,"title":{},"body":{"license.html":{}}}],["format",{"_index":734,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formatlabel",{"_index":2299,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formatlabel(value",{"_index":2308,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formats",{"_index":3109,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":2331,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":2701,"title":{},"body":{"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatwithleadingzero",{"_index":3059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatwithleadingzero(value",{"_index":3096,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":118,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["found",{"_index":279,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":3225,"title":{},"body":{"license.html":{}}}],["freely",{"_index":3214,"title":{},"body":{"license.html":{}}}],["freq",{"_index":1036,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints",{"_index":1026,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints.push",{"_index":1031,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints[0].y",{"_index":1048,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency",{"_index":1021,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency_bands",{"_index":515,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["frequency_bands)[number",{"_index":740,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["frequencyband",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["frequencybarsconfig",{"_index":301,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":3471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":2037,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["full",{"_index":2052,"title":{},"body":{"injectables/MusicbrainzService.html":{},"miscellaneous/variables.html":{}}}],["fullscreen/multiwindow",{"_index":3444,"title":{},"body":{"todo.html":{}}}],["fully",{"_index":3315,"title":{},"body":{"license.html":{}}}],["function",{"_index":945,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":3042,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":3227,"title":{},"body":{"license.html":{}}}],["future",{"_index":3327,"title":{},"body":{"license.html":{}}}],["für",{"_index":1659,"title":{},"body":{"injectables/LibraryService.html":{}}}],["g",{"_index":1945,"title":{},"body":{"injectables/MetadataService.html":{}}}],["gain",{"_index":564,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":574,"title":{},"body":{"injectables/AudioService.html":{}}}],["gain.gain.value",{"_index":583,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainnode",{"_index":531,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainvalue",{"_index":473,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{}}}],["gainvalue.tofixed(1)}x",{"_index":1061,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["gamepad",{"_index":1251,"title":{},"body":{"injectables/GamepadService.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":1296,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":1231,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":2356,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":2366,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":2357,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":1244,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":1249,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":1252,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":1209,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":3060,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":304,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gblaster",{"_index":2010,"title":{},"body":{"injectables/MusicbrainzService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gblasterdb",{"_index":3526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1878,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":3136,"title":{},"body":{"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":3062,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1881,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehash(filedata.file",{"_index":1825,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generating",{"_index":1824,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator.bitdroid.de/#section",{"_index":3139,"title":{},"body":{"index.html":{}}}],["getanalysernode",{"_index":2890,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getasfilesystemhandle",{"_index":1148,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["getaudiofilesfromdirhandle",{"_index":3063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":946,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":960,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(handle",{"_index":944,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2955,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2956,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":3472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverdisplay",{"_index":3474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1576,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":1534,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1597,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethasended",{"_index":510,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1418,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":678,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":703,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getloadfilesmenuentry",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesmenuentry().click",{"_index":705,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1763,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(filedata",{"_index":1772,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":3476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":3065,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":2249,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":2276,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":3477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":3479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getthemecolor(color",{"_index":845,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["getting",{"_index":1849,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["gettoolbartitle",{"_index":3480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":3481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":2390,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["getvolumeslider",{"_index":3482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getxpos(freq",{"_index":1038,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["give",{"_index":2925,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":2175,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":2179,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":787,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":235,"title":{},"body":{"interfaces/Album.html":{},"injectables/GamepadService.html":{},"components/LibraryComponent.html":{}}}],["gp",{"_index":1259,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":1258,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":1260,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":3483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":969,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":931,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":966,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":3134,"title":{},"body":{"index.html":{}}}],["greater",{"_index":3230,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3310,"title":{},"body":{"license.html":{}}}],["grid",{"_index":1011,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["group",{"_index":2024,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["group/${releasegroupid",{"_index":2033,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":2030,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":2026,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":2027,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["handle",{"_index":912,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.kind",{"_index":1155,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handle.requestpermission",{"_index":967,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":1176,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1497,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlefilefallback(event",{"_index":1174,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handlemessage",{"_index":1490,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":1365,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{}}}],["handles",{"_index":1146,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handling",{"_index":1168,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hanging",{"_index":1476,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1393,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{}}}],["hash",{"_index":732,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1006,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":3339,"title":{},"body":{"license.html":{}}}],["held",{"_index":3385,"title":{},"body":{"license.html":{}}}],["help",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["helpers",{"_index":3575,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":1345,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":694,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":3313,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":3168,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":3173,"title":{},"body":{"license.html":{}}}],["hex",{"_index":849,"title":{},"body":{"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":1144,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1590,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1695,"title":{},"body":{"injectables/LoaderService.html":{}}}],["highest",{"_index":1043,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["hilfe",{"_index":1352,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk",{"_index":1383,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":1385,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["horizontal",{"_index":1016,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["host",{"_index":1182,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2646,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2660,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2643,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2644,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2656,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2659,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2657,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2658,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2625,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":1112,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hotkey",{"_index":1323,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1421,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1424,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1427,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":1336,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1411,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeys.service",{"_index":1404,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1399,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":383,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":1337,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":3067,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["htmlaudioelement",{"_index":525,"title":{},"body":{"injectables/AudioService.html":{}}}],["htmlcanvaselement",{"_index":2896,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlelement",{"_index":2513,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["htmlinputelement",{"_index":1585,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":1528,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["http_interceptors",{"_index":3521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1517,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["httpevent",{"_index":1684,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1682,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1685,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1680,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":3137,"title":{},"body":{"index.html":{}}}],["https://github.com/motabass/gblaster",{"_index":3430,"title":{},"body":{"properties.html":{}}}],["https://on.cypress.io/custom",{"_index":695,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":3141,"title":{},"body":{"index.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1533,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["icon",{"_index":3135,"title":{},"body":{"index.html":{}}}],["iconregistry",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgicon('logo",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgiconset(sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":3140,"title":{},"body":{"index.html":{}}}],["id",{"_index":868,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":858,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["id3coverpicture",{"_index":724,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":857,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["id3tagsservice",{"_index":1449,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":3224,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":728,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ii",{"_index":3263,"title":{},"body":{"license.html":{}}}],["iii",{"_index":3268,"title":{},"body":{"license.html":{}}}],["image",{"_index":1515,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["image.front",{"_index":2040,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["images",{"_index":1558,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.at",{"_index":1572,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.find((img",{"_index":1563,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.length",{"_index":1560,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images[0]?.['#text",{"_index":1567,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["img",{"_index":1930,"title":{},"body":{"injectables/MetadataService.html":{}}}],["img.crossorigin",{"_index":1931,"title":{},"body":{"injectables/MetadataService.html":{}}}],["img.onerror",{"_index":1959,"title":{},"body":{"injectables/MetadataService.html":{}}}],["img.onload",{"_index":1933,"title":{},"body":{"injectables/MetadataService.html":{}}}],["img.size",{"_index":1564,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["img.src",{"_index":1960,"title":{},"body":{"injectables/MetadataService.html":{}}}],["immediately",{"_index":2198,"title":{},"body":{"injectables/PlayerService.html":{}}}],["implementation",{"_index":3298,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":3308,"title":{},"body":{"license.html":{}}}],["implements",{"_index":138,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":3394,"title":{},"body":{"license.html":{}}}],["import",{"_index":83,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":3563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":3565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":3561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":3566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1465,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["important",{"_index":1912,"title":{},"body":{"injectables/MetadataService.html":{}}}],["imports",{"_index":131,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["include",{"_index":3255,"title":{},"body":{"license.html":{}}}],["including",{"_index":3219,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":3211,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":2300,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["increasevolume(value",{"_index":2310,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":915,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":3124,"title":{},"body":{"index.html":{}}}],["indexeddbservice",{"_index":924,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["indexeddbtrackmetadata",{"_index":91,"title":{"interfaces/IndexedDbTrackMetadata.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["indexeddbtracks",{"_index":1650,"title":{},"body":{"injectables/LibraryService.html":{}}}],["ineffective",{"_index":3358,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":3374,"title":{},"body":{"license.html":{}}}],["influence",{"_index":1040,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":3162,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3208,"title":{},"body":{"license.html":{}}}],["init",{"_index":2713,"title":{},"body":{"injectables/UpdateService.html":{}}}],["initbarkscale",{"_index":3069,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":557,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["initializetheme",{"_index":811,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2567,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":87,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["inject(audioservice",{"_index":983,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2591,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":2156,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":1339,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":1113,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":1338,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":2075,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["inject(gamepadservice",{"_index":2335,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":2336,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["inject(httpclient",{"_index":1529,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["inject(id3tagsservice",{"_index":1800,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1801,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(libraryservice",{"_index":141,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["inject(loaderservice",{"_index":1690,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":520,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1410,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":1341,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":2154,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":756,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":139,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["inject(musicbrainzservice",{"_index":1802,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":925,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(playerservice",{"_index":140,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":1115,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":2592,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2721,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2708,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":2074,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":2831,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":2153,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2901,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1409,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":413,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":415,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":1106,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"index.html":{}}}],["input('bars",{"_index":2887,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":2620,"title":{},"body":{"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{}}}],["inset",{"_index":1191,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2739,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":3132,"title":{},"body":{"index.html":{}}}],["instant",{"_index":2486,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["intended",{"_index":3251,"title":{},"body":{"license.html":{}}}],["intending",{"_index":3341,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1678,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1679,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1674,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1676,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["internal",{"_index":2987,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":2152,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":228,"title":{},"body":{"interfaces/Album.html":{},"injectables/GamepadService.html":{},"components/LibraryComponent.html":{}}}],["invalid",{"_index":3357,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":3375,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":3373,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":3368,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":3316,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":2409,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":2413,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":2433,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":1311,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":3070,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":3085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":3071,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2552,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":3072,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{}}}],["ismediasessionsupported",{"_index":3073,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions",{"_index":3076,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":3086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{}}}],["isplaying",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":2415,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isprocessing",{"_index":232,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["isstopped",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{}}}],["ist",{"_index":1358,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":3077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":1815,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["item",{"_index":1152,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["item.album",{"_index":174,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item.artist",{"_index":173,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item__content",{"_index":3553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1195,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["itemsize",{"_index":2492,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":3275,"title":{},"body":{"license.html":{}}}],["jest",{"_index":3576,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["json",{"_index":1555,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["judged",{"_index":3355,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":3176,"title":{},"body":{"license.html":{}}}],["justify",{"_index":1197,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["keine",{"_index":1431,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":3116,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1367,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":1363,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":3529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":1327,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["keys.replaceall",{"_index":1382,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":3392,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3249,"title":{},"body":{"license.html":{}}}],["known",{"_index":3325,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1876,"title":{},"body":{"injectables/MetadataService.html":{}}}],["kvalue",{"_index":663,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kvalue.tofixed(1)}k",{"_index":665,"title":{},"body":{"pipes/BandPipe.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["large",{"_index":2050,"title":{},"body":{"injectables/MusicbrainzService.html":{},"license.html":{}}}],["large')?.['#text",{"_index":1571,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["largeimage",{"_index":1568,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["larger",{"_index":1895,"title":{},"body":{"injectables/MetadataService.html":{}}}],["last",{"_index":1909,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlayerToolbarComponent.html":{}}}],["last.fm",{"_index":1541,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1793,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1530,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1512,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1524,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1516,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1527,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1526,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1523,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2969,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["latencyhint",{"_index":559,"title":{},"body":{"injectables/AudioService.html":{}}}],["latent",{"_index":3400,"title":{},"body":{"license.html":{}}}],["later",{"_index":3206,"title":{},"body":{"license.html":{}}}],["latest",{"_index":3105,"title":{},"body":{"index.html":{}}}],["launch",{"_index":2182,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters",{"_index":2180,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":2192,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":2190,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":2174,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":3153,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3175,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3127,"title":{},"body":{"index.html":{}}}],["leadingminutezero",{"_index":3095,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":1097,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":1102,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2632,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1578,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":3148,"title":{},"body":{"license.html":{}}}],["legally",{"_index":3356,"title":{},"body":{"license.html":{}}}],["legend",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":3170,"title":{},"body":{"license.html":{}}}],["library",{"_index":1668,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":133,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":135,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.service",{"_index":130,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":137,"title":{"components/LibraryComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libraryservice",{"_index":129,"title":{"injectables/LibraryService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{}}}],["libraryservice.isloading",{"_index":1637,"title":{},"body":{"components/LibraryComponent.html":{}}}],["libs/.../lucene",{"_index":3050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../time.helper.ts",{"_index":3058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/lucene",{"_index":3090,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/time.helper.ts",{"_index":3094,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":1083,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":3145,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":3389,"title":{},"body":{"license.html":{}}}],["light",{"_index":825,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightenfactor",{"_index":746,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":864,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":846,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":863,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":3273,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":3220,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":3281,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3256,"title":{},"body":{"license.html":{}}}],["line",{"_index":2283,"title":{},"body":{"injectables/PlayerService.html":{}}}],["lines",{"_index":1012,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["linethickness",{"_index":2760,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":3549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3577,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["list",{"_index":2494,"title":{},"body":{"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":599,"title":{},"body":{"injectables/AudioService.html":{}}}],["literal",{"_index":1448,"title":{},"body":{"interfaces/Id3Tags.html":{}}}],["load",{"_index":2394,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["loadcomponent",{"_index":3560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":2233,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loadedtrack",{"_index":2244,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":909,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":920,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["loader.helpers.ts",{"_index":1063,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1689,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":922,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["loader.service.abstract.ts",{"_index":1203,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":1206,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:6",{"_index":1207,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:7",{"_index":1208,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":3057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":911,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:11",{"_index":1580,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:18",{"_index":2057,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:24",{"_index":1583,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:26",{"_index":1581,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:32",{"_index":2059,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:42",{"_index":2058,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:43",{"_index":1582,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1675,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1688,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2606,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":675,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":1667,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/MetadataService.html":{}}}],["loadingcounter",{"_index":1700,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadlastdirectory",{"_index":2301,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["loadlibraryfromdb",{"_index":1651,"title":{},"body":{"injectables/LibraryService.html":{}}}],["local",{"_index":1835,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localecompare(b.album",{"_index":203,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.artist",{"_index":200,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.title",{"_index":222,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localization",{"_index":3445,"title":{},"body":{"todo.html":{}}}],["localstorage",{"_index":577,"title":{},"body":{"injectables/AudioService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":512,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["locking",{"_index":3120,"title":{},"body":{"index.html":{}}}],["loop",{"_index":477,"title":{},"body":{"injectables/AudioService.html":{}}}],["lowersearchterm",{"_index":147,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["lowest",{"_index":1030,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["made",{"_index":3252,"title":{},"body":{"license.html":{}}}],["main_audio",{"_index":544,"title":{},"body":{"injectables/AudioService.html":{}}}],["maincolor",{"_index":309,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":622,"title":{},"body":{"injectables/AudioService.html":{}}}],["makes",{"_index":3164,"title":{},"body":{"license.html":{}}}],["manage",{"_index":227,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["management",{"_index":3434,"title":{},"body":{"todo.html":{}}}],["map",{"_index":175,"title":{},"body":{"interfaces/Album.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2599,"title":{},"body":{"components/ShellComponent.html":{}}}],["map((tag",{"_index":162,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["march",{"_index":3293,"title":{},"body":{"license.html":{}}}],["markus.mohoritsch@gmx.at",{"_index":2014,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["mat",{"_index":3545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1402,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":3515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1406,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1965,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2694,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2691,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":1329,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2717,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1403,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":1330,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":3138,"title":{},"body":{"index.html":{}}}],["matformfield",{"_index":120,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matformfieldmodule",{"_index":2404,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":2483,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":2279,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":2482,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(chunksize",{"_index":1889,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(filesize",{"_index":1888,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(kvalue)}k",{"_index":664,"title":{},"body":{"pipes/BandPipe.html":{}}}],["math.floor(math.random",{"_index":2286,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":2280,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":2136,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.log10(freq",{"_index":1018,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(maxfreq",{"_index":1020,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(minfreq",{"_index":1019,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.max(0",{"_index":2495,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":2138,"title":{},"body":{"injectables/PlayerService.html":{}}}],["mathint",{"_index":121,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticon",{"_index":103,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonbutton",{"_index":105,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonmodule",{"_index":1405,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":122,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matlistmodule",{"_index":94,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenu",{"_index":96,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["matmenucontent",{"_index":97,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenuitem",{"_index":98,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenumodule",{"_index":2063,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matmenutrigger",{"_index":99,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matoptionmodule",{"_index":2755,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprefix",{"_index":123,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressbar",{"_index":2548,"title":{},"body":{"components/ShellComponent.html":{}}}],["matprogressspinner",{"_index":126,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressspinnermodule",{"_index":2403,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2754,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2578,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2546,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslider",{"_index":2291,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidermodule",{"_index":972,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matsliderthumb",{"_index":2292,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidetogglechange",{"_index":1975,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1966,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matsuffix",{"_index":124,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mattoolbar",{"_index":2293,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattoolbarmodule",{"_index":2061,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltip",{"_index":2294,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattooltipmodule",{"_index":2062,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":2277,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":287,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":3330,"title":{},"body":{"license.html":{}}}],["mbapi",{"_index":2008,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["md5",{"_index":1798,"title":{},"body":{"injectables/MetadataService.html":{}}}],["md5(combined",{"_index":1928,"title":{},"body":{"injectables/MetadataService.html":{}}}],["mdc",{"_index":3552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaning",{"_index":3250,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":2445,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["media",{"_index":1739,"title":{},"body":{"injectables/MediaSessionService.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":529,"title":{},"body":{"injectables/AudioService.html":{}}}],["mediametadata(metadata",{"_index":1748,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1720,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionaction",{"_index":1715,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1717,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1750,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1705,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":3079,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":3332,"title":{},"body":{"license.html":{}}}],["medium')?.['#text",{"_index":1566,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["mega')?.['#text",{"_index":1569,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["member",{"_index":3337,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2508,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["menutrigger",{"_index":2407,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["merchantability",{"_index":3396,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1360,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.description",{"_index":1378,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":1379,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1525,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1491,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["meta",{"_index":748,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"todo.html":{}}}],["meta.coverurl.originalurl",{"_index":1870,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl?.originalurl?.startswith('blob",{"_index":1871,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl?.thumburl?.startswith('blob",{"_index":1873,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1869,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1880,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":114,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1867,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":1520,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1794,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1514,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:36",{"_index":1577,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":1457,"title":{},"body":{"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1827,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.coverurl.thumburl",{"_index":1831,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1829,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1840,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":116,"title":{"injectables/MetadataService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["metadataservice.processing",{"_index":2607,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadataservice.statustext",{"_index":2608,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadatasettingscomponent",{"_index":387,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["meter",{"_index":3121,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":3484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1552,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["methods",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["mic",{"_index":3440,"title":{},"body":{"todo.html":{}}}],["middlechunk",{"_index":1890,"title":{},"body":{"injectables/MetadataService.html":{}}}],["middlepos",{"_index":1887,"title":{},"body":{"injectables/MetadataService.html":{}}}],["migrating",{"_index":2655,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2648,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["min",{"_index":2278,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2761,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["mindecibels",{"_index":288,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["minfreq",{"_index":1049,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["miscellaneous",{"_index":3039,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":3129,"title":{},"body":{"index.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":3210,"title":{},"body":{"license.html":{}}}],["module",{"_index":1466,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["modules",{"_index":3422,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monochrome.svg",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["moral",{"_index":3264,"title":{},"body":{"license.html":{}}}],["more",{"_index":689,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{}}}],["motabass",{"_index":3432,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":2007,"title":{},"body":{"injectables/MusicbrainzService.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":2585,"title":{},"body":{"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":3234,"title":{},"body":{"license.html":{}}}],["mouseevent",{"_index":2418,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["mp3",{"_index":1076,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":1081,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mtb",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":3523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":729,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":1999,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1796,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzapi",{"_index":2005,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":1795,"title":{"injectables/MusicbrainzService.html":{}},"body":{"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":860,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":697,"title":{},"body":{"interfaces/Chainable.html":{}}}],["narrowing",{"_index":2666,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":3297,"title":{},"body":{"license.html":{}}}],["nativebrowserfileloaderservice",{"_index":923,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigateto",{"_index":2554,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2557,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigator.getgamepads",{"_index":1250,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1747,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1751,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1742,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1737,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1746,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1745,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":3013,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":3014,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":897,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nderungen",{"_index":802,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["nearby",{"_index":2485,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["necessary",{"_index":3412,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":3254,"title":{},"body":{"license.html":{}}}],["new",{"_index":166,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["newsize",{"_index":315,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["newtrack",{"_index":2200,"title":{},"body":{"injectables/PlayerService.html":{}}}],["next",{"_index":1681,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1692,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1459,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2998,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ngafterviewinit",{"_index":1121,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngclass",{"_index":2402,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2665,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2667,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":1135,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":239,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngx",{"_index":513,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":914,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1266,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":3144,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":561,"title":{},"body":{"injectables/AudioService.html":{}}}],["non",{"_index":3365,"title":{},"body":{"license.html":{}}}],["none",{"_index":546,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["nothing",{"_index":2188,"title":{},"body":{"injectables/PlayerService.html":{}}}],["now",{"_index":2967,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["null",{"_index":671,"title":{},"body":{"pipes/BitratePipe.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(a.track",{"_index":209,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(axisindex",{"_index":1241,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(b.track",{"_index":212,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(buttonindex",{"_index":1239,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(atrack",{"_index":215,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(btrack",{"_index":216,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(duration",{"_index":1734,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number.nan",{"_index":208,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbers",{"_index":214,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbervalue",{"_index":998,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["nx",{"_index":3568,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["object",{"_index":1836,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":3527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1842,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":3421,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1333,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":1364,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":1376,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2594,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2935,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":1371,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2938,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtained",{"_index":1164,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["obtaining",{"_index":3411,"title":{},"body":{"license.html":{}}}],["offers",{"_index":3390,"title":{},"body":{"license.html":{}}}],["offline",{"_index":3131,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":314,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":3489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":1926,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["ogg",{"_index":1078,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["oldsource",{"_index":629,"title":{},"body":{"injectables/AudioService.html":{}}}],["onchanges",{"_index":2612,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["oncontextmenu",{"_index":2410,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["oncontextmenu(event",{"_index":2417,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ondestroy",{"_index":1089,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":742,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["onfilehandlesdropped",{"_index":2555,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilehandlesdropped(files",{"_index":2561,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped",{"_index":2556,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped(files",{"_index":2563,"title":{},"body":{"components/ShellComponent.html":{}}}],["oninit",{"_index":88,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["onlibraryupdate",{"_index":240,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1969,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1974,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onsliderpositionchanged",{"_index":2302,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":2313,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1970,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1977,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1971,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1979,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1972,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1981,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":2303,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onvolumechange(value",{"_index":2315,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["open",{"_index":2503,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["opened",{"_index":2509,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["openedstate",{"_index":2621,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":942,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2619,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["option",{"_index":2870,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["optional",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":716,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":1355,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":1362,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":1080,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":2053,"title":{},"body":{"injectables/MusicbrainzService.html":{},"license.html":{}}}],["originalfn",{"_index":720,"title":{},"body":{"interfaces/Chainable.html":{}}}],["originalurl",{"_index":866,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["os",{"_index":3117,"title":{},"body":{"index.html":{}}}],["osc",{"_index":329,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2762,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":3122,"title":{},"body":{"index.html":{}}}],["oscilloscopepath",{"_index":3485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":306,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":328,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":3133,"title":{},"body":{"index.html":{}}}],["others",{"_index":3233,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":217,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["out",{"_index":1483,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{}}}],["output",{"_index":1108,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":2475,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":1098,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":1104,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":1090,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":1093,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":1092,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":1087,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":1107,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":1110,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:15",{"_index":1109,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:39",{"_index":1105,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:49",{"_index":1103,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:55",{"_index":1101,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":1086,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":1085,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlayref",{"_index":2510,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.left",{"_index":2516,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.position",{"_index":2514,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.top",{"_index":2518,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overtly",{"_index":3314,"title":{},"body":{"license.html":{}}}],["overview",{"_index":3423,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":687,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["owner",{"_index":3189,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":3188,"title":{},"body":{"license.html":{}}}],["owners",{"_index":3195,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2980,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":3019,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":3567,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{}}],["palette",{"_index":1853,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pane:last",{"_index":2512,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["panel",{"_index":2613,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2614,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2615,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2611,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2631,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2628,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2635,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2636,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2630,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2633,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2634,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2641,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2637,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2638,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2640,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2639,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2610,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":3282,"title":{},"body":{"license.html":{}}}],["parallele",{"_index":1657,"title":{},"body":{"injectables/LibraryService.html":{}}}],["parameters",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1548,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":698,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":3291,"title":{},"body":{"license.html":{}}}],["part",{"_index":3231,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1343,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":3398,"title":{},"body":{"license.html":{}}}],["party",{"_index":3419,"title":{},"body":{"license.html":{}}}],["passed",{"_index":2972,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":3384,"title":{},"body":{"license.html":{}}}],["path",{"_index":3557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":3491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":3559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":310,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1500,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1460,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["perform",{"_index":3260,"title":{},"body":{"license.html":{}}}],["performance",{"_index":1661,"title":{},"body":{"injectables/LibraryService.html":{}}}],["performance.now",{"_index":1307,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":3267,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3197,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":3406,"title":{},"body":{"license.html":{}}}],["permission",{"_index":964,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":3414,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3311,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":3125,"title":{},"body":{"index.html":{}}}],["person",{"_index":3239,"title":{},"body":{"license.html":{}}}],["person's",{"_index":3272,"title":{},"body":{"license.html":{}}}],["persons",{"_index":3410,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":3271,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1447,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pictures",{"_index":1850,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pipe",{"_index":113,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":2441,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":655,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":662,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1803,"title":{},"body":{"injectables/MetadataService.html":{}}}],["play",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["play/pause",{"_index":2341,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playback",{"_index":560,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["player",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player'},{'name",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.component.html",{"_index":2064,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":2065,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":102,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":93,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1726,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":3562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/file",{"_index":2587,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/library",{"_index":3564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1986,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/ShellComponent.html":{}}}],["player/player",{"_index":2588,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.service",{"_index":2586,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.types",{"_index":755,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":389,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":101,"title":{"injectables/PlayerService.html":{}},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":891,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["playerservice.currentlyloadedtrack();@let",{"_index":906,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["playerservice.currenttime",{"_index":2398,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playerservice.repeat",{"_index":2400,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playertoolbarcomponent",{"_index":391,"title":{"components/PlayerToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playing",{"_index":1727,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["playlist",{"_index":1639,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"todo.html":{}}}],["playlist'},{'name",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":2405,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":2406,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.filter((t",{"_index":2239,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.find((playlisttrack",{"_index":2255,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.findindex((track",{"_index":2469,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":2253,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":2250,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":2073,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":394,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.hash",{"_index":2228,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlisttrack.metadata?.hash",{"_index":2256,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":2084,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":2411,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":2420,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":2085,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":2106,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":3108,"title":{},"body":{"index.html":{}}}],["playtrack",{"_index":1607,"title":{},"body":{"components/LibraryComponent.html":{}}}],["playtrack(track",{"_index":250,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["playtrackbyhash",{"_index":2086,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playtrackbyhash(hash",{"_index":2108,"title":{},"body":{"injectables/PlayerService.html":{}}}],["please",{"_index":692,"title":{},"body":{"interfaces/Chainable.html":{}}}],["pluginnewanalysernode",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{}}}],["pointer",{"_index":1183,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["points",{"_index":1034,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["pool",{"_index":2959,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":2135,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":466,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":3215,"title":{},"body":{"license.html":{}}}],["prefertagembeddedpicture",{"_index":1753,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefix",{"_index":3506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["present",{"_index":3403,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":3359,"title":{},"body":{"license.html":{}}}],["pressedbuttonscaches",{"_index":1237,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prevents",{"_index":2652,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":2087,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":715,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":826,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":791,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":795,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":2022,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":2001,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":3270,"title":{},"body":{"license.html":{}}}],["private",{"_index":223,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["process",{"_index":2970,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["processing",{"_index":230,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["processingfile",{"_index":1754,"title":{},"body":{"injectables/MetadataService.html":{}}}],["processinginterval",{"_index":224,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["processionpercent",{"_index":1755,"title":{},"body":{"injectables/MetadataService.html":{}}}],["production",{"_index":3228,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":934,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1474,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{}}}],["promise.all(promises",{"_index":1160,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promise.all(result.map((track",{"_index":1663,"title":{},"body":{"injectables/LibraryService.html":{}}}],["promise.reject(new",{"_index":1471,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1151,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{}}}],["promises.push(promise",{"_index":1157,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promote",{"_index":3223,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":3335,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":396,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2532,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"properties.html":{}}}],["protected",{"_index":3253,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":3276,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3295,"title":{},"body":{"license.html":{}}}],["provide",{"_index":3155,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":3496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":3167,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":519,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":3508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":3497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":3503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":3161,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":3498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonelesschangedetection",{"_index":3495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":3203,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":3269,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3245,"title":{},"body":{"license.html":{}}}],["pure",{"_index":657,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":3174,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3218,"title":{},"body":{"license.html":{}}}],["pwa",{"_index":3104,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quarter",{"_index":1897,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterchunk",{"_index":1901,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterpos",{"_index":1900,"title":{},"body":{"injectables/MetadataService.html":{}}}],["query",{"_index":1540,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["queryparams",{"_index":1550,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["querystring",{"_index":3092,"title":{},"body":{"miscellaneous/functions.html":{}}}],["queue",{"_index":2189,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":3349,"title":{},"body":{"license.html":{}}}],["r",{"_index":1943,"title":{},"body":{"injectables/MetadataService.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["random",{"_index":2285,"title":{},"body":{"injectables/PlayerService.html":{}}}],["randomposition",{"_index":2248,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":2472,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["rate",{"_index":905,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["re",{"_index":1671,"title":{},"body":{"injectables/LibraryService.html":{}}}],["react",{"_index":992,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["read",{"_index":693,"title":{},"body":{"interfaces/Chainable.html":{}}}],["reader",{"_index":3143,"title":{},"body":{"index.html":{}}}],["reading",{"_index":1845,"title":{},"body":{"injectables/MetadataService.html":{}}}],["readonly",{"_index":142,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":1816,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/UpdateService.html":{}}}],["realkeys",{"_index":1381,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":3354,"title":{},"body":{"license.html":{}}}],["record",{"_index":1549,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2928,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["redirectto",{"_index":3558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":3213,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":3166,"title":{},"body":{"license.html":{}}}],["regards",{"_index":3280,"title":{},"body":{"license.html":{}}}],["register",{"_index":1433,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":1354,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":1215,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":1224,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":1216,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":1228,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1395,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":3502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":3501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":1359,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["regular",{"_index":1163,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["reject",{"_index":1461,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1488,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1480,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":3182,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":3160,"title":{},"body":{"license.html":{}}}],["release",{"_index":2029,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["release:${escapelucenequerystring(album",{"_index":2020,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":2016,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":3005,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":3204,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":3198,"title":{},"body":{"license.html":{}}}],["remainder",{"_index":3376,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":3378,"title":{},"body":{"license.html":{}}}],["remote",{"_index":1841,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverarturls",{"_index":82,"title":{"interfaces/RemoteCoverArtUrls.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":951,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["removed",{"_index":2231,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist",{"_index":2088,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist(track",{"_index":2111,"title":{},"body":{"injectables/PlayerService.html":{}}}],["renderer",{"_index":1114,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":1111,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renew",{"_index":1834,"title":{},"body":{"injectables/MetadataService.html":{}}}],["repeat",{"_index":2081,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":741,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["replace",{"_index":2241,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repository",{"_index":3429,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":3391,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":3258,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":3229,"title":{},"body":{"license.html":{}}}],["request",{"_index":963,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["request.reject(new",{"_index":1494,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1496,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe(draw",{"_index":2983,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1501,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestwakelock",{"_index":3012,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":3415,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":3344,"title":{},"body":{"license.html":{}}}],["reset",{"_index":2507,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["resetfrequencybandgain",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{}}}],["resetfrequencybandgain(bandfrequency",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{}}}],["resizeobserver",{"_index":2899,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2936,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1485,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(result",{"_index":1958,"title":{},"body":{"injectables/MetadataService.html":{}}}],["resolve(tags",{"_index":1487,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1601,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["resolve(undefined",{"_index":1937,"title":{},"body":{"injectables/MetadataService.html":{}}}],["resolved",{"_index":1158,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["respect",{"_index":3380,"title":{},"body":{"license.html":{}}}],["response",{"_index":1022,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["responsibility",{"_index":3408,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":3126,"title":{},"body":{"index.html":{}}}],["result",{"_index":1655,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/MetadataService.html":{}}}],["result.matches",{"_index":2600,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":3172,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":1386,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["retained",{"_index":3265,"title":{},"body":{"license.html":{}}}],["return",{"_index":149,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":3212,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":3343,"title":{},"body":{"license.html":{}}}],["rgb",{"_index":1939,"title":{},"body":{"injectables/MetadataService.html":{}}}],["rgb(255",{"_index":1200,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgb[0",{"_index":1944,"title":{},"body":{"injectables/MetadataService.html":{}}}],["rgb[1",{"_index":1946,"title":{},"body":{"injectables/MetadataService.html":{}}}],["rgb[2",{"_index":1947,"title":{},"body":{"injectables/MetadataService.html":{}}}],["rgba(0,0,0,0",{"_index":882,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["right",{"_index":1059,"title":{},"body":{"components/EqualizerComponent.html":{},"components/SlidePanelComponent.html":{},"license.html":{}}}],["rights",{"_index":3183,"title":{},"body":{"license.html":{}}}],["root",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["root'},{'name",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["root.setproperty",{"_index":823,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["rotation",{"_index":2962,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":2560,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":2580,"title":{},"body":{"components/ShellComponent.html":{}}}],["routeroutlet",{"_index":2547,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":3486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":3364,"title":{},"body":{"license.html":{}}}],["run",{"_index":3572,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":3569,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":517,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1687,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":112,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":111,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["sample",{"_index":904,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":327,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["samples",{"_index":1899,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sandbox",{"_index":3142,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["saving",{"_index":3436,"title":{},"body":{"todo.html":{}}}],["scheme",{"_index":789,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["scientific",{"_index":3202,"title":{},"body":{"license.html":{}}}],["screen",{"_index":3119,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":2435,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollbehavior",{"_index":2489,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":2447,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":2484,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollposition",{"_index":2443,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":2436,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":2464,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":2467,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":2408,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["search",{"_index":2028,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["searchterm",{"_index":143,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["searchterm.tolowercase",{"_index":148,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["seconds",{"_index":2115,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft",{"_index":2089,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekleft(seconds",{"_index":2113,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":2317,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekright",{"_index":2090,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekright(seconds",{"_index":2116,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":2319,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekto",{"_index":1744,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["seektohandler(details",{"_index":2262,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1608,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":245,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1609,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":241,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selected",{"_index":2234,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectedalbum",{"_index":157,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":155,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":158,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selectnext",{"_index":2091,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":2092,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":2093,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":2120,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1610,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":247,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["send",{"_index":2978,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":1278,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separator",{"_index":3504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service/file",{"_index":1062,"title":{},"body":{"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":725,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1513,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1579,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":3088,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":117,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["service/metadata.service.ts",{"_index":1752,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:152",{"_index":1769,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:25",{"_index":1791,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1789,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1787,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:28",{"_index":1775,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:32",{"_index":1780,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:36",{"_index":1777,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:40",{"_index":1778,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:42",{"_index":1785,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:49",{"_index":1765,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:65",{"_index":1771,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:80",{"_index":1773,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":115,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":855,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":3093,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":2002,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:18",{"_index":2003,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":910,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":3156,"title":{},"body":{"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":2333,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":2332,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":2334,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["services/loader/loader.service",{"_index":2583,"title":{},"body":{"components/ShellComponent.html":{}}}],["services/media",{"_index":2148,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":2069,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":2147,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1740,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service",{"_index":2149,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":3075,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1708,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1718,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1723,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1725,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1721,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1713,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1707,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":536,"title":{},"body":{"injectables/AudioService.html":{},"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["set(filtered.tosorted((a",{"_index":167,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["set.svg",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor",{"_index":2676,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setaccentcolor(color",{"_index":819,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1709,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1714,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2766,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2776,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2767,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2778,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":468,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1710,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1719,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2768,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2780,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2769,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2782,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2677,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":814,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2678,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":812,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2770,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2784,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":470,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":472,"title":{},"body":{"injectables/AudioService.html":{}}}],["setgap",{"_index":2771,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2786,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2772,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2788,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":475,"title":{},"body":{"injectables/AudioService.html":{}}}],["setmindb",{"_index":2773,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2790,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setplaybackstate(state",{"_index":1749,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor",{"_index":2679,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setprimarycolor(color",{"_index":817,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":2094,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":2122,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1711,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1722,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2774,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2792,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1478,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["settings",{"_index":576,"title":{},"body":{"injectables/AudioService.html":{},"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2542,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1967,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":2540,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1964,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2695,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":2673,"title":{},"body":{"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":1983,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":1982,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":1980,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1978,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:34",{"_index":1976,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":1973,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1963,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2541,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2543,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":398,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2703,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2704,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2934,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupvisualsworkerwithoptions",{"_index":3080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":3087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":478,"title":{},"body":{"injectables/AudioService.html":{}}}],["shall",{"_index":3342,"title":{},"body":{"license.html":{}}}],["share",{"_index":3441,"title":{},"body":{"todo.html":{}}}],["sharereplay",{"_index":2582,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell",{"_index":2545,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell'},{'name",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2549,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2550,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":341,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":1349,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":2340,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["show",{"_index":1696,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showdelay",{"_index":3517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":936,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["showfilepickerandloadfiles",{"_index":2304,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["showpicker",{"_index":933,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["shows",{"_index":683,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2763,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":2082,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2622,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["sidenav",{"_index":2553,"title":{},"body":{"components/ShellComponent.html":{}}}],["signal",{"_index":89,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["signal(0",{"_index":483,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{}}}],["signal(44_100",{"_index":505,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(false",{"_index":498,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('accentcolor",{"_index":794,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2794,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2798,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('basegain",{"_index":481,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2805,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2807,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":786,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2813,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2815,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2817,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2820,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1774,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('primarycolor",{"_index":792,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":2140,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":2143,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2828,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1786,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1788,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1790,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2996,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.localstorageservice.retrieve('volume",{"_index":507,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(true",{"_index":501,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(undefined",{"_index":156,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["signals",{"_index":537,"title":{},"body":{"injectables/AudioService.html":{},"directives/VisualsDirective.html":{}}}],["similar",{"_index":3303,"title":{},"body":{"license.html":{}}}],["sind",{"_index":1430,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1522,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["sizes",{"_index":2220,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":1187,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2558,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2647,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":3488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":401,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":400,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["small",{"_index":1885,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["small')?.['#text",{"_index":1565,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smallimage",{"_index":1562,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smooth",{"_index":2466,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2764,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":289,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["soll",{"_index":2744,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs/pseudo",{"_index":2284,"title":{},"body":{"injectables/PlayerService.html":{}}}],["song",{"_index":2102,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song.file.name",{"_index":2524,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":2520,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":2521,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.hash",{"_index":2499,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.hash",{"_index":2229,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":2525,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":2523,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":2522,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["soon",{"_index":1814,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sort",{"_index":191,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["sorting",{"_index":3435,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["specified",{"_index":2238,"title":{},"body":{"injectables/PlayerService.html":{}}}],["spinner",{"_index":128,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["src",{"_index":2218,"title":{},"body":{"injectables/PlayerService.html":{}}}],["start",{"_index":1029,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":3102,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["startvisualization(getdatamethod",{"_index":2954,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":231,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":3353,"title":{},"body":{"license.html":{}}}],["statustext",{"_index":1756,"title":{},"body":{"injectables/MetadataService.html":{}}}],["statutory",{"_index":3395,"title":{},"body":{"license.html":{}}}],["stop",{"_index":317,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2875,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storagesettingscomponent",{"_index":403,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":176,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":3528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":3531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(this.equalizergainvalues",{"_index":649,"title":{},"body":{"injectables/AudioService.html":{}}}],["styles",{"_index":1082,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":134,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["styleurls",{"_index":1091,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["sub",{"_index":1375,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":959,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":516,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"license.html":{}}}],["sublicensable",{"_index":3367,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2442,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":1334,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":3187,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1423,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1426,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":3301,"title":{},"body":{"license.html":{}}}],["successors",{"_index":3340,"title":{},"body":{"license.html":{}}}],["such",{"_index":3287,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":747,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["sum",{"_index":1922,"title":{},"body":{"injectables/MetadataService.html":{}}}],["supported",{"_index":1741,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":3111,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":3388,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":3320,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":634,"title":{},"body":{"injectables/AudioService.html":{}}}],["switch",{"_index":2266,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["swupdate",{"_index":2718,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.activateupdate().then",{"_index":2735,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2723,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntildestroyed(this.destroref)).subscribe((event",{"_index":2724,"title":{},"body":{"injectables/UpdateService.html":{}}}],["system",{"_index":1171,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"todo.html":{}}}],["t",{"_index":2240,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tag",{"_index":180,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"index.html":{}}}],["tag.album",{"_index":182,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.album?.tolowercase().includes(lowersearchterm",{"_index":154,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist",{"_index":163,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist?.tolowercase().includes(lowersearchterm",{"_index":152,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.coverurl",{"_index":186,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.filename?.tolowercase().includes(lowersearchterm",{"_index":153,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.title?.tolowercase().includes(lowersearchterm",{"_index":151,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.year",{"_index":185,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tags",{"_index":870,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"index.html":{},"todo.html":{}}}],["tags.album",{"_index":1536,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":1535,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1865,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1856,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1858,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1792,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1450,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1455,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1452,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1862,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1863,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":726,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1446,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1864,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagsworkerrequest",{"_index":867,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":869,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":2150,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":3360,"title":{},"body":{"license.html":{}}}],["target",{"_index":3442,"title":{},"body":{"todo.html":{}}}],["targetindex",{"_index":2468,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1420,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":708,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templateurl",{"_index":132,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["termination",{"_index":3346,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3248,"title":{},"body":{"license.html":{}}}],["territories",{"_index":3328,"title":{},"body":{"license.html":{}}}],["test",{"_index":555,"title":{},"body":{"injectables/AudioService.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":3571,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1521,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":856,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["theme",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["theme.types",{"_index":751,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themecolor",{"_index":750,"title":{"interfaces/ThemeColor.html":{}},"body":{"interfaces/ColorVariant.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["themeservice",{"_index":350,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice.initializetheme",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["themesettingscomponent",{"_index":405,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":3299,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":307,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["this._audiocontext",{"_index":586,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.createanalyser",{"_index":615,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.resume",{"_index":635,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.state",{"_index":633,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement",{"_index":584,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":596,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":603,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":613,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":589,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":593,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":594,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":610,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":605,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":601,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.currenttime",{"_index":645,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.fastseek(position",{"_index":644,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.loop",{"_index":642,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.pause",{"_index":638,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.play",{"_index":636,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.src",{"_index":630,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiosourcenode",{"_index":585,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers",{"_index":627,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":617,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.clear",{"_index":628,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":620,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":618,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode",{"_index":587,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.connect(analyser",{"_index":616,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.disconnect(analyser",{"_index":619,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[band",{"_index":578,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":647,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._gainnode",{"_index":588,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.asobservable",{"_index":539,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.next(true",{"_index":614,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._internalanalyzer",{"_index":2940,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":1370,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":810,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolor.set(color",{"_index":820,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolor.set(colors.peakcolor",{"_index":816,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolorpalette().foreach((color",{"_index":831,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":1320,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...filedatas",{"_index":2226,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(...validfiles",{"_index":2196,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addtrackstoplaylist(...this.filteredbyserchterm",{"_index":259,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(...tracks",{"_index":258,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(track",{"_index":270,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtracktoplaylist(track",{"_index":252,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":2224,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.allowedtypes().includes(file.type",{"_index":1179,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.alpha",{"_index":2810,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2854,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2923,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2838,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2844,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2842,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2840,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2949,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2948,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2977,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2709,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2982,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1556,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.askuserforupdate().then((update",{"_index":2734,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.basegain",{"_index":996,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.currenttime",{"_index":1735,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2990,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2849,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1733,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.equalizergainvalues",{"_index":995,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":2203,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":2245,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1730,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1728,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":2134,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":2222,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2796,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2950,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":2210,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":2273,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":2271,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(value",{"_index":2389,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":1242,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":1293,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":1291,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":1282,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.bands",{"_index":1037,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.barcount",{"_index":2800,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2858,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2917,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2941,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2944,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2943,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2942,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":582,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.breakpointobserver",{"_index":2593,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1543,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":1240,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":1289,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":1283,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":1297,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":1306,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":1279,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.caapi.getreleasegroupcovers(releasegroupid",{"_index":2035,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.canvas",{"_index":2902,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2929,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2908,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvasref",{"_index":1000,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.canvasref()!.nativeelement",{"_index":1001,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.capfalldown",{"_index":2803,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2862,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2801,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2860,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":1262,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":1261,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":1321,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":1257,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2670,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.color_variants.map((variant",{"_index":838,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.colorconfig",{"_index":2921,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":798,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":796,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":1245,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":2032,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":1294,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":1290,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":569,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1868,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1844,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(filedata",{"_index":1812,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.currentfolderhandle",{"_index":943,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(entry.handle",{"_index":932,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(handle",{"_index":937,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":2133,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":2127,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":2223,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":2246,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":2259,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().length",{"_index":2199,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":2227,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist()[this.currentplaylist().length",{"_index":2201,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":2230,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":602,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.darkmode",{"_index":806,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":813,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1412,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":2358,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.default_deadspace",{"_index":1313,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":1227,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":1361,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1391,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1398,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1414,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2535,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2534,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1389,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":1247,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":1344,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":1131,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":1122,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":1128,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":1126,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drawequalizerresponse",{"_index":997,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.drop.bind(this",{"_index":1134,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":1133,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":604,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[band",{"_index":580,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":646,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":652,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":1373,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1538,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1537,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":2018,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2839,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2856,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.filehandlesdropped.emit(filehandles",{"_index":1162,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.fileinput",{"_index":1586,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1592,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1600,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1599,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1598,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1589,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1594,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1591,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1588,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.openfiles",{"_index":2225,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.files",{"_index":1602,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.files.map((file",{"_index":1596,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filesdroped.emit(files",{"_index":1181,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.filestoprocess",{"_index":1776,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.set(filedatas.length",{"_index":1809,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.update((files",{"_index":1817,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filteredbyserchterm",{"_index":161,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.filteredbyserchterm().filter((track",{"_index":256,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":2017,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":1319,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":1299,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":2343,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":2385,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":2387,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":2386,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":2373,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":2374,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":2381,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":2380,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":2383,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":2377,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":2382,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":2378,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":2379,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":2384,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":2375,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":2376,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":2355,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":2344,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":2345,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":2364,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":2362,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":2369,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":2351,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":2367,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":2353,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":2360,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":2371,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":2347,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":2349,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2848,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2846,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2802,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2866,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getmetadata(filedata",{"_index":1820,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.getthemecolor(color",{"_index":843,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":2329,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer.files",{"_index":1175,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1470,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlefilefallback(event",{"_index":1165,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handlemessage",{"_index":1468,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.helpopen",{"_index":1388,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1396,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":1374,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":1356,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":1384,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":1377,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":2337,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":2338,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.register",{"_index":2339,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.id3tagsservice.extracttags(filedata.file",{"_index":1846,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":2359,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.indexeddbservice.add('library",{"_index":1866,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('library').topromise",{"_index":1997,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.update('directoryhandles",{"_index":938,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.indexeddbtracks.set",{"_index":1669,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.indexeddbtracks.set(trackswithbloburls",{"_index":1665,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.isautoscrollenabled",{"_index":2448,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":2449,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":1314,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":592,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":595,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":643,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(false",{"_index":609,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(true",{"_index":612,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying",{"_index":637,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(false",{"_index":611,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(true",{"_index":608,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(false",{"_index":607,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(true",{"_index":641,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.lastfm_api_key",{"_index":1554,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1851,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":1145,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":1130,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.libraryservice.indexeddbtracks().filter((tag",{"_index":150,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.libraryservice.loadlibraryfromdb",{"_index":236,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.linethickness",{"_index":2823,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2864,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1693,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loaderservice.show",{"_index":1691,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loadingcounter",{"_index":1701,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2674,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.retrieve('equalizergainvalues",{"_index":486,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('accentcolor",{"_index":809,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2855,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2859,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2863,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2861,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":805,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('equalizergainvalues",{"_index":651,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2857,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2867,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2865,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2853,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('prefertagembeddedpicture",{"_index":1996,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('primarycolor",{"_index":807,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2851,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('usetagembeddedpicture",{"_index":1994,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usetagscache",{"_index":1992,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usewebmetainfos",{"_index":1989,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":3001,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mbapi.search('release",{"_index":2023,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.mediasessionservice",{"_index":2157,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":2163,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":2160,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":2158,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":2165,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":2167,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":2169,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":2161,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":2212,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":2171,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.menutrigger",{"_index":2501,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.meta.updatetag",{"_index":833,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.metadataservice.addfilestolibrary(...filedatas",{"_index":2243,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.createobjecturlforembeddedpicture(track",{"_index":1664,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1995,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.processing",{"_index":233,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1993,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1991,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1988,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2843,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2852,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2915,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1852,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":2164,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1473,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2669,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2668,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2919,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2952,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":1125,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":639,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.pendingrequests.clear",{"_index":1511,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1479,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1503,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1493,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1484,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1508,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1832,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice.addfilestoplaylist(...filedata",{"_index":2604,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addfilestoplaylist(...files.map((file",{"_index":2603,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addtracktoplaylist(track",{"_index":277,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2809,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":2459,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.darkmuted?.hex",{"_index":880,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.lightmuted?.hex",{"_index":881,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.coverurl?.originalurl",{"_index":884,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.hash",{"_index":2497,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":2452,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":2399,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.next",{"_index":2368,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpause",{"_index":2342,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":2498,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.playtrackbyhash(track.hash",{"_index":253,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.previous",{"_index":2370,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectnext",{"_index":2365,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":2363,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":2388,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.stop",{"_index":2346,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playpause",{"_index":2159,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(newtrack",{"_index":2202,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":2251,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":2258,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":2254,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":2257,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1833,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":1301,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":2166,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":808,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolor.set(color",{"_index":818,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolor.set(colors.maincolor",{"_index":815,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolorpalette().foreach((color",{"_index":827,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.processing",{"_index":1782,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile",{"_index":1783,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile.set(filedata.file.name",{"_index":1811,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processinginterval",{"_index":234,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.register",{"_index":1348,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":1123,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":1141,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":2267,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":2269,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":2274,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":2272,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":3011,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2910,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2985,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate(['/player",{"_index":254,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.router.navigate([route",{"_index":2602,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":606,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.scrolltobottom",{"_index":2457,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":2463,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":2439,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":146,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.seekleft(10",{"_index":2168,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":2352,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seekright(10",{"_index":2170,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":2354,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seektohandler(details",{"_index":2172,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":640,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.selectedalbum",{"_index":190,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(album",{"_index":246,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(undefined",{"_index":243,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":171,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist.set(artist",{"_index":242,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":2236,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":2260,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(track",{"_index":248,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack.set(undefined",{"_index":244,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.selectsong(track",{"_index":2209,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setfrequencybandgain(bandfrequency",{"_index":653,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.setplaybackstate('none",{"_index":1732,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1731,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1729,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setseekposition(details.seektime",{"_index":2265,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":2261,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2911,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.showfilepickerandloadfiles",{"_index":2372,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.shuffle",{"_index":2247,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":2275,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":2601,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2841,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2850,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2951,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2953,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":2162,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2924,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.swupdate",{"_index":2722,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2742,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2741,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.accentcolor",{"_index":1053,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.darkmode",{"_index":879,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.primarycolor",{"_index":1025,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":2204,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2697,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2710,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":2076,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":1353,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":2361,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.togglerepeat",{"_index":2350,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.toggleshuffle",{"_index":2348,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.totalfilestoprocess",{"_index":1779,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(0",{"_index":1818,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(filedatas.length",{"_index":1808,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.uniquealbums",{"_index":264,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.updatecssproperties",{"_index":803,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1736,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.updatemetathemecolor",{"_index":804,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.usetagembeddedpicture",{"_index":1830,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1826,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1848,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2930,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2933,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2931,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2932,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2904,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2909,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2991,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2999,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":3000,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2847,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2826,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":550,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.wakelock",{"_index":3010,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":3015,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":3018,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":2206,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":2208,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1462,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1469,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1467,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2906,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1489,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1506,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1505,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1507,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":3199,"title":{},"body":{"license.html":{}}}],["three",{"_index":1898,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterchunk",{"_index":1906,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterpos",{"_index":1904,"title":{},"body":{"injectables/MetadataService.html":{}}}],["through",{"_index":1045,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{}}}],["throughout",{"_index":3177,"title":{},"body":{"license.html":{}}}],["throw",{"_index":1670,"title":{},"body":{"injectables/LibraryService.html":{}}}],["thumb",{"_index":2045,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumbnail",{"_index":2051,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumbnails",{"_index":2044,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumburl",{"_index":865,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["time",{"_index":899,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["time.pipe",{"_index":889,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["timed",{"_index":1482,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1477,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1454,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":874,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2968,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["title",{"_index":193,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":3539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":2068,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2605,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":553,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["todos",{"_index":3433,"title":{},"body":{"todo.html":{}}}],["toggle",{"_index":1985,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["togglehelpdialog",{"_index":1387,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2623,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":2305,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["togglerepeat",{"_index":2095,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["toggleshuffle",{"_index":2096,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["togglevisualmode",{"_index":2994,"title":{},"body":{"injectables/VisualsService.html":{}}}],["toolbar",{"_index":2290,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["toolbar.component",{"_index":2589,"title":{},"body":{"components/ShellComponent.html":{}}}],["toolbar.component.html",{"_index":2295,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2296,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":2289,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:106",{"_index":2314,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:110",{"_index":2316,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:121",{"_index":2309,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:125",{"_index":2323,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:129",{"_index":2324,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:133",{"_index":2321,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:138",{"_index":2312,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:142",{"_index":2318,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:146",{"_index":2320,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:150",{"_index":2311,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:154",{"_index":2307,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:158",{"_index":2322,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:29",{"_index":2326,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:30",{"_index":2328,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":2325,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:32",{"_index":2327,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:34",{"_index":2330,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar/player",{"_index":2288,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["top",{"_index":2624,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["tosignal",{"_index":2584,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2566,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1422,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["totalfilestoprocess",{"_index":1781,"title":{},"body":{"injectables/MetadataService.html":{}}}],["totallength",{"_index":1920,"title":{},"body":{"injectables/MetadataService.html":{}}}],["touppercase",{"_index":1425,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":92,"title":{"interfaces/Track.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{}}}],["track.album",{"_index":261,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.artist",{"_index":257,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.coverurl",{"_index":1644,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.filename",{"_index":1647,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.hash",{"_index":283,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.metadata",{"_index":2211,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":2215,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":2214,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.originalurl",{"_index":2219,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.originalurl",{"_index":2217,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":2213,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.hash",{"_index":2470,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["track.title",{"_index":1646,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.track",{"_index":1645,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum",{"_index":1611,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum(index",{"_index":281,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyartist",{"_index":1612,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyartist(index",{"_index":280,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyhash",{"_index":1613,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackbyhash(index",{"_index":282,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackmetadata",{"_index":731,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":189,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tracks().length",{"_index":1643,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tracks.push(...albumtracks",{"_index":268,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackswithbloburls",{"_index":1662,"title":{},"body":{"injectables/LibraryService.html":{}}}],["trademark",{"_index":3383,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":3366,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2979,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":659,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":660,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["translate",{"_index":3262,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2871,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["treaty",{"_index":3307,"title":{},"body":{"license.html":{}}}],["tree",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trigger",{"_index":2500,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menu",{"_index":2505,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menudata",{"_index":2502,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.openmenu",{"_index":2504,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["true",{"_index":658,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":935,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["ts",{"_index":2176,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tslib",{"_index":3037,"title":{},"body":{"dependencies.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":1225,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3446,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":739,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["types",{"_index":2178,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ui",{"_index":2461,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":320,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["uint8array(endchunk",{"_index":1917,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(middlechunk",{"_index":1894,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(quarterchunk",{"_index":1903,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(threequarterchunk",{"_index":1908,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(totallength",{"_index":1925,"title":{},"body":{"injectables/MetadataService.html":{}}}],["unconditional",{"_index":3369,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":3317,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":207,"title":{},"body":{"interfaces/Album.html":{},"pipes/BitratePipe.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":3247,"title":{},"body":{"license.html":{}}}],["understands",{"_index":3417,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":3278,"title":{},"body":{"license.html":{}}}],["unique",{"_index":177,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["uniquealbums",{"_index":170,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniquealbums().length",{"_index":1640,"title":{},"body":{"components/LibraryComponent.html":{}}}],["uniqueartists",{"_index":159,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniqueartists().length",{"_index":1638,"title":{},"body":{"components/LibraryComponent.html":{}}}],["unit",{"_index":3570,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":3151,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{},"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1434,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":1380,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["update",{"_index":600,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["update.service",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["updatecssproperties",{"_index":821,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updated",{"_index":2462,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["updateinterval",{"_index":2973,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1712,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1724,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemetathemecolor",{"_index":832,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updates",{"_index":800,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updateservice",{"_index":352,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["updateservice.init",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["upload",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":3185,"title":{},"body":{"license.html":{}}}],["url",{"_index":721,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1464,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2905,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":631,"title":{},"body":{"injectables/AudioService.html":{}}}],["url.createobjecturl(new",{"_index":1838,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.originalurl",{"_index":1872,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.thumburl",{"_index":1874,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1860,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":632,"title":{},"body":{"injectables/AudioService.html":{}}}],["urls",{"_index":1837,"title":{},"body":{"injectables/MetadataService.html":{}}}],["urlsearchparams",{"_index":1551,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["use",{"_index":204,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"license.html":{}}}],["useclass",{"_index":3522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2653,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":3513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useleadingzero",{"_index":3097,"title":{},"body":{"miscellaneous/functions.html":{}}}],["user",{"_index":965,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["usermediainput",{"_index":3439,"title":{},"body":{"todo.html":{}}}],["uses",{"_index":3112,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1757,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1758,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":3516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1759,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":1941,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["v",{"_index":3284,"title":{},"body":{"license.html":{}}}],["validfiles",{"_index":2191,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.length",{"_index":2195,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.push",{"_index":2194,"title":{},"body":{"injectables/PlayerService.html":{}}}],["value",{"_index":465,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":999,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":666,"title":{},"body":{"pipes/BandPipe.html":{}}}],["values",{"_index":994,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["var",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":3454,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":2392,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["variant.darkenfactor",{"_index":841,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variant.lightenfactor",{"_index":839,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variant.suffix",{"_index":844,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["various",{"_index":684,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verarbeitung",{"_index":1658,"title":{},"body":{"injectables/LibraryService.html":{}}}],["verfügbar",{"_index":2743,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":3081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle).then((granted",{"_index":930,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":962,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2728,"title":{},"body":{"injectables/UpdateService.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2726,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2737,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2730,"title":{},"body":{"injectables/UpdateService.html":{}}}],["very",{"_index":1884,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["vi",{"_index":3286,"title":{},"body":{"license.html":{}}}],["via",{"_index":3438,"title":{},"body":{"todo.html":{},"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":859,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"index.html":{}}}],["viewchild",{"_index":989,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":2572,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('menutrigger",{"_index":2424,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild('scrollviewport",{"_index":2427,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild>('eqcanvas",{"_index":985,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["viewport",{"_index":2438,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":2474,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":2491,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":2444,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":2465,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":2496,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":2490,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":3302,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":1142,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visible",{"_index":1143,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":2473,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":2476,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":3123,"title":{},"body":{"index.html":{}}}],["visualizefrequencybars",{"_index":2876,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2881,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2877,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2883,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizer.component.html",{"_index":2756,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2757,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":888,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":2429,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":407,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":322,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":318,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizerworker",{"_index":2898,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2993,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals",{"_index":3437,"title":{},"body":{"todo.html":{}}}],["visuals.types",{"_index":2892,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2837,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2834,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2833,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":308,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":410,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":2765,"title":{"injectables/VisualsService.html":{}},"body":{"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":2868,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":312,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":2391,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["volume",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{},"components/PlayerToolbarComponent.html":{}}}],["volumeicon",{"_index":2297,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["voluntarily",{"_index":3243,"title":{},"body":{"license.html":{}}}],["wait",{"_index":2453,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":3386,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3309,"title":{},"body":{"license.html":{}}}],["waives",{"_index":3318,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":3003,"title":{},"body":{"injectables/WakelockService.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":3009,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":2146,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":3082,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2197,"title":{},"body":{"injectables/PlayerService.html":{}}}],["warranties",{"_index":3165,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":1799,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["wav",{"_index":1079,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["we're",{"_index":1167,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/PlayerService.html":{}}}],["web",{"_index":3103,"title":{},"body":{"index.html":{},"properties.html":{}}}],["webstorage",{"_index":514,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["well",{"_index":3326,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1877,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2747,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":3217,"title":{},"body":{"license.html":{}}}],["whether",{"_index":3324,"title":{},"body":{"license.html":{}}}],["white",{"_index":1198,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["width",{"_index":1004,"title":{},"body":{"components/EqualizerComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window",{"_index":2184,"title":{},"body":{"injectables/PlayerService.html":{}}}],["window.focus",{"_index":2187,"title":{},"body":{"injectables/PlayerService.html":{}}}],["wish",{"_index":3196,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":3511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":3509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":3507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1704,"title":{},"body":{"injectables/LoaderService.html":{},"license.html":{}}}],["withviewtransitions",{"_index":3512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":3190,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1458,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1463,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":3499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":3130,"title":{},"body":{"index.html":{}}}],["works",{"_index":955,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":3178,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":3329,"title":{},"body":{"license.html":{}}}],["writablesignal",{"_index":1205,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["writes",{"_index":2651,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["writing",{"_index":3443,"title":{},"body":{"todo.html":{}}}],["wurde",{"_index":1286,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x",{"_index":1027,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y",{"_index":1028,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":81,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["yield",{"_index":1813,"title":{},"body":{"injectables/MetadataService.html":{}}}],["z",{"_index":1192,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zugewiesen",{"_index":1267,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Album.html":{"url":"interfaces/Album.html","title":"interface - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverArtUrls\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverArtUrls\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, computed, effect, inject, OnInit, signal } from '@angular/core';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverArtUrls } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { LibraryService } from './library.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverArtUrls;\n}\n\n@Component({\n  imports: [\n    MatListModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix,\n    MatProgressSpinner\n  ],\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss'\n})\nexport default class LibraryComponent implements OnInit {\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n  libraryService = inject(LibraryService);\n\n  readonly searchTerm = signal('');\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  private processingInterval: any;\n\n  constructor() {\n    // Automatically manage the interval based on processing state\n    effect(() => {\n      const isProcessing = this.metadataService.processing();\n\n      if (isProcessing && !this.processingInterval) {\n        this.processingInterval = globalThis.setInterval(() => {\n          void this.libraryService.loadLibraryFromDb();\n        }, 5000);\n      } else if (!isProcessing && this.processingInterval) {\n        clearInterval(this.processingInterval);\n        this.processingInterval = undefined;\n      }\n    });\n  }\n\n  ngOnInit() {\n    void this.libraryService.loadLibraryFromDb();\n  }\n\n  private onLibraryUpdate() {}\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  imports: [ShellComponent],\n  templateUrl: './app.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    const updateService = inject(UpdateService);\n    const iconRegistry = inject(MatIconRegistry);\n    const sanitizer = inject(DomSanitizer);\n    const themeService = inject(ThemeService);\n\n    void updateService.init();\n\n    themeService.initializeTheme();\n\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    iconRegistry.addSvgIcon('logo', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                resetFrequencyBandGain\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nresetFrequencyBandGain(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FREQUENCY_BANDS, FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport type EqualizerGainValues = {\n  [Band in FrequencyBand]: number;\n};\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private localStorageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.localStorageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.localStorageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._eqGainNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      this._eqGainNode.disconnect(analyser);\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    for (const analyser of this._connectedAnalyzers) {\n      this._eqGainNode.disconnect(analyser);\n    }\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = structuredClone(this.equalizerGainValues());\n    bandGains[bandFrequency] = gainValue;\n\n    this.localStorageService.store('equalizerGainValues', bandGains);\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  resetFrequencyBandGain(bandFrequency: FrequencyBand) {\n    this.setFrequencyBandGain(bandFrequency, 0);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand): string {\n    if (!value || value = 1000) {\n      const kValue = value / 1000;\n      return kValue % 1 === 0 ? `${Math.floor(kValue)}K` : `${kValue.toFixed(1)}K`;\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate',\n  pure: true\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | null | undefined): string {\n    if (value == null || value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton, getLoadFilesMenuEntry } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.wait(300);\n  getLoadFilesMenuEntry().click();\n\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorVariant.html":{"url":"interfaces/ColorVariant.html","title":"interface - ColorVariant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorVariant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkenFactor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightenFactor\n                                        \n                                \n                                \n                                        \n                                            suffix\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkenFactor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkenFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightenFactor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightenFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suffix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { computed, effect, inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { Colord, colord } from 'colord';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { ThemeColor } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\ninterface ColorVariant {\n  suffix: string;\n  lightenFactor?: number;\n  darkenFactor?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly COLOR_VARIANTS: ColorVariant[] = [\n    { suffix: '0', lightenFactor: 0.55 },\n    { suffix: '10', lightenFactor: 0.45 },\n    { suffix: '20', lightenFactor: 0.35 },\n    { suffix: '25', lightenFactor: 0.3 },\n    { suffix: '30', lightenFactor: 0.25 },\n    { suffix: '35', lightenFactor: 0.2 },\n    { suffix: '40', lightenFactor: 0.15 },\n    { suffix: '50' },\n    { suffix: '60', darkenFactor: 0.05 },\n    { suffix: '70', darkenFactor: 0.1 },\n    { suffix: '80', darkenFactor: 0.15 },\n    { suffix: '90', darkenFactor: 0.18 },\n    { suffix: '95', darkenFactor: 0.21 },\n    { suffix: '98', darkenFactor: 0.24 },\n    { suffix: '99', darkenFactor: 0.27 },\n    { suffix: '100', darkenFactor: 0.3 }\n  ];\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  readonly primaryColor = signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR);\n\n  readonly accentColor = signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR);\n\n  readonly primaryColorPalette = computed(() => this.computeColors(this.primaryColor()));\n  readonly accentColorPalette = computed(() => this.computeColors(this.accentColor()));\n\n  constructor() {\n    // Automatische Updates bei Änderungen\n    effect(() => {\n      this.updateCSSProperties();\n      this.updateMetaThemeColor();\n    });\n\n    effect(() => {\n      this.localStorageService.store('darkMode', this.darkMode());\n    });\n\n    effect(() => {\n      this.localStorageService.store('primaryColor', this.primaryColor());\n    });\n\n    effect(() => {\n      this.localStorageService.store('accentColor', this.accentColor());\n    });\n  }\n\n  initializeTheme() {\n    this.updateCSSProperties();\n    this.updateMetaThemeColor();\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n  }\n\n  setColors(colors: ColorConfig) {\n    this.primaryColor.set(colors.mainColor || FALLBACK_PRIMARY_COLOR);\n    this.accentColor.set(colors.peakColor || FALLBACK_ACCENT_COLOR);\n  }\n\n  setPrimaryColor(color: string) {\n    this.primaryColor.set(color || FALLBACK_PRIMARY_COLOR);\n  }\n\n  setAccentColor(color: string) {\n    this.accentColor.set(color || FALLBACK_ACCENT_COLOR);\n  }\n\n  private updateCSSProperties() {\n    const root = document.documentElement.style;\n\n    // App color scheme\n    root.setProperty('--app-color-scheme', this.darkMode() ? 'dark' : 'light');\n\n    // Primary colors\n    this.primaryColorPalette().forEach((color) => {\n      root.setProperty(`--theme-primary-${color.name}`, color.hex);\n    });\n\n    // Accent colors\n    this.accentColorPalette().forEach((color) => {\n      root.setProperty(`--theme-accent-${color.name}`, color.hex);\n    });\n  }\n\n  private updateMetaThemeColor() {\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor() });\n  }\n\n  private computeColors(hex: string): ThemeColor[] {\n    const baseColor = colord(hex);\n\n    return this.COLOR_VARIANTS.map((variant) => {\n      let color = baseColor;\n\n      if (variant.lightenFactor) {\n        color = baseColor.lighten(variant.lightenFactor);\n      } else if (variant.darkenFactor) {\n        color = baseColor.darken(variant.darkenFactor);\n      }\n\n      return this.getThemeColor(color, variant.suffix);\n    });\n  }\n\n  private getThemeColor(color: Colord, name: string): ThemeColor {\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name,\n      hex: color.toHex(),\n      darkContrast: color.brightness() > lightnessLimit\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            TimePipe\n                            BitratePipe\n                                VisualizerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Readonly\n                                coverUrl\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.originalUrl)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BitratePipe } from './bitrate.pipe';\nimport { VisualizerComponent } from '../visualizer/visualizer.component';\nimport { PlayerService } from '../player.service';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  imports: [TimePipe, BitratePipe, VisualizerComponent],\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CoverDisplayComponent {\n  private themeService = inject(ThemeService);\n  playerService = inject(PlayerService);\n\n  readonly coverUrl = computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.originalUrl);\n\n  readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = playerService.currentlyLoadedTrack();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = playerService.currentlyLoadedTrack();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirHandleEntry.html":{"url":"interfaces/DirHandleEntry.html","title":"interface - DirHandleEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirHandleEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:     FileSystemDirectoryHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemDirectoryHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-equalizer\n            \n\n\n            \n                imports\n                \n                            MatSliderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                BANDS\n                            \n                            \n                                    Readonly\n                                canvasRef\n                            \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                            \n                                drawEqualizerResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawEqualizerResponse\n                        \n                    \n                \n            \n            \n                \ndrawEqualizerResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild>('eqCanvas')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, effect, ElementRef, inject, viewChild } from '@angular/core';\nimport { AudioService } from '../audio.service';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FREQUENCY_BANDS } from '../player.types';\nimport { ThemeService } from '../../theme/theme.service';\n\n@Component({\n  selector: 'mtb-equalizer',\n  imports: [MatSliderModule],\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  audioService = inject(AudioService);\n  themeService = inject(ThemeService);\n  readonly canvasRef = viewChild>('eqCanvas');\n\n  BANDS = FREQUENCY_BANDS;\n\n  constructor() {\n    // React to changes in equalizer values\n    effect(() => {\n      this.audioService.equalizerGainValues(); // Track the signal\n      this.audioService.baseGain(); // Track gain changes\n      this.drawEqualizerResponse();\n    });\n  }\n\n  displayFunction(value: number): string {\n    const numberValue = value.toFixed(1);\n    return numberValue + ' dB';\n  }\n\n  drawEqualizerResponse(): void {\n    if (!this.canvasRef()) return;\n\n    const canvas = this.canvasRef()!.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw grid lines\n    ctx.strokeStyle = '#dddddd';\n    ctx.lineWidth = 0.2;\n\n    // Horizontal grid lines (every 3dB)\n    for (let db = -12; db  {\n      return ((Math.log10(freq) - Math.log10(minFreq)) / (Math.log10(maxFreq) - Math.log10(minFreq))) * width;\n    };\n\n    // Draw frequency response curve with gain applied\n    ctx.strokeStyle = this.themeService.primaryColor();\n    ctx.lineWidth = 3;\n\n    const freqPoints: { x: number; y: number }[] = [];\n\n    // Start with the lowest frequency\n    freqPoints.push({\n      x: 0,\n      y: height / 2 - ((eqValues[this.BANDS[0]] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw points for each frequency band with gain applied\n    for (const freq of this.BANDS) {\n      const x = getXPos(freq);\n      // Apply gain influence to the curve\n      const y = height / 2 - ((eqValues[freq] + (gainValue - 1) * 12) * height) / 24;\n      freqPoints.push({ x, y });\n    }\n\n    // End with the highest frequency\n    freqPoints.push({\n      x: width,\n      y: height / 2 - ((eqValues[this.BANDS.at(-1)!] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw curve through points\n    ctx.beginPath();\n    ctx.moveTo(freqPoints[0].x, freqPoints[0].y);\n\n    for (let i = 0; i  freq >= minFreq && freq = 1000 ? `${freq / 1000}k` : `${freq}`;\n      ctx.fillText(label, x, height - 5);\n    }\n\n    // Display gain value\n    ctx.fillStyle = this.themeService.accentColor();\n    ctx.font = 'bold 12px Arial';\n    ctx.textAlign = 'right';\n    ctx.fillText(`Gain: ${gainValue.toFixed(1)}x`, width - 10, 20);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  @for (band of BANDS; track band) {\n    \n      \n        {{ band | band }}-->\n        \n      \n    \n  }\n\n  \n    \n      GAIN-->\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          @for (band of BANDS; track band) {                  {{ band | band }}-->                    }            GAIN-->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ALLOWED_MIMETYPES = [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n];\n\nexport const ALLOWED_EXTENSIONS = ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4'];\n\nexport interface FileData {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Readonly\n                                fileHandlesDropped\n                            \n                            \n                                    Readonly\n                                filesDroped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(['*/*'])\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fileHandlesDropped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filesDroped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n  readonly fileHandlesDropped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n\n    // Try to get file handles first\n    if (event.dataTransfer?.items && 'getAsFileSystemHandle' in event.dataTransfer.items[0]) {\n      try {\n        const fileHandles: FileSystemFileHandle[] = [];\n        const promises: Promise[] = [];\n\n        for (const item of Array.from(event.dataTransfer.items)) {\n          const promise = (item as any).getAsFileSystemHandle().then((handle: any) => {\n            if (handle && handle.kind === 'file') {\n              fileHandles.push(handle);\n            }\n          });\n          promises.push(promise);\n        }\n\n        // When all promises are resolved, emit the file handles\n        Promise.all(promises)\n          .then(() => {\n            if (fileHandles.length > 0) {\n              this.fileHandlesDropped.emit(fileHandles);\n            } else {\n              // Fall back to regular files if no file handles were obtained\n              this.handleFileFallback(event);\n            }\n          })\n          .catch(() => {\n            // Fall back to regular files on error\n            this.handleFileFallback(event);\n          });\n\n        return; // Exit early - we're handling with file handles\n      } catch (error) {\n        // Fall through to file fallback\n        console.warn('File System Access API failed:', error);\n      }\n    }\n\n    // Fallback to regular files\n    this.handleFileFallback(event);\n  }\n\n  private handleFileFallback(event: DragEvent) {\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (const file of Array.from(droppedFiles)) {\n      if (file && this.allowedTypes().includes(file.type)) {\n        files.push(file);\n      }\n    }\n    this.filesDroped.emit(files);\n  }\n}\n\n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileData } from './file-loader.helpers';\nimport { WritableSignal } from '@angular/core';\n\nexport abstract class FileLoaderService {\n  abstract currentFolderHandle: WritableSignal;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                            \n                                buttonActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ButtonGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private checkIntervals: number[] = [];\n  private pressedButtonsCaches: ActionCache[][] = [];\n  private activeAxesCaches: ActionCache[][] = [];\n\n  buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule],\n  templateUrl: './hotkeys-help-dialog.component.html',\n  styleUrl: './hotkeys-help-dialog.component.scss'\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-hotkeys-help-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule],\n  templateUrl: './hotkeys-help-dialog.component.html',\n  styleUrl: './hotkeys-help-dialog.component.scss'\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _pause\n                            \n                            \n                                defaults\n                            \n                            \n                                    Optional\n                                dialogRef\n                            \n                            \n                                helpOpen\n                            \n                            \n                                hotkeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    element: this.document\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hotkeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private worker: Worker;\n  private nextId = 0;\n  private pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexedDbTrackMetadata.html":{"url":"interfaces/IndexedDbTrackMetadata.html","title":"interface - IndexedDbTrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IndexedDbTrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TrackMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService implements FileLoaderService {\n  private fileInput!: HTMLInputElement;\n\n  private files: File[] = [];\n\n  constructor() {\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  readonly currentFolderHandle = signal(undefined);\n\n  async openFiles(): Promise {\n    return this.files.map((file) => ({ file }));\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            MatMenu\n                            MatMenuContent\n                            MatMenuItem\n                            MatMenuTrigger\n                            MatIcon\n                            MatIconButton\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            SafePipe\n                            MatHint\n                            FormsModule\n                            MatFormField\n                            MatInput\n                            MatPrefix\n                            MatSuffix\n                            MatProgressSpinner\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                filteredBySerchterm\n                            \n                            \n                                libraryService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                searchTerm\n                            \n                            \n                                    Readonly\n                                selectedAlbum\n                            \n                            \n                                    Readonly\n                                selectedArtist\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                uniqueAlbums\n                            \n                            \n                                    Readonly\n                                uniqueArtists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAlbumToPlaylist\n                            \n                            \n                                    Async\n                                addArtistToPlaylist\n                            \n                            \n                                    Async\n                                addTracksToPlaylist\n                            \n                            \n                                    Async\n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                playTrack\n                            \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                trackByAlbum\n                            \n                            \n                                trackByArtist\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:141\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAlbumToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAlbumToPlaylist(album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addArtistToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addArtistToPlaylist(artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTracksToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbTracks\n                                            \n                                                        IndexedDbTrackMetadata[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTrackToPlaylist(track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAlbum\n                        \n                    \n                \n            \n            \n                \ntrackByAlbum(index: number, album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:246\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByArtist\n                        \n                    \n                \n            \n            \n                \ntrackByArtist(index: number, artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:242\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:250\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredBySerchterm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        libraryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LibraryService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedAlbum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedArtist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueAlbums\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueArtists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, effect, inject, OnInit, signal } from '@angular/core';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverArtUrls } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { LibraryService } from './library.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverArtUrls;\n}\n\n@Component({\n  imports: [\n    MatListModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix,\n    MatProgressSpinner\n  ],\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss'\n})\nexport default class LibraryComponent implements OnInit {\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n  libraryService = inject(LibraryService);\n\n  readonly searchTerm = signal('');\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  private processingInterval: any;\n\n  constructor() {\n    // Automatically manage the interval based on processing state\n    effect(() => {\n      const isProcessing = this.metadataService.processing();\n\n      if (isProcessing && !this.processingInterval) {\n        this.processingInterval = globalThis.setInterval(() => {\n          void this.libraryService.loadLibraryFromDb();\n        }, 5000);\n      } else if (!isProcessing && this.processingInterval) {\n        clearInterval(this.processingInterval);\n        this.processingInterval = undefined;\n      }\n    });\n  }\n\n  ngOnInit() {\n    void this.libraryService.loadLibraryFromDb();\n  }\n\n  private onLibraryUpdate() {}\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ uniqueArtists().length }}) \n        \n          \n            \n           \n      \n        {{ artist }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ uniqueAlbums().length }})\n        \n          \n            \n           \n      \n        \n          @if (album && album.coverUrl) {\n            \n          }\n        \n        {{ album.name }}{{ album.year ? ` | ${album.year}` : '' }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ tracks().length }})\n        \n          \n            \n          \n        \n      \n      \n        \n          @if (track && track.coverUrl) {\n            \n          }\n        \n        @if (selectedAlbum()) {\n          {{ track.track ? `${track.track}. ` : '' }}{{ track.title || track.fileName }}\n        } @else {\n          {{ track.title || track.fileName }}\n        }\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ tracks().length }} entries\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (libraryService.isLoading()) {                                        }        ALL ({{ uniqueArtists().length }})                                                        {{ artist }}                                                                          Add to Playlist                          @if (libraryService.isLoading()) {                                        }        ALL ({{ uniqueAlbums().length }})                                                                 @if (album && album.coverUrl) {                      }                {{ album.name }}{{ album.year ? ` | ${album.year}` : \\'\\' }}                                                                          Add to Playlist                          @if (libraryService.isLoading()) {                                        }        ALL ({{ tracks().length }})                                                                              @if (track && track.coverUrl) {                      }                @if (selectedAlbum()) {          {{ track.track ? `${track.track}. ` : \\'\\' }}{{ track.title || track.fileName }}        } @else {          {{ track.title || track.fileName }}        }                                                                          Add to Playlist            @if (searchTerm()) {                }  {{ tracks().length }} entries'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LibraryService.html":{"url":"injectables/LibraryService.html","title":"injectable - LibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                indexedDbTracks\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadLibraryFromDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLibraryFromDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLibraryFromDb()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        indexedDbTracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata } from '../player.types';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibraryService {\n  private readonly indexedDbService = inject(NgxIndexedDBService);\n  private readonly metadataService = inject(MetadataService);\n\n  readonly isLoading = signal(false);\n  readonly indexedDbTracks = signal([]);\n\n  async loadLibraryFromDb(): Promise {\n    try {\n      this.isLoading.set(true);\n\n      const result = await firstValueFrom(this.indexedDbService.getAll('library'));\n\n      // Parallele Verarbeitung für bessere Performance\n      const tracksWithBlobUrls = await Promise.all(result.map((track) => this.metadataService.createObjectUrlForEmbeddedPicture(track)));\n\n      this.indexedDbTracks.set(tracksWithBlobUrls);\n      return tracksWithBlobUrls;\n    } catch (error) {\n      console.error('Error loading library data:', error);\n      this.indexedDbTracks.set([]);\n      throw error; // Re-throw für Caller\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => void) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                processing\n                            \n                            \n                                    Readonly\n                                processingFile\n                            \n                            \n                                    Readonly\n                                processionPercent\n                            \n                            \n                                    Readonly\n                                statusText\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToLibrary\n                            \n                            \n                                createObjectUrlForEmbeddedPicture\n                            \n                            \n                                    Async\n                                createTrackFromFile\n                            \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToLibrary\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToLibrary(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AsyncGenerator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createObjectUrlForEmbeddedPicture\n                        \n                    \n                \n            \n            \n                \ncreateObjectUrlForEmbeddedPicture(meta: TrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meta\n                                            \n                                                            TrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TrackMetadata\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTrackFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTrackFromFile(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.filesToProcess() > 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processingFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processionPercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        statusText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata, type Track, TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport ColorThief from 'colorthief';\nimport { FileData } from '../file-loader-service/file-loader.helpers';\nimport { md5 } from 'hash-wasm';\nimport { colord } from 'colord';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private id3TagsService = inject(Id3TagsService);\n  private lastfmMetadataService = inject(LastfmMetadataService);\n  private musicbrainzService = inject(MusicbrainzService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  private readonly totalFilesToProcess = signal(0);\n  private readonly filesToProcess = signal(0);\n  readonly processionPercent = computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  });\n\n  readonly processing = computed(() => {\n    return this.filesToProcess() > 0;\n  });\n\n  readonly processingFile = signal('');\n\n  readonly statusText = computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  });\n\n  async *addFilesToLibrary(...fileDatas: FileData[]): AsyncGenerator {\n    if (fileDatas?.length) {\n      this.totalFilesToProcess.set(fileDatas.length);\n      this.filesToProcess.set(fileDatas.length);\n      for (const fileData of fileDatas.values()) {\n        this.processingFile.set(fileData.file.name);\n        const track = await this.createTrackFromFile(fileData);\n        if (track) {\n          yield track; // Yield each track as soon as it's ready\n        }\n        this.filesToProcess.update((files) => files - 1);\n      }\n      this.totalFilesToProcess.set(0);\n    }\n  }\n\n  async createTrackFromFile(fileData: FileData): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.getMetadata(fileData);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: fileData.file,\n      fileHandle: fileData.fileHandle,\n      metadata: metadata\n    };\n  }\n\n  async getMetadata(fileData: FileData): Promise {\n    this.processingFile.set(fileData.file.name + ' - Generating hash...');\n    const hash = await generateFileHash(fileData.file);\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('library', hash));\n\n      if (metadataCache) {\n        if (\n          metadataCache.embeddedPicture &&\n          this.useTagEmbeddedPicture() &&\n          (metadataCache.coverUrl.thumbUrl === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())\n        ) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumbUrl: url, originalUrl: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    this.processingFile.set(fileData.file.name + ' - Reading tags...');\n    const tags = await this.id3TagsService.extractTags(fileData.file);\n\n    if (!tags) {\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverArtUrls | undefined;\n\n    if (this.useWebMetainfos() && tags.artist && tags.album) {\n      this.processingFile.set(fileData.file.name + ' - Getting cover pictures...');\n      coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n      if (!coverUrls) {\n        coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n    this.processingFile.set(fileData.file.name + ' - Reading colors...');\n    if (coverUrls?.originalUrl) {\n      palette = await extractColorsWithColorThief(coverUrls.originalUrl);\n    } else if (tags.picture) {\n      const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n      palette = await extractColorsWithColorThief(objectUrl);\n      URL.revokeObjectURL(objectUrl);\n    }\n\n    const metadata: IndexedDbTrackMetadata = {\n      hash: hash,\n      fileName: fileData.file.name,\n      fileHandle: fileData.fileHandle,\n      coverUrl: coverUrls ?? { thumbUrl: this.PLACEHOLDER_URL, originalUrl: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await this.indexedDBService.add('library', metadata).toPromise();\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (meta.coverUrl.originalUrl === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      if (meta.coverUrl?.originalUrl?.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.originalUrl);\n      }\n      if (meta.coverUrl?.thumbUrl?.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.thumbUrl);\n      }\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumbUrl: url, originalUrl: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nasync function generateFileHash(file: File): Promise {\n  const fileSize = file.size;\n\n  // For very small files, hash the entire content\n  if (fileSize  1024 * 1024) {\n    const middlePos = Math.floor(fileSize / 2) - Math.floor(chunkSize / 2);\n    const middleChunk = await file.slice(middlePos, middlePos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(middleChunk));\n  }\n\n  // For files larger than 8MB, add quarter and three-quarter samples\n  if (fileSize > 8 * 1024 * 1024) {\n    const quarterPos = Math.floor(fileSize * 0.25);\n    const quarterChunk = await file.slice(quarterPos, quarterPos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(quarterChunk));\n\n    const threeQuarterPos = Math.floor(fileSize * 0.75);\n    const threeQuarterChunk = await file.slice(threeQuarterPos, threeQuarterPos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(threeQuarterChunk));\n  }\n\n  // Last chunk - often contains important metadata in audio files\n  const endChunk = await file.slice(Math.max(0, fileSize - chunkSize), fileSize).arrayBuffer();\n  chunks.push(new Uint8Array(endChunk));\n\n  // Combine all chunks into one array\n  const totalLength = chunks.reduce((sum, chunk) => sum + chunk.length, 0);\n  const combined = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const chunk of chunks) {\n    combined.set(chunk, offset);\n    offset += chunk.length;\n  }\n\n  return await md5(combined);\n}\n\nasync function extractColorsWithColorThief(url: string): Promise {\n  try {\n    const img = new Image();\n    img.crossOrigin = 'anonymous';\n\n    return new Promise((resolve) => {\n      img.onload = () => {\n        try {\n          const colorThief = new ColorThief();\n          const palette = colorThief.getPalette(img, 6);\n          const dominantColor = colorThief.getColor(img);\n\n          if (!palette || !dominantColor) {\n            resolve(undefined);\n            return;\n          }\n\n          // Convert RGB arrays using colord\n          const createColorInfo = (rgb: number[]) => {\n            const color = colord({ r: rgb[0], g: rgb[1], b: rgb[2] });\n            return {\n              hex: color.toHex(),\n              textHex: color.isLight() ? '#000000' : '#ffffff'\n            };\n          };\n\n          const result: CoverColorPalette = {\n            vibrant: createColorInfo(dominantColor),\n            darkVibrant: createColorInfo(palette[1] || [0, 0, 0]),\n            lightVibrant: createColorInfo(palette[2] || [255, 255, 255]),\n            muted: createColorInfo(palette[3] || [128, 128, 128]),\n            darkMuted: createColorInfo(palette[4] || [64, 64, 64]),\n            lightMuted: createColorInfo(palette[5] || [192, 192, 192])\n          };\n\n          resolve(result);\n        } catch (error) {\n          console.error('Error processing image with ColorThief:', error);\n          resolve(undefined);\n        }\n      };\n\n      img.onerror = () => {\n        console.error('Error loading image for color extraction');\n        resolve(undefined);\n      };\n\n      img.src = url;\n    });\n  } catch (error) {\n    console.error('Error extracting colors with ColorThief:', error);\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule],\n  templateUrl: './metadata-settings.component.html'\n})\nexport class MetadataSettingsComponent {\n  metadataService = inject(MetadataService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n    this.localStorageService.store('useWebMetainfos', event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n    this.localStorageService.store('useTagsCache', event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('useTagEmbeddedPicture', event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('preferTagEmbeddedPicture', event.checked);\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('library').toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { CoverArtArchiveApi, MusicBrainzApi } from 'musicbrainz-api';\nimport { ensureHttps } from './metadata.helper';\nimport { escapeLuceneQueryString } from '@motabass/helpers';\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private readonly mbApi = new MusicBrainzApi({\n    appName: 'gblaster',\n    appVersion: '1.0.0',\n    appContactInfo: 'markus.mohoritsch@gmx.at'\n  });\n\n  private readonly caApi = new CoverArtArchiveApi();\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${escapeLuceneQueryString(album)} AND artist:${escapeLuceneQueryString(artist)} AND primarytype:Album`;\n\n    try {\n      const data = await this.mbApi.search('release-group', { query });\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      // const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      // const coverData = await firstValueFrom(this.http.get(url));\n      const coverData = await this.caApi.getReleaseGroupCovers(releaseGroupId);\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image;\n\n      // Use large thumbnail or fall back to the full image\n      const original = coverImage.thumbnails.large || coverImage.image;\n\n      return { thumbUrl: ensureHttps(thumb), originalUrl: ensureHttps(original) };\n    } catch {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-player\n            \n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { PlayerService } from './player.service';\nimport { TitleService } from '../services/title.service';\nimport { AudioService } from './audio.service';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  selector: 'mtb-player',\n  imports: [PlaylistComponent, MatButtonModule, MatIconModule, CoverDisplayComponent, MatToolbarModule, MatTooltipModule, MatSliderModule, MatMenuModule],\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class PlayerComponent implements OnInit {\n  private titleService = inject(TitleService);\n  private fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n\n  ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                playTrackByHash\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                removeTrackFromPlaylist\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:51\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \naddTrackToPlaylist(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrackByHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrackByHash(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:255\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:237\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTrackFromPlaylist\n                        \n                    \n                \n            \n            \n                \nremoveTrackFromPlaylist(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:299\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:303\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:264\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:282\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:207\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:317\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:336\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n  private audioService = inject(AudioService);\n  private localStorageService = inject(LocalStorageService);\n  private fileLoaderService = inject(FileLoaderService);\n  private metadataService = inject(MetadataService);\n  private themeService = inject(ThemeService);\n  private wakelockService = inject(WakelockService, { optional: true });\n  private mediaSessionService = inject(MediaSessionService, { optional: true });\n\n  private destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  readonly durationSeconds = computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Focus the window first to ensure we're the active window\n        window.focus();\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n\n        const validFiles: FileData[] = [];\n\n        for (const fileHandle of launchParameters.files) {\n          try {\n            const file = await fileHandle.getFile();\n            if (ALLOWED_MIMETYPES.includes(file.type)) {\n              validFiles.push({ file, fileHandle });\n            }\n          } catch (error) {\n            console.error('Error processing file:', error);\n          }\n        }\n\n        if (validFiles.length > 0) {\n          await this.addFilesToPlaylist(...validFiles);\n          // If you want to play the first file immediately\n          // if (validFiles.length && this.currentPlaylist().length) {\n          //   const newTrack = this.currentPlaylist()[this.currentPlaylist().length - validFiles.length];\n          //   await this.playTrack(newTrack);\n          // }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.originalUrl ? [{ src: track.metadata.coverUrl.originalUrl, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const fileDatas: FileData[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...fileDatas);\n  }\n\n  addTrackToPlaylist(song: Track) {\n    if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.hash === song.metadata?.hash)) {\n      this.currentPlaylist.update((playlist) => [...playlist, song]);\n    }\n  }\n\n  removeTrackFromPlaylist(track: Track) {\n    // If the removed track is currently loaded, stop playback\n    if (this.currentlyLoadedTrack() === track) {\n      void this.stop();\n    }\n\n    // If the removed track is currently selected, deselect it\n    if (this.selectedTrack() === track) {\n      this.selectedTrack.set(undefined);\n    }\n    // Update the playlist by filtering out the specified track\n    this.currentPlaylist.update((playlist) => playlist.filter((t) => t !== track));\n  }\n\n  //  TODO: replace this with library\n  async addFilesToPlaylist(...fileDatas: FileData[]) {\n    for await (const track of this.metadataService.addFilesToLibrary(...fileDatas)) {\n      this.addTrackToPlaylist(track);\n    }\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async playTrackByHash(hash: string) {\n    const playlist = this.currentPlaylist();\n\n    const track = playlist.find((playlistTrack) => playlistTrack.metadata?.hash === hash);\n    if (track) {\n      await this.playTrack(track);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // eslint-disable-next-line sonarjs/pseudo-random\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerToolbarComponent.html":{"url":"components/PlayerToolbarComponent.html","title":"component - PlayerToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-toolbar\n            \n\n\n            \n                imports\n                \n                            MatIcon\n                            MatIconButton\n                            MatMenu\n                            MatSlider\n                            MatSliderThumb\n                            MatToolbar\n                            MatTooltip\n                            TimePipe\n                            MatMenuTrigger\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-toolbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player-toolbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                fileLoaderService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadLastDirectory\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showFilePickerAndLoadFiles\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLastDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLastDirectory()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showFilePickerAndLoadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    showFilePickerAndLoadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileLoaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FileLoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\n\nimport { MatMenu, MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { TimePipe } from '../time.pipe';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { PlayerService } from '../player.service';\nimport { AudioService } from '../audio.service';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { GamepadAxes, GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { HotkeysService } from '../../services/hotkeys/hotkeys.service';\nimport { FileLoaderService } from '../file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Component({\n  selector: 'player-toolbar',\n  imports: [MatIcon, MatIconButton, MatMenu, MatSlider, MatSliderThumb, MatToolbar, MatTooltip, TimePipe, MatMenuTrigger, MatMenuModule],\n  templateUrl: './player-toolbar.component.html',\n  styleUrl: './player-toolbar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayerToolbarComponent implements OnInit, OnDestroy {\n  private gamepadService = inject(GamepadService, { optional: true });\n  private hotkeysService = inject(HotkeysService, { optional: true });\n  fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  metadataService = inject(MetadataService);\n\n  readonly volumeIcon = computed(() => this.getVolumeIconForLevel(this.audioService.volume()));\n\n  ngOnInit() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showFilePickerAndLoadFiles());\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n\n  onSliderPositionChanged(value: number) {\n    this.playerService.setSeekPosition(value);\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol \n    \n\n    \n        \n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n    \n      \n      Load folder/files...\n    \n    @if (fileLoaderService.currentFolderHandle()) {\n      \n        \n        Load last directory\n      \n    }\n  \n\n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (audioService.isPlaying()) {          } @else {          }                                                    Load folder/files...        @if (fileLoaderService.currentFolderHandle()) {                      Load last directory          }      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            FormsModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                menuTrigger\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                scrollViewport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                onContextMenu\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContextMenu\n                        \n                    \n                \n            \n            \n                \nonContextMenu(event: MouseEvent, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        menuTrigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('menuTrigger')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scrollViewport\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('scrollViewport')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'mtb-playlist',\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    FormsModule,\n    MatMenuModule\n  ],\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaylistComponent {\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  private destroRef = inject(DestroyRef);\n\n  readonly menuTrigger = viewChild('menuTrigger');\n\n  readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 140;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled()) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.playerService.currentPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.playerService.currentPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.playerService.currentPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.hash === currentTrack.metadata?.hash);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (\n        (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash\n      );\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByHash(index: number, song: Track): string {\n    return song.metadata.hash;\n  }\n\n  onContextMenu(event: MouseEvent, song: Track): void {\n    event.preventDefault();\n    const trigger = this.menuTrigger();\n    if (!trigger) return;\n    trigger.menuData = { song: song };\n\n    // Open with position\n    trigger.openMenu();\n\n    // set position\n    if (trigger.menu) {\n      // Forcefully reset the menu position after it's opened\n      setTimeout(() => {\n        const overlayRef = document.querySelector('.cdk-overlay-pane:last-child') as HTMLElement;\n        if (overlayRef) {\n          overlayRef.style.position = 'absolute';\n          overlayRef.style.left = `${event.clientX}px`;\n          overlayRef.style.top = `${event.clientY}px`;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying) {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n\n\n\n  \n\n\n\n\n  \n    \n      \n      Remove from playlist\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (song && song.metadata && song.metadata.coverUrl) {                  }        @let songPlaying = isPlaying(song)();        @if (songPlaying) {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }                          Remove from playlist      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverArtUrls.html":{"url":"interfaces/RemoteCoverArtUrls.html","title":"interface - RemoteCoverArtUrls","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverArtUrls\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            originalUrl\n                                        \n                                \n                                \n                                        \n                                            thumbUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-settings\n            \n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  selector: 'mtb-settings',\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent],\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss'\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                                FileDropOverlayComponent\n                                PlayerToolbarComponent\n                            MatProgressBar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                    Readonly\n                                isHandset\n                            \n                            \n                                loaderService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                sidenav\n                            \n                            \n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                    Async\n                                onFileHandlesDropped\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFileHandlesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFileHandlesDropped(files: FileSystemFileHandle[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        FileSystemFileHandle[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('drawer')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { PlayerService } from '../player/player.service';\nimport { ALLOWED_MIMETYPES, FileData } from '../player/file-loader-service/file-loader.helpers';\nimport { PlayerToolbarComponent } from '../player/player-toolbar/player-toolbar.component';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../player/metadata-service/metadata.service';\n\n@Component({\n  selector: 'mtb-shell',\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    RouterOutlet,\n    FileDropOverlayComponent,\n    PlayerToolbarComponent,\n    MatProgressBar\n  ],\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss'\n})\nexport class ShellComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  private router = inject(Router);\n  titleService = inject(TitleService);\n  loaderService = inject(LoaderService);\n  playerService = inject(PlayerService);\n  metadataService = inject(MetadataService);\n\n  readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  private isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files.map((file) => ({ file })));\n  }\n\n  async onFileHandlesDropped(files: FileSystemFileHandle[]) {\n    const fileData: FileData[] = [];\n    for (const fileHandle of files) {\n      const file = await fileHandle.getFile();\n      fileData.push({ file, fileHandle });\n    }\n\n    return this.playerService.addFilesToPlaylist(...fileData);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n\n      @if (loaderService.isLoading()) {\n        \n      }\n\n      \n\n      @let currentTrack = playerService.currentlyLoadedTrack();\n      {{ currentTrack?.metadata?.artist ? `${currentTrack?.metadata?.artist} - ` : '' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n    \n\n    @if (metadataService.processing()) {\n      \n      {{ metadataService.statusText() }}\n    }\n    \n\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }            @let currentTrack = playerService.currentlyLoadedTrack();      {{ currentTrack?.metadata?.artist ? `${currentTrack?.metadata?.artist} - ` : \\'\\' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}        @if (metadataService.processing()) {            {{ metadataService.statusText() }}    }              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                buttonTooltip\n                            \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        buttonTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  imports: [MatCardModule, MatButtonModule],\n  templateUrl: './storage-settings.component.html'\n})\nexport class StorageSettingsComponent {\n  private localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThemeColor.html":{"url":"interfaces/ThemeColor.html","title":"interface - ThemeColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ThemeColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ThemeColor {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                accentColor\n                            \n                            \n                                    Readonly\n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                    Readonly\n                                primaryColor\n                            \n                            \n                                    Readonly\n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setAccentColor\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                            \n                                setPrimaryColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:48\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccentColor\n                        \n                    \n                \n            \n            \n                \nsetAccentColor(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPrimaryColor\n                        \n                    \n                \n            \n            \n                \nsetPrimaryColor(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        accentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.computeColors(this.accentColor()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.computeColors(this.primaryColor()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:47\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, effect, inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { Colord, colord } from 'colord';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { ThemeColor } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\ninterface ColorVariant {\n  suffix: string;\n  lightenFactor?: number;\n  darkenFactor?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly COLOR_VARIANTS: ColorVariant[] = [\n    { suffix: '0', lightenFactor: 0.55 },\n    { suffix: '10', lightenFactor: 0.45 },\n    { suffix: '20', lightenFactor: 0.35 },\n    { suffix: '25', lightenFactor: 0.3 },\n    { suffix: '30', lightenFactor: 0.25 },\n    { suffix: '35', lightenFactor: 0.2 },\n    { suffix: '40', lightenFactor: 0.15 },\n    { suffix: '50' },\n    { suffix: '60', darkenFactor: 0.05 },\n    { suffix: '70', darkenFactor: 0.1 },\n    { suffix: '80', darkenFactor: 0.15 },\n    { suffix: '90', darkenFactor: 0.18 },\n    { suffix: '95', darkenFactor: 0.21 },\n    { suffix: '98', darkenFactor: 0.24 },\n    { suffix: '99', darkenFactor: 0.27 },\n    { suffix: '100', darkenFactor: 0.3 }\n  ];\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  readonly primaryColor = signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR);\n\n  readonly accentColor = signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR);\n\n  readonly primaryColorPalette = computed(() => this.computeColors(this.primaryColor()));\n  readonly accentColorPalette = computed(() => this.computeColors(this.accentColor()));\n\n  constructor() {\n    // Automatische Updates bei Änderungen\n    effect(() => {\n      this.updateCSSProperties();\n      this.updateMetaThemeColor();\n    });\n\n    effect(() => {\n      this.localStorageService.store('darkMode', this.darkMode());\n    });\n\n    effect(() => {\n      this.localStorageService.store('primaryColor', this.primaryColor());\n    });\n\n    effect(() => {\n      this.localStorageService.store('accentColor', this.accentColor());\n    });\n  }\n\n  initializeTheme() {\n    this.updateCSSProperties();\n    this.updateMetaThemeColor();\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n  }\n\n  setColors(colors: ColorConfig) {\n    this.primaryColor.set(colors.mainColor || FALLBACK_PRIMARY_COLOR);\n    this.accentColor.set(colors.peakColor || FALLBACK_ACCENT_COLOR);\n  }\n\n  setPrimaryColor(color: string) {\n    this.primaryColor.set(color || FALLBACK_PRIMARY_COLOR);\n  }\n\n  setAccentColor(color: string) {\n    this.accentColor.set(color || FALLBACK_ACCENT_COLOR);\n  }\n\n  private updateCSSProperties() {\n    const root = document.documentElement.style;\n\n    // App color scheme\n    root.setProperty('--app-color-scheme', this.darkMode() ? 'dark' : 'light');\n\n    // Primary colors\n    this.primaryColorPalette().forEach((color) => {\n      root.setProperty(`--theme-primary-${color.name}`, color.hex);\n    });\n\n    // Accent colors\n    this.accentColorPalette().forEach((color) => {\n      root.setProperty(`--theme-accent-${color.name}`, color.hex);\n    });\n  }\n\n  private updateMetaThemeColor() {\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor() });\n  }\n\n  private computeColors(hex: string): ThemeColor[] {\n    const baseColor = colord(hex);\n\n    return this.COLOR_VARIANTS.map((variant) => {\n      let color = baseColor;\n\n      if (variant.lightenFactor) {\n        color = baseColor.lighten(variant.lightenFactor);\n      } else if (variant.darkenFactor) {\n        color = baseColor.darken(variant.darkenFactor);\n      }\n\n      return this.getThemeColor(color, variant.suffix);\n    });\n  }\n\n  private getThemeColor(color: Colord, name: string): ThemeColor {\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name,\n      hex: color.toHex(),\n      darkContrast: color.brightness() > lightnessLimit\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  imports: [MatCardModule, MatCheckboxModule],\n  templateUrl: './theme-settings.component.html'\n})\nexport class ThemeSettingsComponent {\n  themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverArtUrls\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverArtUrls\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private swUpdate = inject(SwUpdate);\n  private dialog = inject(MatDialog);\n  private destroRef = inject(DestroyRef);\n\n  constructor() {\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroRef)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alpha\n                            \n                            \n                                analyser\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Readonly\n                                gap\n                            \n                            \n                                    Readonly\n                                lineThickness\n                            \n                            \n                                localStorageService\n                            \n                            \n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Readonly\n                                smoothing\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LocalStorageService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule],\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  private gamepadService = inject(GamepadService, { optional: true });\n  audioService = inject(AudioService);\n  playerService = inject(PlayerService);\n  visualsService = inject(VisualsService);\n  localStorageService = inject(LocalStorageService);\n\n  readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                analyser\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                mode\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({})\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('bars')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ thickness: 2 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:91\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]'\n})\nexport class VisualsDirective implements OnDestroy {\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i  {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                wakelock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        wakelock\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WakeLockSentinel\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  wakelock?: WakeLockSentinel;\n\n  constructor() {}\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : 20.1.3\n        \n            @angular/common : 20.1.3\n        \n            @angular/compiler : 20.1.3\n        \n            @angular/core : 20.1.3\n        \n            @angular/forms : 20.1.3\n        \n            @angular/material : 20.1.3\n        \n            @angular/platform-browser : 20.1.3\n        \n            @angular/router : 20.1.3\n        \n            @angular/service-worker : 20.1.3\n        \n            colord : ^2.9.3\n        \n            colorthief : ^2.6.0\n        \n            date-fns : 4.1.0\n        \n            hash-wasm : 4.12.0\n        \n            music-metadata : 11.7.3\n        \n            musicbrainz-api : 0.25.1\n        \n            ngx-date-fns : 12.0.1\n        \n            ngx-indexed-db : 21.0.0\n        \n            ngx-webstorage : 20.0.0\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            escapeLuceneQueryString   (libs/.../lucene-escape.helper.ts)\n                        \n                        \n                            extractColorsWithColorThief   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../time.helper.ts)\n                        \n                        \n                            formatWithLeadingZero   (libs/.../time.helper.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/helpers/src/lib/lucene-escape.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        escapeLuceneQueryString\n                        \n                    \n                \n            \n            \n                \nescapeLuceneQueryString(queryString: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithColorThief\n                        \n                    \n                \n            \n            \n                \nextractColorsWithColorThief(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/time.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatWithLeadingZero\n                        \n                    \n                \n            \n            \n                \nformatWithLeadingZero(value: number, useLeadingZero: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                useLeadingZero\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nGraph\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    37 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.3.26\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : CC0-1.0\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs:\n\nPlaylist management (Sorting, Saving)\nVisuals via UserMediaInput from mic or system\nShare target\nWriting Meta-Tags\nFullscreen/Multiwindow Mode\nLocalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            EqualizerGainValues   (apps/.../audio.service.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/audio.service.ts\n    \n    \n        \n            \n                \n                    \n                    EqualizerGainValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../idexed-db-config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../player.types.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesMenuEntry   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZonelessChangeDetection(),\n    provideBrowserGlobalErrorListeners(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/idexed-db-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'gblasterDB',\n  version: 3,\n  objectStoresMeta: [\n    {\n      store: 'library',\n      storeConfig: { keyPath: 'hash', autoIncrement: false },\n      storeSchema: [\n        { name: 'hash', keypath: 'hash', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'directoryHandles',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/player.types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesMenuEntry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files_menu')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
