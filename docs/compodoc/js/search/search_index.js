var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.061,1,2.827]],["body/interfaces/ActionCache.html",[0,0.108,1,4.315,2,1.034,3,0.234,4,0.234,5,0.144,6,3.386,7,0.389,8,0.555,9,5.31,10,1.536,11,0.504,12,0.011,13,0.404,14,5.001,15,3.846,16,1.449,17,5.043,18,2.076,19,0.722,20,3.386,21,1.332,22,1.674,23,4.749,24,3.386,25,2.561,26,3.595,27,3.595,28,3.386,29,3.05,30,3.595,31,3.386,32,3.386,33,3.386,34,3.206,35,3.206,36,4.902,37,3.05,38,3.595,39,2.481,40,3.595,41,2.734,42,3.595,43,3.148,44,3.595,45,3.887,46,3.595,47,3.206,48,3.595,49,3.386,50,3.595,51,3.386,52,3.595,53,3.386,54,3.595,55,3.206,56,3.595,57,3.386,58,3.595,59,2.91,60,3.595,61,3.206,62,3.595,63,3.386,64,3.595,65,3.386,66,3.595,67,3.386,68,3.595,69,3.386,70,3.206,71,3.595,72,3.595,73,3.595,74,3.595,75,0.008,76,0.008]],["title/interfaces/Album.html",[0,0.061,77,1.397]],["body/interfaces/Album.html",[0,0.043,2,0.606,3,0.137,4,0.137,5,0.18,7,0.146,8,0.383,10,1.191,11,0.349,12,0.011,13,0.219,16,0.85,19,1.11,21,0.781,39,1.712,75,0.006,76,0.006,77,2.406,78,2.688,79,3.829,80,1.402,81,3.354,82,2.081,83,0.709,84,1.077,85,3.264,86,0.573,87,3.383,88,2.172,89,0.424,90,1.881,91,2.094,92,1.789,93,1.634,94,4.02,95,3.141,96,1.707,97,4.03,98,1.881,99,2.978,100,1.986,101,1.302,102,1.011,103,4.03,104,4.03,105,4.03,106,4.03,107,2.441,108,2.82,109,2.109,110,4.03,111,1.634,112,4.03,113,1.449,114,3.66,115,3.66,116,3.66,117,2.441,118,3.66,119,2.256,120,1.567,121,3.383,122,2.256,123,1.405,124,1.986,125,3.66,126,2.256,127,2.256,128,2.682,129,2.109,130,1.179,131,2.688,132,1.449,133,2.688,134,1.179,135,0.384,136,1.217,137,1.449,138,1.122,139,1.986,140,1.986,141,2.441,142,2.109,143,2.109,144,2.038,145,2.688,146,2.688,147,4.39,148,2.688,149,2.441,150,2.688,151,1.991,152,6.443,153,4.835,154,2.688,155,2.688,156,2.688,157,3.06,158,1.673,159,1.767,160,2.688,161,2.688,162,4.03,163,5.371,164,4.03,165,4.835,166,2.56,167,2.441,168,2.441,169,3.66,170,2.688,171,2.109,172,4.03,173,2.688,174,2.688,175,2.688,176,2.688,177,2.688,178,2.688,179,3.66,180,2.688,181,5.225,182,2.688,183,2.688,184,3.162,185,1.516,186,2.688,187,4.835,188,2.441,189,1.789,190,4.835,191,2.688,192,2.688,193,4.835,194,2.688,195,2.688,196,1.789,197,4.03,198,2.688,199,2.566,200,2.688,201,4.03,202,4.03,203,2.688,204,2.688,205,2.688,206,2.688,207,2.688,208,2.688,209,2.441,210,2.688,211,2.441,212,2.688,213,2.688,214,2.688,215,2.272,216,2.256,217,1.258,218,2.688,219,2.502,220,2.688,221,2.688,222,2.688,223,2.688,224,2.688,225,1.302,226,1.472,227,2.688,228,2.441,229,1.789,230,0.982,231,2.688,232,2.688,233,2.688,234,4.03,235,2.688,236,2.688,237,2.688,238,2.688,239,2.441,240,2.441,241,2.688,242,2.688,243,4.03,244,2.688,245,4.03,246,2.688,247,2.688,248,2.688,249,4.03,250,2.688,251,2.688,252,2.688,253,4.03,254,4.03,255,2.688,256,1.567,257,2.688,258,2.688,259,2.688,260,1.881,261,2.688,262,2.688,263,2.441,264,2.688]],["title/interfaces/AnalyserConfig.html",[0,0.061,265,2.43]],["body/interfaces/AnalyserConfig.html",[0,0.116,2,0.982,3,0.222,4,0.222,5,0.136,7,0.237,8,0.537,10,1.608,11,0.518,12,0.011,13,0.406,18,2.841,19,1.046,22,1.589,25,2.477,75,0.008,76,0.008,265,3.588,266,2.764,267,4.119,268,4.418,269,4.418,270,4.418,271,2.645,272,2.537,273,2.645,274,2.645,275,2.645,276,2.645,277,2.645,278,2.645,279,2.645,280,2.764,281,2.764,282,2.537,283,3.433,284,3.293,285,3.293,286,3.293,287,2.537,288,3.293,289,2.645,290,2.832,291,2.832,292,3.293,293,2.645,294,2.645,295,2.537,296,2.764,297,2.896,298,2.438,299,3.513,300,2.645,301,2.438,302,3.984,303,3.045,304,2.645,305,3.293,306,3.579,307,3.579,308,2.346,309,3.293,310,3.718]],["title/components/AppComponent.html",[84,1.022,311,1.791]],["body/components/AppComponent.html",[3,0.221,4,0.221,5,0.176,12,0.011,13,0.236,75,0.008,76,0.008,80,1.538,83,0.698,84,1.672,86,0.923,89,0.683,111,2.633,123,1.637,130,2.47,134,2.47,135,0.619,136,1.963,151,1.821,311,3.102,312,2.119,313,2.098,314,2.098,315,2.098,316,4.938,317,4.162,318,4.162,319,3.377,320,3.47,321,1.732,322,3.102,323,6.42,324,3.138,325,1.006,326,4.938,327,3.201,328,4.938,329,4.938,330,3.032,331,2.427,332,4.162,333,3.637,334,5.115,335,4.938,336,4.938,337,4.938,338,4.938,339,4.938,340,4.938,341,4.938,342,3.637,343,4.938,344,4.938,345,4.938,346,4.938,347,4.938,348,4.938,349,4.938,350,2.098,351,2.637,352,2.25,353,1.785,354,3.209,355,2.098,356,2.098,357,2.028,358,1.582,359,2.098,360,2.028,361,2.098,362,2.028,363,1.9,364,2.098,365,1.785,366,1.841,367,1.841,368,2.728,369,2.028,370,3.209,371,2.028,372,2.098,373,2.028,374,2.098,375,1.9,376,2.028,377,2.028,378,2.098,379,2.028,380,1.963,381,2.098,382,2.028,383,2.098,384,2.028,385,1.9,386,2.028,387,2.028,388,2.028,389,1.963,390,2.028,391,2.098]],["title/injectables/AudioService.html",[392,0.747,393,2.23]],["body/injectables/AudioService.html",[0,0.035,3,0.113,4,0.113,5,0.165,7,0.121,8,0.331,10,1.403,11,0.437,12,0.011,13,0.234,16,2.089,21,1.919,22,1.568,39,3.04,41,1.63,75,0.005,76,0.005,80,1.407,83,0.482,85,2.116,86,0.473,88,2.315,89,0.35,91,1.154,96,1.411,102,0.836,135,0.318,138,1.446,144,2.431,151,1.815,158,1.194,159,2.132,215,1.615,219,0.887,226,1.272,298,2.723,308,2.315,321,0.683,324,2.153,325,1.697,352,0.887,392,0.68,393,2.03,394,1.006,395,2.017,396,4.294,397,3.604,398,3.369,399,4.414,400,3.899,401,4.294,402,4.294,403,3.899,404,4.294,405,4.414,406,0.905,407,4.861,408,3.968,409,3.968,410,3.814,411,4.414,412,4.861,413,3.968,414,3.968,415,3.968,416,3.968,417,3.968,418,3.968,419,3.162,420,4.294,421,2.532,422,2.532,423,1.692,424,3.482,425,4.431,426,2.532,427,2.15,428,1.254,429,3.369,430,3.482,431,3.85,432,2.532,433,3.968,434,2.532,435,2.532,436,1.479,437,2.532,438,3.482,439,4.794,440,2.532,441,2.106,442,2.573,443,2.846,444,2.532,445,2.532,446,3.482,447,2.532,448,3.482,449,5.279,450,2.532,451,3.482,452,2.532,453,3.482,454,3.482,455,2.532,456,2.532,457,3.482,458,2.532,459,4.414,460,2.532,461,2.532,462,3.482,463,2.727,464,2.727,465,2.727,466,2.858,467,2.61,468,2.858,469,2.858,470,3.005,471,3.005,472,3.005,473,2.532,474,4.701,475,2.532,476,2.532,477,4.861,478,2.532,479,2.532,480,2.532,481,3.482,482,2.532,483,3.482,484,2.923,485,2.532,486,2.532,487,2.532,488,1.411,489,1.295,490,2.923,491,2.923,492,3.369,493,0.723,494,2.222,495,1.411,496,2.222,497,4.138,498,2.222,499,2.222,500,2.222,501,2.222,502,4.414,503,2.222,504,2.222,505,2.222,506,3.482,507,2.222,508,2.222,509,2.222,510,2.222,511,2.923,512,2.017,513,2.923,514,2.222,515,2.222,516,2.573,517,3.162,518,2.222,519,2.222,520,2.222,521,2.222,522,1.743,523,2.222,524,2.222,525,2.222,526,3.482,527,2.222,528,1.865,529,1.35,530,1.865,531,1.555,532,2.222,533,1.641,534,1.865,535,2.222,536,2.222,537,3.482,538,3.482,539,2.222,540,2.732,541,3.482,542,3.482,543,2.222,544,2.222,545,2.222,546,2.222,547,2.222,548,2.222,549,2.222,550,2.222,551,1.555,552,1.35,553,1.865,554,2.017,555,2.222,556,2.222,557,2.222,558,2.222,559,2.222,560,2.222,561,3.482,562,2.222,563,2.222,564,2.222,565,2.222,566,2.222,567,2.222,568,3.162,569,2.222,570,2.222,571,2.017,572,2.222,573,1.743,574,1.244,575,2.222,576,1.641,577,2.222,578,2.222,579,2.222,580,2.222,581,2.222,582,2.222,583,2.222,584,2.222,585,2.222,586,2.222,587,2.222,588,2.222,589,2.222,590,2.222,591,2.222,592,2.222,593,2.222,594,2.222,595,3.482,596,2.222,597,2.017,598,2.017,599,2.017,600,2.017,601,1.641,602,2.222,603,2.222,604,2.222,605,2.222,606,3.482,607,2.222,608,2.222,609,2.222,610,2.222,611,2.222,612,2.222,613,3.482,614,2.222,615,2.222,616,2.222,617,2.222,618,2.222,619,2.222,620,2.222,621,2.222,622,2.222,623,2.222,624,2.222,625,2.222,626,2.222,627,2.222]],["title/interfaces/AxisGamepadAction.html",[0,0.061,24,2.827]],["body/interfaces/AxisGamepadAction.html",[0,0.108,1,3.375,2,1.03,3,0.233,4,0.233,5,0.143,6,3.375,7,0.349,8,0.554,9,3.584,10,1.445,11,0.504,12,0.011,13,0.404,14,5.429,15,3.834,16,1.445,17,5.304,18,2.069,19,0.72,20,3.375,21,1.328,22,1.668,23,4.742,24,4.306,25,2.815,26,5.304,27,5.304,28,3.375,29,3.04,30,3.584,31,3.375,32,3.375,33,3.375,34,3.197,35,3.197,36,4.892,37,3.04,38,3.584,39,2.476,40,3.584,41,2.728,42,3.584,43,3.142,44,3.584,45,3.879,46,3.584,47,3.197,48,3.584,49,3.375,50,3.584,51,3.375,52,3.584,53,3.375,54,3.584,55,3.197,56,3.584,57,3.375,58,3.584,59,2.901,60,3.584,61,3.197,62,3.584,63,3.375,64,3.584,65,3.375,66,3.584,67,3.375,68,3.584,69,3.375,70,3.197,71,3.584,72,3.584,73,3.584,74,3.584,75,0.008,76,0.008]],["title/pipes/BandPipe.html",[120,2.23,628,3.474]],["body/pipes/BandPipe.html",[3,0.264,4,0.264,5,0.162,11,0.374,12,0.011,13,0.282,19,0.993,43,2.792,75,0.009,76,0.009,80,1.577,83,0.625,89,0.816,96,3.289,98,3.624,120,3.673,123,1.505,135,0.74,137,2.792,158,1.668,325,1.202,406,1.345,423,1.308,427,1.837,428,1.072,431,4.49,436,3.446,441,2.173,467,3.147,492,4.944,628,5.723,629,5.902,630,6.302,631,2.582,632,4.944,633,4.347,634,5.723,635,6.794,636,5.902,637,5.723,638,5.902,639,5.902,640,5.902,641,5.902]],["title/interfaces/BarsVisualizerOptions.html",[0,0.061,305,2.23]],["body/interfaces/BarsVisualizerOptions.html",[0,0.115,2,0.941,3,0.213,4,0.213,5,0.131,7,0.227,8,0.523,10,1.615,11,0.531,12,0.011,13,0.404,18,3.157,19,1.029,22,1.524,25,2.695,75,0.008,76,0.008,265,2.651,266,2.651,267,3.98,268,2.777,269,2.777,270,2.777,271,2.536,272,2.433,273,2.536,274,2.536,275,2.536,276,2.536,277,2.536,278,2.536,279,2.536,280,2.651,281,2.651,282,2.433,283,4.125,284,3.957,285,3.957,286,3.957,287,2.433,288,3.204,289,2.536,290,2.755,291,2.755,292,3.204,293,2.536,294,2.536,295,2.433,296,2.651,297,2.777,298,2.337,299,3.442,300,2.536,301,2.337,302,4.149,303,2.963,304,2.536,305,3.582,306,3.887,307,3.757,308,3.521,309,3.204,310,3.659]],["title/interfaces/BaseVisualizerOptions.html",[0,0.061,302,2.43]],["body/interfaces/BaseVisualizerOptions.html",[0,0.116,2,0.972,3,0.22,4,0.22,5,0.135,7,0.234,8,0.534,10,1.602,11,0.524,12,0.011,13,0.406,18,3.184,19,1.144,22,1.573,25,2.461,75,0.008,76,0.008,265,2.736,266,2.736,267,3.704,268,2.867,269,2.867,270,2.867,271,2.618,272,2.511,273,2.618,274,2.618,275,2.618,276,2.618,277,2.618,278,2.618,279,2.618,280,2.736,281,2.736,282,2.511,283,3.411,284,3.271,285,3.271,286,3.271,287,2.511,288,3.271,289,2.618,290,3.438,291,3.438,292,3.997,293,2.618,294,2.618,295,2.511,296,2.736,297,2.867,298,2.413,299,3.496,300,2.618,301,2.413,302,4.2,303,3.565,304,4.019,305,3.271,306,3.565,307,3.565,308,2.322,309,3.271,310,3.704]],["title/pipes/BitratePipe.html",[120,2.23,642,3.474]],["body/pipes/BitratePipe.html",[3,0.271,4,0.271,5,0.166,10,1.421,11,0.383,12,0.011,13,0.289,19,1.008,39,2.256,75,0.009,76,0.009,80,1.594,83,0.526,89,0.837,98,3.715,120,3.729,123,1.543,135,0.759,137,2.862,151,1.459,158,1.571,199,2.918,325,1.232,406,1.379,423,1.341,427,1.883,428,1.099,441,1.967,467,3.227,631,2.337,632,5.019,633,4.456,634,5.81,637,5.81,642,5.81,643,6.398,644,6.051,645,6.473,646,6.051,647,6.051,648,6.051]],["title/interfaces/ButtonGamepadAction.html",[0,0.061,28,2.827]],["body/interfaces/ButtonGamepadAction.html",[0,0.108,1,3.412,2,1.042,3,0.235,4,0.235,5,0.145,6,3.412,7,0.351,8,0.558,9,3.623,10,1.45,11,0.49,12,0.011,13,0.404,14,5.291,15,3.876,16,1.461,17,5.325,18,2.092,19,0.728,20,3.412,21,1.342,22,1.687,23,4.766,24,3.412,25,2.829,26,3.623,27,3.623,28,4.336,29,4.517,30,3.623,31,3.412,32,3.412,33,3.412,34,3.232,35,3.232,36,4.926,37,3.074,38,3.623,39,2.494,40,3.623,41,2.747,42,3.623,43,3.164,44,3.623,45,3.906,46,3.623,47,3.232,48,3.623,49,3.412,50,3.623,51,3.412,52,3.623,53,3.412,54,3.623,55,3.232,56,3.623,57,3.412,58,3.623,59,2.933,60,3.623,61,3.232,62,3.623,63,3.412,64,3.623,65,3.412,66,3.623,67,3.412,68,3.623,69,3.412,70,3.232,71,3.623,72,3.623,73,3.623,74,3.623,75,0.008,76,0.008]],["title/interfaces/Chainable.html",[0,0.061,649,3.826]],["body/interfaces/Chainable.html",[0,0.075,2,1.062,3,0.24,4,0.24,5,0.186,7,0.256,12,0.011,16,1.879,75,0.008,76,0.008,83,0.589,325,1.092,352,1.88,406,1.543,423,1.189,428,0.974,490,4.986,516,3.478,530,4.986,649,5.94,650,5.364,651,6.207,652,5.364,653,5.364,654,4.707,655,5.364,656,4.707,657,5.364,658,5.364,659,5.364,660,5.94,661,7.79,662,5.94,663,5.94,664,5.394,665,5.364,666,5.364,667,5.364,668,5.364,669,4.707,670,5.364,671,5.364,672,5.364,673,5.364,674,7.79,675,5.364,676,5.364,677,3.294,678,5.364,679,5.364,680,6.77,681,5.364,682,6.77,683,6.77,684,5.364,685,5.364,686,5.364,687,5.364,688,6.77,689,4.809,690,5.364,691,5.364,692,5.364,693,5.364,694,2.537]],["title/interfaces/Color.html",[0,0.061,695,2.827]],["body/interfaces/Color.html",[0,0.09,2,1.271,3,0.287,4,0.287,5,0.176,7,0.306,8,0.63,11,0.508,12,0.011,13,0.306,19,1.184,22,2.572,75,0.009,76,0.009,80,1.687,695,4.897,696,6.421,697,7.27,698,4.838]],["title/interfaces/ColorConfig.html",[0,0.061,699,2.43]],["body/interfaces/ColorConfig.html",[0,0.11,2,1.077,3,0.243,4,0.243,5,0.205,7,0.26,8,0.57,11,0.496,12,0.011,13,0.393,19,1.205,25,2.094,75,0.008,76,0.008,77,1.744,79,3.178,81,2.784,82,2.323,83,0.649,94,3.178,95,2.806,123,1.997,124,3.528,157,2.094,185,1.796,256,3.494,290,3.444,291,3.444,428,1.422,431,3.033,463,3.033,464,3.033,465,3.033,466,3.178,467,2.902,468,3.178,469,3.178,470,3.342,471,3.342,472,3.342,551,3.342,699,3.807,700,3.747,701,4.194,702,3.342,703,2.029,704,3.494,705,4.429,706,2.902,707,4.703,708,4.841,709,3.528,710,3.528,711,2.574,712,3.747,713,3.528,714,3.528,715,3.178]],["title/interfaces/CoverArtImage.html",[0,0.061,716,2.827]],["body/interfaces/CoverArtImage.html",[0,0.101,2,0.868,3,0.196,4,0.196,5,0.12,7,0.209,8,0.495,10,0.796,11,0.476,12,0.011,13,0.209,19,1.162,22,2.155,75,0.007,76,0.007,77,1.405,82,1.491,83,0.69,86,0.819,89,0.606,101,1.862,102,1.447,135,0.55,138,1.533,144,1.694,151,1.913,158,1.782,185,1.447,189,2.56,199,2.958,215,2.219,217,2.762,219,2.525,225,2.857,226,2.487,230,1.405,260,2.691,321,1.183,358,1.405,392,1.016,493,1.252,631,1.405,694,2.806,703,1.634,716,4.359,717,1.584,718,3.018,719,4.959,720,3.541,721,4.959,722,5.205,723,2.338,724,2.242,725,3.018,726,2.842,727,2.842,728,3.439,729,2.211,730,1.742,731,2.154,732,2.242,733,2.338,734,3.846,735,2.704,736,4.359,737,2.691,738,2.842,739,4.083,740,3.018,741,3.018,742,2.691,743,2.842,744,2.842,745,2.338,746,2.691,747,2.242,748,2.338,749,2.338,750,3.018,751,3.018,752,3.018,753,2.338,754,2.507,755,2.242,756,3.034,757,4.083,758,3.018,759,3.018,760,3.163,761,2.56,762,3.018,763,3.018,764,3.018,765,3.018,766,3.018,767,3.018,768,3.163,769,4.083,770,3.018,771,3.018,772,2.691,773,3.018,774,3.018,775,3.018,776,3.018,777,4.083,778,3.018,779,3.018,780,1.862,781,3.018,782,3.018,783,2.437,784,3.018,785,3.018,786,3.018]],["title/interfaces/CoverArtResponse.html",[0,0.061,744,2.827]],["body/interfaces/CoverArtResponse.html",[0,0.102,2,0.886,3,0.2,4,0.2,5,0.123,7,0.214,8,0.502,10,0.813,11,0.283,12,0.011,13,0.214,19,1.148,22,1.435,75,0.007,76,0.007,77,1.435,82,1.522,83,0.694,86,0.837,89,0.619,101,1.902,102,1.478,135,0.562,138,1.544,144,1.718,151,1.923,158,1.789,185,1.478,189,2.614,199,2.974,215,2.243,217,2.792,219,2.547,225,2.888,226,2.502,230,1.435,260,2.749,321,1.208,358,1.435,392,1.03,493,1.278,631,1.435,694,2.846,703,1.669,716,4.711,717,1.618,718,3.082,719,3.082,720,2.2,721,3.082,723,2.388,724,2.29,725,3.082,726,2.903,727,2.903,728,3.476,729,2.243,730,1.779,731,2.2,732,2.29,733,2.388,734,3.901,735,2.743,736,4.406,737,2.749,738,2.903,739,4.142,740,3.082,741,3.082,742,2.749,743,2.903,744,3.901,745,3.875,746,2.749,747,2.29,748,2.388,749,2.388,750,3.082,751,3.082,752,3.082,753,2.388,754,2.534,755,2.29,756,3.078,757,4.142,758,3.082,759,3.082,760,3.209,761,2.614,762,3.082,763,3.082,764,3.082,765,3.082,766,3.082,767,3.082,768,3.209,769,4.142,770,3.082,771,3.082,772,2.749,773,3.082,774,3.082,775,3.082,776,3.082,777,4.142,778,3.082,779,3.082,780,1.902,781,3.082,782,3.082,783,2.472,784,3.082,785,3.082,786,3.082]],["title/interfaces/CoverColor.html",[0,0.061,787,2.827]],["body/interfaces/CoverColor.html",[0,0.115,2,1.164,3,0.263,4,0.263,5,0.212,7,0.281,8,0.598,11,0.454,12,0.011,13,0.394,19,1.207,75,0.009,76,0.009,82,2,83,0.511,226,1.885,428,1.461,698,4.699,703,2.193,704,3.008,717,2.125,729,2.672,730,2.337,735,3.267,780,2.499,783,2.416,787,5.558,788,4.048,789,5.217,790,3.136,791,3.813,792,3.813,793,3.813,794,3.813,795,3.813,796,3.611,797,3.611,798,2.782]],["title/interfaces/CoverColorPalette.html",[0,0.061,704,2.23]],["body/interfaces/CoverColorPalette.html",[0,0.113,2,1.095,3,0.247,4,0.247,5,0.207,7,0.264,8,0.576,11,0.523,12,0.011,13,0.387,19,1.159,75,0.009,76,0.009,82,1.881,83,0.481,226,1.773,428,1.579,698,3.231,703,2.062,704,3.53,717,1.999,729,2.573,730,2.199,735,3.146,780,2.35,783,2.272,787,5.747,788,3.808,789,3.587,790,4.2,791,5.106,792,5.106,793,5.106,794,5.106,795,5.106,796,3.397,797,3.397,798,2.617]],["title/components/CoverDisplayComponent.html",[84,1.022,357,1.791]],["body/components/CoverDisplayComponent.html",[3,0.169,4,0.169,5,0.147,7,0.18,8,0.446,12,0.011,13,0.18,21,1.583,75,0.007,76,0.007,77,1.712,79,4.162,80,1.375,81,2.732,83,0.62,84,1.455,85,3.801,86,0.704,89,0.521,95,2.928,96,2.1,123,1.362,130,2.056,132,2.527,134,2.056,135,0.473,136,1.498,138,0.767,144,2.259,151,1.288,158,1.151,311,1.548,312,1.763,313,1.601,314,1.601,315,1.601,317,3.463,318,3.463,319,3.282,320,3.362,322,1.548,325,1.264,327,2.443,332,3.463,333,2.775,342,2.775,350,1.601,351,2.194,352,1.872,353,1.362,354,2.869,355,1.601,356,1.601,357,2.773,358,2.6,359,1.601,360,1.548,361,1.601,362,1.548,363,1.45,364,1.601,365,1.362,366,1.405,367,1.405,368,2.27,369,1.548,370,2.869,371,1.548,372,1.601,373,1.548,374,1.601,375,1.45,376,1.548,377,1.548,378,1.601,379,1.548,380,1.498,381,1.601,382,1.548,383,1.601,384,1.548,385,1.45,386,1.548,387,1.548,388,1.548,389,1.498,390,1.548,391,1.601,398,3.677,441,1.674,642,4.945,643,5.925,645,5.38,711,2.527,799,5.925,800,3.768,801,3.677,802,4.571,803,5.342,804,5.342,805,6.206,806,6.752,807,5.342,808,5.342,809,5.342,810,5.342,811,3.768,812,5.342,813,3.768,814,5.342,815,3.768,816,2.314,817,3.307,818,3.768,819,5.925,820,5.342,821,5.342,822,5.342,823,6.752,824,6.752,825,3.768,826,6.752,827,3.463,828,6.752,829,6.752,830,6.752,831,6.752,832,5.342,833,5.342,834,3.768]],["title/interfaces/DirHandleEntry.html",[0,0.061,835,3.474]],["body/interfaces/DirHandleEntry.html",[0,0.065,2,0.923,3,0.209,4,0.209,5,0.221,7,0.223,8,0.516,10,1.26,11,0.391,12,0.011,13,0.223,25,1.795,41,2.54,75,0.008,76,0.008,83,0.668,86,0.872,89,0.645,90,2.863,91,2.126,92,2.723,93,2.487,101,1.981,102,1.539,135,0.585,138,0.95,139,3.024,140,3.024,151,1.943,158,1.737,215,2.537,217,1.916,219,2.868,225,1.981,226,1.981,256,2.385,321,1.258,331,2.292,392,1.059,443,2.925,493,1.332,529,2.487,631,1.981,677,2.863,735,3.504,754,2.586,835,4.927,836,2.863,837,2.487,838,3.716,839,3.435,840,5.633,841,5.438,842,2.863,843,4.117,844,2.863,845,3.611,846,3.21,847,3.716,848,3.435,849,3.024,850,5.886,851,4.092,852,6.087,853,4.092,854,6.087,855,4.092,856,3.21,857,4.092,858,4.092,859,4.092,860,4.092,861,3.435,862,4.092,863,3.797,864,3.716,865,4.092,866,4.092,867,4.092,868,3.716,869,3.716,870,4.092,871,4.092,872,4.092,873,3.716,874,4.092,875,3.716,876,4.092,877,4.092,878,4.092,879,4.092,880,3.716,881,3.21,882,6.087,883,4.927,884,3.716,885,4.092,886,4.092,887,4.092]],["title/components/EqualizerComponent.html",[84,1.022,360,1.791]],["body/components/EqualizerComponent.html",[3,0.205,4,0.205,5,0.168,7,0.328,8,0.51,10,1.248,11,0.29,12,0.011,13,0.219,19,0.845,21,1.753,75,0.008,76,0.008,80,1.556,83,0.638,84,1.612,86,0.856,89,0.633,93,2.443,95,2.51,123,1.558,130,2.351,132,2.89,134,2.351,135,0.575,136,1.821,151,1.104,158,0.987,311,1.882,312,2.017,313,1.946,314,1.946,315,1.946,317,3.961,318,3.961,319,3.353,320,3.442,322,1.882,325,1.4,327,2.97,350,1.946,351,2.51,352,2.141,353,1.655,354,3.116,355,1.946,356,1.946,357,1.882,358,1.468,359,1.946,360,3.013,361,1.946,362,1.882,363,1.763,364,1.946,365,1.655,366,1.708,367,1.708,368,2.596,369,1.882,370,3.116,371,1.882,372,1.946,373,1.882,374,1.946,375,1.763,376,1.882,377,1.882,378,1.946,379,1.882,380,1.821,381,1.946,382,1.882,383,1.946,384,1.882,385,1.763,386,1.882,387,1.882,388,1.882,389,1.821,390,1.882,391,1.946,393,3.751,406,1.393,423,1.015,427,1.426,428,0.832,441,1.855,491,5.064,492,5.611,540,4.206,628,5.478,888,4.581,889,4.869,890,5.478,891,6.11,892,6.11,893,7.641,894,6.11,895,6.11,896,4.581,897,3.752,898,4.581,899,4.581,900,2.97,901,4.581,902,3.65,903,6.11,904,4.581]],["title/interfaces/EqualizerGainValues.html",[0,0.061,399,3.474]],["body/interfaces/EqualizerGainValues.html",[0,0.047,2,0.665,3,0.15,4,0.15,5,0.135,10,1.369,12,0.011,13,0.278,16,1.365,22,1.077,39,2.955,41,1.381,75,0.006,76,0.006,83,0.557,85,2.623,86,0.628,88,2.327,89,0.465,91,1.532,96,1.873,102,1.109,135,0.422,138,1.567,144,2.289,151,1.933,158,1.38,159,2.464,215,1.109,219,1.178,226,1.576,298,1.652,308,1.59,321,0.907,324,1.478,325,0.684,352,1.178,392,0.842,393,1.719,395,2.678,396,2.949,397,2.475,398,2.314,399,4.636,400,2.678,401,2.949,402,2.949,403,2.678,404,2.949,405,2.678,407,2.949,410,2.314,411,2.678,412,2.949,420,2.949,424,2.949,425,3.623,429,3.386,430,2.949,431,3.569,438,2.949,439,4.636,441,1.327,442,2.179,443,3.029,446,2.949,448,2.949,449,5.106,451,2.949,453,2.949,454,2.949,457,2.949,459,3.92,462,2.949,463,2.741,464,2.741,465,2.741,466,2.873,467,2.623,468,2.873,469,2.873,470,3.02,471,3.02,472,3.02,474,4.285,477,4.317,481,2.949,483,2.949,484,2.475,488,1.873,489,1.719,490,3.623,491,3.623,492,4.408,493,0.96,494,2.949,495,1.873,496,2.949,497,4.616,498,2.949,499,2.949,500,2.949,501,2.949,502,5.103,503,2.949,504,2.949,505,2.949,506,4.317,507,2.949,508,2.949,509,2.949,510,2.949,511,3.623,512,2.678,513,3.623,514,2.949,515,2.949,516,3.189,517,3.92,518,2.949,519,2.949,520,2.949,521,2.949,522,2.314,523,2.949,524,2.949,525,2.949,526,4.317,527,2.949,528,2.475,529,1.792,530,2.475,531,2.064,532,2.949,533,2.179,534,2.475,535,2.949,536,2.949,537,4.317,538,4.317,539,2.949,540,3.386,541,4.317,542,4.317,543,2.949,544,2.949,545,2.949,546,2.949,547,2.949,548,2.949,549,2.949,550,2.949,551,2.064,552,1.792,553,2.475,554,2.678,555,2.949,556,2.949,557,2.949,558,2.949,559,2.949,560,2.949,561,4.317,562,2.949,563,2.949,564,2.949,565,2.949,566,2.949,567,2.949,568,3.92,569,2.949,570,2.949,571,2.678,572,2.949,573,2.314,574,1.652,575,2.949,576,2.179,577,2.949,578,2.949,579,2.949,580,2.949,581,2.949,582,2.949,583,2.949,584,2.949,585,2.949,586,2.949,587,2.949,588,2.949,589,2.949,590,2.949,591,2.949,592,2.949,593,2.949,594,2.949,595,4.317,596,2.949,597,2.678,598,2.678,599,2.678,600,2.678,601,2.179,602,2.949,603,2.949,604,2.949,605,2.949,606,4.317,607,2.949,608,2.949,609,2.949,610,2.949,611,2.949,612,2.949,613,4.317,614,2.949,615,2.949,616,2.949,617,2.949,618,2.949,619,2.949,620,2.949,621,2.949,622,2.949,623,2.949,624,2.949,625,2.949,626,2.949,627,2.949,905,3.361,906,3.361]],["title/interfaces/FileData.html",[0,0.061,843,2.43]],["body/interfaces/FileData.html",[0,0.086,2,1.215,3,0.275,4,0.275,5,0.237,7,0.293,8,0.614,11,0.466,12,0.011,13,0.376,75,0.009,76,0.009,151,1.773,256,4.176,428,1.336,707,5.421,836,3.769,837,3.274,842,3.769,843,4.099,907,3.769,908,5.387,909,5.387,910,5.387,911,5.387,912,6.454,913,5.387,914,5.387,915,5.387,916,5.387,917,5.387,918,5.387,919,5.387,920,5.387,921,5.387,922,5.387,923,5.387,924,5.387,925,5.387,926,5.387]],["title/components/FileDropOverlayComponent.html",[84,1.022,362,1.791]],["body/components/FileDropOverlayComponent.html",[3,0.163,4,0.163,5,0.219,7,0.317,8,0.435,11,0.386,12,0.011,13,0.174,16,1.691,21,1.33,39,1.945,75,0.006,76,0.006,80,1.535,83,0.317,84,1.428,86,0.681,89,0.504,123,1.33,130,2.008,135,0.457,136,1.449,137,2.468,138,1.57,144,2.091,151,0.879,311,1.497,312,1.722,313,1.549,314,1.549,315,1.549,319,3.269,320,3.347,322,1.497,325,1.433,350,1.549,351,2.143,352,1.829,353,1.317,354,2.99,355,1.549,356,1.549,357,1.497,358,1.168,359,1.549,360,1.497,361,1.549,362,2.732,363,3.365,364,1.549,365,1.317,366,1.359,367,1.359,368,2.217,369,1.497,370,2.826,371,1.497,372,1.549,373,1.497,374,1.549,375,1.403,376,1.497,377,1.497,378,1.549,379,1.497,380,1.449,381,1.549,382,1.497,383,1.549,384,1.497,385,2.008,386,1.497,387,1.497,388,1.497,389,1.449,390,1.497,391,1.549,406,1.189,423,1.35,427,1.896,428,1.106,441,1.408,442,2.363,522,2.51,574,2.995,600,2.905,669,4.578,677,3.741,695,3.383,706,2.782,801,2.51,816,3.741,927,3.646,928,5.393,929,6.425,930,7.322,931,7.322,932,3.646,933,6.093,934,3.95,935,3.592,936,5.218,937,6.093,938,5.218,939,6.093,940,6.093,941,5.218,942,5.218,943,5.218,944,7.85,945,3.646,946,5.218,947,3.646,948,5.218,949,3.646,950,3.646,951,6.093,952,3.646,953,3.199,954,3.646,955,3.646,956,3.646,957,3.646,958,3.646,959,3.646,960,3.646,961,3.646,962,3.646,963,3.646,964,3.646,965,5.218,966,7.038,967,3.646,968,5.218,969,5.218,970,3.646,971,5.218,972,3.646,973,5.218,974,5.218,975,3.646,976,5.218,977,3.646,978,2.363,979,6.093,980,5.347,981,5.218,982,3.646,983,3.646,984,5.218,985,6.093,986,3.199,987,5.218,988,3.646,989,3.646,990,3.646,991,3.646,992,3.646,993,3.646,994,3.199,995,3.199,996,5.218,997,3.646,998,5.218,999,3.646,1000,3.646,1001,3.199,1002,3.199,1003,3.646,1004,3.646,1005,3.646,1006,3.646,1007,3.199,1008,4.578,1009,3.646,1010,3.199,1011,3.646,1012,3.199,1013,3.646,1014,5.218,1015,2.685]],["title/classes/FileLoaderService.html",[135,0.547,845,2.546]],["body/classes/FileLoaderService.html",[3,0.262,4,0.262,5,0.197,7,0.28,8,0.597,11,0.371,12,0.011,13,0.28,75,0.009,76,0.009,83,0.51,135,0.735,325,1.637,406,1.63,423,1.711,428,1.299,754,3.125,836,5.06,837,4.395,841,4.923,843,3.266,844,3.598,845,4.176,848,5.685,849,5.21,856,5.532,861,5.919,907,5.06,1016,5.861,1017,5.861,1018,8.79,1019,5.861,1020,5.861,1021,5.861,1022,5.861]],["title/interfaces/FrequencyBarsConfig.html",[0,0.061,282,2.23]],["body/interfaces/FrequencyBarsConfig.html",[0,0.116,2,0.982,3,0.222,4,0.222,5,0.136,7,0.237,8,0.537,10,1.613,11,0.518,12,0.011,13,0.406,18,2.841,19,1.046,22,1.589,25,2.477,75,0.008,76,0.008,265,2.764,266,2.764,267,3.718,268,2.896,269,2.896,270,2.896,271,2.645,272,2.537,273,2.645,274,2.645,275,2.645,276,2.645,277,2.645,278,2.645,279,2.645,280,2.764,281,2.764,282,3.293,283,4.181,284,4.01,285,4.01,286,4.01,287,2.537,288,3.293,289,2.645,290,2.832,291,2.832,292,3.293,293,2.645,294,2.645,295,2.537,296,2.764,297,2.896,298,2.438,299,3.513,300,2.645,301,2.438,302,3.984,303,3.045,304,2.645,305,3.293,306,3.579,307,3.579,308,2.346,309,3.293,310,3.718]],["title/interfaces/GamepadAction.html",[0,0.061,17,3.001]],["body/interfaces/GamepadAction.html",[0,0.106,1,3.259,2,0.995,3,0.225,4,0.225,5,0.138,6,3.259,7,0.385,8,0.542,9,3.46,10,1.526,11,0.526,12,0.011,13,0.401,14,4.93,15,3.702,16,1.395,17,5.235,18,3.022,19,0.995,20,4.93,21,1.939,22,2.306,23,5.391,24,3.259,25,2.499,26,3.46,27,3.46,28,3.259,29,2.936,30,3.46,31,3.259,32,3.259,33,3.259,34,3.086,35,3.086,36,4.783,37,2.936,38,3.46,39,2.421,40,3.46,41,2.668,42,3.46,43,3.072,44,3.46,45,3.793,46,3.46,47,3.086,48,3.46,49,3.259,50,3.46,51,3.259,52,3.46,53,3.259,54,3.46,55,3.086,56,3.46,57,3.259,58,3.46,59,2.801,60,3.46,61,3.086,62,3.46,63,3.259,64,3.46,65,3.259,66,3.46,67,3.259,68,3.46,69,3.259,70,3.086,71,3.46,72,3.46,73,3.46,74,3.46,75,0.008,76,0.008,428,1.381]],["title/injectables/GamepadService.html",[392,0.747,1023,2.827]],["body/injectables/GamepadService.html",[1,3.477,3,0.131,4,0.131,5,0.081,7,0.354,8,0.371,9,3.057,10,1.518,11,0.428,12,0.011,13,0.14,14,5.161,16,1.785,18,3.096,20,5.05,21,1.726,22,0.939,23,1.899,24,3.88,26,4.659,27,4.659,28,3.88,29,3.495,31,1.899,32,4.559,33,3.88,34,3.293,35,2.727,37,3.132,39,2.398,70,3.293,75,0.006,76,0.006,80,1.219,83,0.386,89,0.405,135,0.367,137,1.386,138,1.605,144,1.268,151,1.936,158,1.459,321,0.79,324,2.359,325,1.432,392,0.761,394,1.164,406,1.012,423,1.326,427,1.863,428,1.087,441,2.073,493,0.836,574,2.183,631,1.423,934,2.879,978,1.899,1023,2.879,1024,2.93,1025,5.363,1026,5.363,1027,4.441,1028,4.441,1029,5.363,1030,4.441,1031,4.441,1032,4.441,1033,2.93,1034,7.561,1035,4.441,1036,2.93,1037,7.561,1038,2.93,1039,5.984,1040,2.93,1041,7.243,1042,4.441,1043,2.93,1044,2.93,1045,2.93,1046,2.93,1047,2.93,1048,2.93,1049,2.93,1050,2.93,1051,2.93,1052,2.93,1053,5.363,1054,2.93,1055,5.363,1056,2.93,1057,2.93,1058,5.984,1059,2.93,1060,2.93,1061,2.93,1062,2.93,1063,4.441,1064,5.363,1065,5.124,1066,4.441,1067,2.571,1068,4.441,1069,2.93,1070,2.93,1071,2.93,1072,2.93,1073,2.93,1074,4.441,1075,2.93,1076,2.93,1077,2.93,1078,2.334,1079,2.93,1080,2.93,1081,3.95,1082,6.432,1083,2.93,1084,2.93,1085,5.363,1086,2.93,1087,2.93,1088,2.93,1089,2.93,1090,1.799,1091,2.93,1092,2.93,1093,2.93,1094,4.441,1095,2.93,1096,2.93,1097,2.93,1098,2.93,1099,2.93,1100,2.93,1101,4.706,1102,4.441,1103,3.271,1104,4.441,1105,4.441,1106,2.93,1107,2.93,1108,2.93,1109,4.441,1110,2.93,1111,2.93,1112,2.93,1113,4.441,1114,4.441,1115,5.363,1116,5.363,1117,5.984,1118,4.427,1119,5.363,1120,2.93,1121,5.984,1122,2.93,1123,5.939,1124,4.441,1125,4.441,1126,4.441,1127,2.93,1128,5.984,1129,2.93,1130,2.93,1131,4.441,1132,2.93,1133,2.93,1134,4.441,1135,4.441,1136,2.93,1137,2.93,1138,2.93,1139,2.93]],["title/interfaces/Hotkey.html",[0,0.061,1140,3.001]],["body/interfaces/Hotkey.html",[0,0.081,2,0.835,3,0.189,4,0.189,5,0.116,7,0.201,8,0.482,11,0.449,12,0.011,13,0.315,19,1.122,75,0.007,76,0.007,83,0.667,86,0.788,89,0.583,102,1.392,135,0.529,138,1.342,151,1.956,158,1.601,159,2.224,166,3.22,199,1.573,230,1.352,321,1.138,330,2.59,331,2.073,352,2.603,365,1.524,366,2.154,367,1.573,392,0.99,410,2.904,443,3.715,493,1.204,533,2.735,574,2.84,631,1.852,689,2.735,863,3.548,1081,3.107,1103,3.107,1140,3.978,1141,3.361,1142,5.471,1143,5.092,1144,5.785,1145,3.978,1146,2.59,1147,3.107,1148,3.548,1149,2.463,1150,4.605,1151,3.978,1152,5.65,1153,3.361,1154,2.735,1155,2.59,1156,3.361,1157,3.361,1158,3.375,1159,3.107,1160,3.107,1161,4.256,1162,3.361,1163,3.361,1164,2.59,1165,3.361,1166,3.361,1167,3.361,1168,3.361,1169,3.361,1170,3.361,1171,3.361,1172,3.361,1173,4.605,1174,3.361,1175,4.605,1176,4.605,1177,4.605,1178,3.107,1179,3.361,1180,3.361,1181,3.361,1182,3.361,1183,3.978,1184,3.361,1185,3.361,1186,3.361,1187,3.361,1188,5.252,1189,3.361,1190,4.605,1191,3.361,1192,3.361,1193,4.605,1194,3.361,1195,3.361,1196,3.361,1197,3.361,1198,3.361,1199,3.361,1200,3.361,1201,4.605,1202,3.361,1203,3.361,1204,3.107,1205,3.361,1206,5.65,1207,3.361,1208,4.605,1209,3.361,1210,3.107,1211,3.361,1212,3.361,1213,2.904,1214,3.361,1215,3.361,1216,3.361]],["title/interfaces/HotkeyInfo.html",[0,0.061,1154,2.827]],["body/interfaces/HotkeyInfo.html",[0,0.082,2,0.848,3,0.192,4,0.192,5,0.118,7,0.204,8,0.487,11,0.37,12,0.011,13,0.317,19,1.09,75,0.007,76,0.007,83,0.67,86,0.8,89,0.592,102,1.414,135,0.537,138,1.353,151,1.962,158,1.609,159,2.247,166,3.254,199,1.597,230,1.372,321,1.155,330,2.63,331,2.105,352,2.046,365,1.548,366,2.177,367,1.597,392,1,410,2.948,443,3.73,493,1.223,533,2.777,574,2.87,631,1.871,689,2.777,1081,3.154,1103,3.154,1140,2.948,1141,3.413,1142,4.301,1143,5.113,1144,5.255,1145,4.02,1146,2.63,1147,3.154,1148,3.585,1149,2.501,1150,4.653,1151,4.02,1152,6.486,1153,3.413,1154,3.786,1155,2.63,1156,3.413,1157,3.413,1158,3.41,1159,3.154,1160,3.154,1161,4.301,1162,3.413,1163,3.413,1164,2.63,1165,3.413,1166,3.413,1167,3.413,1168,3.413,1169,3.413,1170,3.413,1171,3.413,1172,3.413,1173,4.653,1174,3.413,1175,4.653,1176,4.653,1177,4.653,1178,3.154,1179,3.413,1180,3.413,1181,3.413,1182,3.413,1183,4.02,1184,3.413,1185,3.413,1186,3.413,1187,3.413,1188,5.294,1189,3.413,1190,4.653,1191,3.413,1192,3.413,1193,4.653,1194,3.413,1195,3.413,1196,3.413,1197,3.413,1198,3.413,1199,3.413,1200,3.413,1201,4.653,1202,3.413,1203,3.413,1204,3.154,1205,3.413,1206,5.686,1207,3.413,1208,4.653,1209,3.413,1210,3.154,1211,3.413,1212,3.413,1213,2.948,1214,3.413,1215,3.413,1216,3.413]],["title/interfaces/HotkeysData.html",[0,0.061,1217,3.474]],["body/interfaces/HotkeysData.html",[0,0.081,2,1.146,3,0.259,4,0.259,5,0.159,7,0.276,8,0.592,11,0.367,12,0.011,13,0.339,75,0.009,76,0.009,83,0.727,84,1.664,86,1.082,89,0.801,99,4.602,100,3.754,111,3.088,113,2.739,130,2.228,132,2.739,134,2.228,135,0.726,158,1.248,166,4.278,230,1.855,319,2.228,320,2.301,365,2.092,366,2.862,367,2.984,1148,3.555,1149,3.381,1154,3.754,1158,3.381,1164,3.555,1213,5.509,1217,5.656,1218,5.081,1219,4.264,1220,4.264,1221,5.228,1222,5.081,1223,4.359,1224,3.631,1225,5.081,1226,4.264,1227,4.264,1228,4.264,1229,5.081,1230,5.081,1231,4.613,1232,5.081]],["title/components/HotkeysHelpDialogComponent.html",[84,1.022,365,1.576]],["body/components/HotkeysHelpDialogComponent.html",[0,0.058,3,0.186,4,0.186,5,0.157,7,0.199,8,0.478,12,0.011,13,0.273,16,1.156,21,1.461,41,2.897,43,2.71,75,0.007,76,0.007,80,1.436,83,0.665,84,1.535,86,0.779,89,0.576,95,2.353,99,4.246,100,2.701,111,2.222,113,1.97,123,1.461,130,2.205,132,2.71,134,2.205,135,0.523,136,1.656,158,0.898,166,2.322,230,2.099,311,1.711,312,1.891,313,1.77,314,1.77,315,1.77,319,3.32,320,3.405,322,1.711,325,1.436,350,1.77,351,2.353,352,2.008,353,1.505,354,2.997,355,1.77,356,1.77,357,1.711,358,1.335,359,1.77,360,1.711,361,1.77,362,1.711,363,1.603,364,1.77,365,2.549,366,2.918,367,3.108,368,2.434,369,1.711,370,2.997,371,1.711,372,1.77,373,1.711,374,1.77,375,1.603,376,1.711,377,1.711,378,1.77,379,1.711,380,1.656,381,1.77,382,1.711,383,1.77,384,1.711,385,1.603,386,1.711,387,1.711,388,1.711,389,1.656,390,1.711,391,1.77,406,1.306,419,4.565,423,0.923,441,1.546,1140,3.944,1148,2.558,1149,2.433,1154,2.701,1158,3.346,1164,4.021,1213,2.868,1217,3.319,1218,6.489,1219,3.068,1220,3.068,1221,4.823,1222,3.656,1223,4.021,1224,3.349,1225,5.028,1226,4.22,1227,4.22,1228,4.22,1229,6.489,1230,3.656,1231,5.62,1232,3.656,1233,4.166,1234,3.656,1235,4.166,1236,4.166,1237,4.166,1238,7.053,1239,7.642,1240,7.053,1241,5.73,1242,5.73,1243,7.053,1244,5.73,1245,5.73,1246,5.028,1247,5.028,1248,5.73,1249,5.73,1250,5.73]],["title/injectables/HotkeysService.html",[392,0.747,1155,2.677]],["body/injectables/HotkeysService.html",[0,0.075,3,0.169,4,0.169,5,0.104,7,0.18,8,0.446,11,0.452,12,0.011,13,0.297,16,1.98,19,1.076,21,1.723,75,0.007,76,0.007,80,1.09,83,0.644,86,0.706,89,0.522,102,1.247,135,0.474,138,1.265,151,1.908,158,1.537,159,2.391,166,3.766,199,1.995,230,1.21,321,1.019,325,1.653,330,2.319,331,1.856,352,2.178,365,1.365,366,2.52,367,1.408,392,0.916,394,1.501,406,1.22,410,4.652,423,1.642,427,1.665,428,1.227,441,1.823,443,3.744,493,1.078,533,4.382,574,2.63,631,1.715,689,3.469,1081,2.782,1103,2.782,1140,2.6,1141,3.009,1142,3.941,1143,4.382,1144,5.254,1145,3.683,1146,2.319,1147,2.782,1148,3.815,1149,2.206,1150,4.263,1151,3.683,1152,5.385,1153,3.009,1154,2.449,1155,3.285,1156,3.009,1157,3.009,1158,3.125,1159,2.782,1160,4.576,1161,5.254,1162,4.263,1163,4.951,1164,3.815,1165,4.951,1166,3.009,1167,3.009,1168,3.009,1169,3.009,1170,3.009,1171,3.009,1172,4.263,1173,4.263,1174,3.009,1175,4.263,1176,4.263,1177,4.263,1178,2.782,1179,3.009,1180,3.009,1181,3.009,1182,3.009,1183,3.683,1184,3.009,1185,3.009,1186,3.009,1187,3.009,1188,4.951,1189,3.009,1190,4.263,1191,3.009,1192,3.009,1193,4.263,1194,3.009,1195,3.009,1196,3.009,1197,3.009,1198,4.263,1199,3.009,1200,3.009,1201,4.263,1202,3.009,1203,3.009,1204,4.978,1205,5.385,1206,5.385,1207,3.009,1208,4.263,1209,3.009,1210,2.782,1211,3.009,1212,3.009,1213,2.6,1214,3.009,1215,3.009,1216,3.009,1251,5.351,1252,5.351,1253,3.777,1254,3.777,1255,3.777,1256,3.777,1257,3.777,1258,3.777,1259,3.777,1260,3.777,1261,3.777,1262,3.777,1263,3.777]],["title/interfaces/Id3CoverPicture.html",[0,0.061,701,2.677]],["body/interfaces/Id3CoverPicture.html",[0,0.103,2,1.213,3,0.274,4,0.274,5,0.168,7,0.292,8,0.613,10,1.334,11,0.465,12,0.011,13,0.351,19,1.184,75,0.009,76,0.009,77,1.964,81,3.134,83,0.533,95,2.517,123,1.563,157,2.358,185,2.023,230,2.615,301,3.867,701,4.832,702,3.763,705,4.763,706,3.268,711,3.946,717,2.215,729,2.285,1090,4.511,1264,5.377,1265,4.883]],["title/interfaces/Id3Tags.html",[0,0.061,729,1.625]],["body/interfaces/Id3Tags.html",[0,0.098,2,1.113,3,0.252,4,0.252,5,0.155,7,0.268,8,0.582,10,1.266,11,0.543,12,0.011,13,0.333,19,1.21,75,0.009,76,0.009,77,2.539,81,4.052,83,0.489,95,3.254,123,1.434,157,3.049,185,2.615,230,1.803,301,2.764,428,1.582,701,4.865,702,3.454,705,5.137,706,3,711,3.853,717,2.033,722,6.119,729,2.6,1090,4.282,1264,4.936,1265,6.313]],["title/injectables/Id3TagsService.html",[392,0.747,1266,3.474]],["body/injectables/Id3TagsService.html",[3,0.2,4,0.2,5,0.215,7,0.214,10,1.094,11,0.381,12,0.011,13,0.214,16,2.105,20,2.906,21,1.143,39,1.671,75,0.007,76,0.007,80,0.913,83,0.591,89,0.62,135,0.562,137,2.12,138,1.545,151,1.883,158,1.298,159,2.617,166,2.498,184,3.086,226,2.599,321,1.209,324,2.992,325,1.226,392,1.031,394,1.782,406,1.373,423,0.994,427,1.395,428,0.814,436,2.618,441,1.209,493,1.28,511,3.302,574,3.342,702,4.176,703,1.671,717,2.458,729,1.671,730,1.782,731,2.203,735,3.458,754,2.245,796,3.698,797,2.753,798,2.849,881,5.005,934,3.904,978,2.906,1266,4.799,1267,4.483,1268,5.285,1269,4.483,1270,5.285,1271,7.271,1272,4.483,1273,6.023,1274,5.222,1275,4.483,1276,4.483,1277,7.586,1278,6.801,1279,3.934,1280,4.483,1281,3.934,1282,3.572,1283,4.483,1284,6.023,1285,4.483,1286,6.023,1287,4.483,1288,6.023,1289,4.483,1290,3.934,1291,4.483,1292,4.483,1293,4.483,1294,4.483,1295,3.934,1296,6.801,1297,4.483,1298,3.302,1299,4.483,1300,4.483,1301,4.483,1302,3.934,1303,6.023,1304,4.483,1305,4.483,1306,4.483,1307,4.483,1308,4.483,1309,4.483,1310,4.483,1311,6.801,1312,4.483,1313,4.483,1314,4.483,1315,4.483,1316,4.483,1317,6.023,1318,5.285,1319,4.483,1320,4.483,1321,4.483,1322,4.483,1323,4.483,1324,4.483,1325,4.483,1326,4.483,1327,4.483,1328,4.483]],["title/interfaces/IndexedDbTrackMetadata.html",[0,0.061,94,2.546]],["body/interfaces/IndexedDbTrackMetadata.html",[0,0.11,2,1.09,3,0.246,4,0.246,5,0.206,7,0.263,8,0.574,11,0.475,12,0.011,13,0.394,19,1.181,25,2.648,75,0.009,76,0.009,77,1.764,79,3.215,81,2.816,82,2.34,83,0.653,94,4.018,95,2.826,123,2.005,124,3.569,157,2.118,185,1.817,256,4.14,290,2.421,291,2.421,428,1.249,431,3.068,463,3.068,464,3.068,465,3.068,466,3.215,467,2.936,468,3.215,469,3.215,470,3.38,471,3.38,472,3.38,551,3.38,699,3.068,700,3.79,701,4.225,702,3.38,703,2.052,704,3.519,705,4.461,706,2.936,707,5.413,708,5.097,709,3.569,710,3.569,711,2.604,712,3.79,713,3.569,714,3.569,715,3.215]],["title/interfaces/LastfmAlbum.html",[0,0.061,1329,2.827]],["body/interfaces/LastfmAlbum.html",[0,0.103,2,0.923,3,0.209,4,0.209,5,0.128,7,0.223,8,0.516,10,0.847,11,0.468,12,0.011,13,0.223,19,1.181,75,0.008,76,0.008,77,2.367,80,1.504,82,2.103,83,0.687,86,0.872,89,0.645,101,1.981,102,1.539,135,0.585,138,1.609,144,1.765,151,1.781,157,2.958,158,1.763,159,1.795,199,2.865,215,2.041,217,1.916,219,1.635,225,1.981,226,2.367,230,2.223,321,1.258,392,1.059,493,1.332,694,2.206,703,1.739,711,2.206,717,1.685,720,3.63,723,2.487,724,2.385,728,2.385,729,2.305,730,1.853,731,2.292,732,2.385,733,2.487,745,3.297,747,2.385,748,2.487,749,2.487,753,2.487,754,2.305,755,2.385,756,3.163,760,2.487,768,2.487,780,1.981,783,1.916,1329,4.497,1330,3.024,1331,3.024,1332,4.789,1333,2.723,1334,2.723,1335,3.797,1336,3.797,1337,3.024,1338,4.009,1339,2.863,1340,3.21,1341,3.21,1342,3.21,1343,3.21,1344,3.21,1345,3.024,1346,3.21,1347,3.21,1348,3.21,1349,3.21,1350,3.21,1351,4.009,1352,3.21,1353,3.21,1354,3.21,1355,3.21,1356,3.21,1357,3.21,1358,3.024,1359,3.21,1360,3.21,1361,3.21,1362,3.21,1363,3.21,1364,3.21]],["title/interfaces/LastfmErrorResponse.html",[0,0.061,1336,2.677]],["body/interfaces/LastfmErrorResponse.html",[0,0.104,2,0.932,3,0.211,4,0.211,5,0.129,7,0.225,8,0.519,10,1.266,11,0.441,12,0.011,13,0.225,19,1.168,75,0.008,76,0.008,77,2.376,80,0.959,82,2.116,83,0.689,86,0.88,89,0.651,101,2.001,102,1.554,135,0.591,138,1.613,144,1.777,151,1.788,157,2.395,158,1.767,159,1.812,199,2.875,215,2.054,217,1.934,219,1.651,225,2.001,226,2.589,230,2.234,321,1.27,392,1.066,493,1.345,694,2.228,703,1.756,711,2.228,717,1.702,720,2.315,723,2.511,724,2.409,728,2.409,729,2.32,730,1.872,731,2.315,732,2.409,733,2.511,745,3.319,747,2.409,748,2.511,749,2.511,753,2.511,754,2.32,755,2.409,756,3.183,760,2.511,768,2.511,780,2.001,783,1.934,1329,4.035,1330,3.053,1331,3.053,1332,4.035,1333,2.75,1334,2.75,1335,3.821,1336,4.28,1337,4.808,1338,4.035,1339,2.892,1340,3.242,1341,3.242,1342,3.242,1343,3.242,1344,3.242,1345,3.053,1346,3.242,1347,3.242,1348,3.242,1349,3.242,1350,3.242,1351,4.035,1352,3.242,1353,3.242,1354,3.242,1355,3.242,1356,3.242,1357,3.242,1358,3.053,1359,3.242,1360,3.242,1361,3.242,1362,3.242,1363,3.242,1364,3.242]],["title/interfaces/LastfmImage.html",[0,0.061,1332,2.827]],["body/interfaces/LastfmImage.html",[0,0.104,2,0.932,3,0.211,4,0.211,5,0.129,7,0.225,8,0.519,10,0.855,11,0.441,12,0.011,13,0.225,19,1.182,75,0.008,76,0.008,77,2.376,80,0.959,82,2.116,83,0.689,86,0.88,89,0.651,101,2.001,102,1.554,135,0.591,138,1.613,144,1.777,151,1.788,157,2.395,158,1.767,159,1.812,199,2.875,215,2.054,217,1.934,219,1.651,225,2.001,226,2.376,230,2.234,321,1.27,392,1.066,493,1.345,694,2.228,703,1.756,711,2.228,717,1.702,720,2.315,723,2.511,724,2.409,728,2.409,729,2.32,730,1.872,731,2.315,732,2.409,733,2.511,745,3.319,747,2.409,748,2.511,749,2.511,753,2.511,754,2.32,755,2.409,756,3.183,760,2.511,768,2.511,780,2.001,783,1.934,1329,4.035,1330,3.053,1331,3.053,1332,4.519,1333,4.33,1334,4.33,1335,3.821,1336,3.821,1337,3.053,1338,4.035,1339,2.892,1340,3.242,1341,3.242,1342,3.242,1343,3.242,1344,3.242,1345,3.053,1346,3.242,1347,3.242,1348,3.242,1349,3.242,1350,3.242,1351,4.035,1352,3.242,1353,3.242,1354,3.242,1355,3.242,1356,3.242,1357,3.242,1358,3.053,1359,3.242,1360,3.242,1361,3.242,1362,3.242,1363,3.242,1364,3.242]],["title/injectables/LastfmMetadataService.html",[392,0.747,1339,2.677]],["body/injectables/LastfmMetadataService.html",[0,0.103,3,0.209,4,0.209,5,0.128,7,0.223,10,0.848,11,0.392,12,0.011,13,0.223,19,1.146,75,0.008,76,0.008,77,2.368,80,1.26,82,2.105,83,0.687,86,0.873,89,0.646,101,1.984,102,1.541,135,0.586,138,1.609,144,1.767,151,1.782,157,2.382,158,1.764,159,1.797,199,2.867,215,2.439,217,1.918,219,1.637,225,1.984,226,2.368,230,2.224,321,1.26,325,0.951,392,1.06,394,1.856,406,1.411,423,1.035,427,1.453,428,0.848,493,1.333,694,2.209,703,1.741,711,2.209,717,2.237,720,2.295,723,2.491,724,2.389,728,2.389,729,2.755,730,1.856,731,2.295,732,2.389,733,2.491,745,3.301,747,2.389,748,2.491,749,2.491,753,3.301,754,2.588,755,2.389,756,3.165,760,2.491,768,2.491,780,1.984,783,1.918,798,2.209,1329,4.012,1330,4.012,1331,3.028,1332,4.012,1333,2.727,1334,2.727,1335,3.8,1336,3.8,1337,3.028,1338,4.012,1339,3.8,1340,3.215,1341,3.215,1342,3.215,1343,3.215,1344,3.215,1345,3.028,1346,3.215,1347,3.215,1348,3.215,1349,3.215,1350,3.215,1351,4.012,1352,3.215,1353,3.215,1354,3.215,1355,3.215,1356,3.215,1357,3.215,1358,3.028,1359,3.215,1360,3.215,1361,3.215,1362,3.215,1363,3.215,1364,3.215,1365,5.431,1366,4.67]],["title/interfaces/LastfmSuccessResponse.html",[0,0.061,1335,2.677]],["body/interfaces/LastfmSuccessResponse.html",[0,0.104,2,0.941,3,0.213,4,0.213,5,0.131,7,0.227,8,0.523,10,0.864,11,0.397,12,0.011,13,0.227,19,1.15,75,0.008,76,0.008,77,2.595,80,0.969,82,2.13,83,0.691,86,0.889,89,0.658,101,2.021,102,1.57,135,0.597,138,1.618,144,1.788,151,1.795,157,2.41,158,1.771,159,1.83,199,2.884,215,2.067,217,1.954,219,1.667,225,2.021,226,2.386,230,2.245,321,1.283,392,1.073,493,1.358,694,2.25,703,1.773,711,2.25,717,1.719,720,2.337,723,2.536,724,2.433,728,2.433,729,2.335,730,1.89,731,2.337,732,2.433,733,2.536,745,3.341,747,2.433,748,2.536,749,2.536,753,2.536,754,2.335,755,2.433,756,3.204,760,2.536,768,2.536,780,2.021,783,1.954,1329,4.826,1330,3.083,1331,3.083,1332,4.061,1333,2.777,1334,2.777,1335,4.301,1336,3.846,1337,3.083,1338,4.061,1339,2.92,1340,3.274,1341,3.274,1342,3.274,1343,3.274,1344,3.274,1345,3.083,1346,3.274,1347,3.274,1348,3.274,1349,3.274,1350,3.274,1351,4.061,1352,3.274,1353,3.274,1354,3.274,1355,3.274,1356,3.274,1357,3.274,1358,3.083,1359,3.274,1360,3.274,1361,3.274,1362,3.274,1363,3.274,1364,3.274]],["title/injectables/LegacyFileLoaderService.html",[392,0.747,1367,3.826]],["body/injectables/LegacyFileLoaderService.html",[3,0.225,4,0.225,5,0.234,7,0.343,8,0.542,11,0.318,12,0.011,13,0.24,25,2.499,39,1.874,75,0.008,76,0.008,83,0.626,89,0.695,135,0.631,138,1.465,151,1.566,158,1.083,159,1.934,215,2.744,219,1.762,321,1.356,324,3.165,325,1.603,392,1.112,394,1.998,406,1.48,423,1.595,428,1.179,493,1.435,522,3.46,574,2.471,631,1.611,677,4.669,754,2.682,816,3.086,836,3.987,837,3.463,839,3.702,841,4.471,842,3.086,843,2.801,844,3.086,845,4.792,846,3.46,848,5.299,849,4.93,856,4.953,861,5.601,1290,4.411,1302,4.411,1367,5.699,1368,6.495,1369,5.027,1370,6.673,1371,5.027,1372,5.027,1373,5.027,1374,5.027,1375,5.027,1376,5.027,1377,5.027,1378,5.027,1379,5.027,1380,5.027,1381,5.027,1382,5.027,1383,5.027,1384,5.027,1385,5.027,1386,5.027,1387,5.027,1388,5.027,1389,5.027,1390,5.027,1391,5.027,1392,5.027,1393,5.027,1394,5.027]],["title/components/LibraryComponent.html",[84,1.022,136,1.733]],["body/components/LibraryComponent.html",[0,0.026,3,0.083,4,0.083,5,0.152,7,0.22,8,0.258,10,1.278,11,0.427,12,0.011,13,0.147,16,1.282,19,1.076,21,1.626,39,1.722,75,0.004,76,0.004,77,2.493,78,1.628,79,2.315,80,1.56,81,2.027,82,1.05,83,0.64,84,0.929,85,3.129,86,0.347,87,2.919,88,1.46,89,0.257,90,1.139,91,1.407,92,1.084,93,0.99,94,4.297,95,3.147,96,1.034,97,3.478,98,1.139,99,2.57,100,1.203,101,0.788,102,0.613,103,3.478,104,3.478,105,3.478,106,3.478,107,1.479,108,2.836,109,1.278,110,3.478,111,0.99,112,3.478,113,0.878,114,3.158,115,3.158,116,3.158,117,1.479,118,3.158,119,1.367,120,0.949,121,2.274,122,1.367,123,1.308,124,1.203,125,3.158,126,1.367,127,1.367,128,2.698,129,1.278,130,1.188,131,2.709,132,1.46,133,2.709,134,1.188,135,0.233,136,1.836,137,1.46,138,0.807,139,1.203,140,1.203,141,1.479,142,2.125,143,2.125,144,2.169,145,1.628,146,3.478,147,4.41,148,4.5,149,3.158,150,3.478,151,1.947,152,6.457,153,4.857,154,2.709,155,2.709,156,2.709,157,3.094,158,1.621,159,1.778,160,2.709,161,3.478,162,4.053,163,5.392,164,4.053,165,4.857,166,2.574,167,2.46,168,2.46,169,3.681,170,2.709,171,2.125,172,4.053,173,2.709,174,2.709,175,2.709,176,2.709,177,2.709,178,2.709,179,3.681,180,2.709,181,5.082,182,2.709,183,2.709,184,3.18,185,1.525,186,2.709,187,4.857,188,2.46,189,1.803,190,4.857,191,2.709,192,2.709,193,4.857,194,2.709,195,2.709,196,1.803,197,4.053,198,2.709,199,2.743,200,2.709,201,4.053,202,4.053,203,2.709,204,2.709,205,2.709,206,2.709,207,2.709,208,2.709,209,2.46,210,2.709,211,2.46,212,2.709,213,2.709,214,2.709,215,2.429,216,1.367,217,0.762,218,1.628,219,2.056,220,1.628,221,1.628,222,1.628,223,1.628,224,1.628,225,0.788,226,0.989,227,1.628,228,1.479,229,1.084,230,0.595,231,2.709,232,1.628,233,1.628,234,2.709,235,2.709,236,1.628,237,2.709,238,1.628,239,2.46,240,1.479,241,1.628,242,2.709,243,2.709,244,1.628,245,2.709,246,1.628,247,2.709,248,1.628,249,4.053,250,2.709,251,1.628,252,2.709,253,2.709,254,3.478,255,1.628,256,0.949,257,1.628,258,1.628,259,1.628,260,1.139,261,2.709,262,2.709,263,2.46,264,1.628,311,0.762,312,1.019,313,0.788,314,0.788,315,0.788,319,2.865,320,2.887,322,0.762,325,1.547,350,0.788,351,1.268,352,1.082,353,0.671,354,1.963,355,0.788,356,0.788,357,0.762,358,0.595,359,0.788,360,0.762,361,0.788,362,0.762,363,0.714,364,0.788,365,0.671,366,0.692,367,0.692,368,1.312,369,0.762,370,1.963,371,0.762,372,0.788,373,0.762,374,0.788,375,0.714,376,0.762,377,0.762,378,0.788,379,0.762,380,0.738,381,0.788,382,0.762,383,0.788,384,0.762,385,0.714,386,0.762,387,0.762,388,0.762,389,0.738,390,0.762,391,0.788,406,0.704,423,1.497,427,2.101,428,1.226,441,1.658,573,3.81,1395,3.087,1396,3.087,1397,3.087,1398,2.709,1399,3.087,1400,3.087,1401,3.087,1402,3.087,1403,3.087,1404,3.087,1405,2.709,1406,1.856,1407,1.856,1408,1.856,1409,1.856,1410,1.856,1411,1.856,1412,1.856,1413,1.856,1414,1.856,1415,1.856,1416,1.856,1417,1.856,1418,1.856,1419,1.856,1420,1.856,1421,1.856,1422,1.856,1423,1.856,1424,1.856,1425,2.709,1426,3.81,1427,3.087,1428,3.087,1429,3.087,1430,4.619,1431,4.619,1432,4.619]],["title/interceptors/LoaderInterceptor.html",[1433,4.36,1434,3.474]],["body/interceptors/LoaderInterceptor.html",[3,0.266,4,0.266,5,0.164,7,0.284,11,0.377,12,0.011,13,0.284,75,0.009,76,0.009,80,1.213,83,0.72,86,1.113,89,0.823,102,1.965,135,0.747,137,2.816,138,1.213,158,1.283,325,1.213,392,1.237,406,1.646,423,1.32,427,1.853,428,1.081,724,3.045,881,4.099,1151,5.35,1434,5.754,1435,5.954,1436,5.954,1437,7.221,1438,7.221,1439,8.081,1440,6.82,1441,8.081,1442,5.954,1443,5.954,1444,7.221,1445,5.954,1446,5.225,1447,5.318,1448,5.954,1449,5.225,1450,5.954,1451,5.954,1452,5.954]],["title/injectables/LoaderService.html",[392,0.747,1447,3.211]],["body/injectables/LoaderService.html",[3,0.259,4,0.259,5,0.159,7,0.276,8,0.592,12,0.011,13,0.276,16,1.97,21,1.476,39,2.984,41,2.916,75,0.009,76,0.01,83,0.504,88,2.739,89,0.801,135,0.726,138,1.179,144,2.192,321,1.562,325,1.563,392,1.216,394,2.301,400,6.117,406,1.618,423,1.573,441,1.562,474,5.228,493,1.653,568,4.613,571,4.613,597,4.613,1447,5.228,1453,5.79,1454,8.213,1455,7.207,1456,5.79,1457,5.79,1458,5.79,1459,5.79,1460,8.213,1461,5.79,1462,5.79,1463,4.613]],["title/injectables/MediaSessionService.html",[392,0.747,1464,3.001]],["body/injectables/MediaSessionService.html",[3,0.206,4,0.206,5,0.126,7,0.22,10,1.429,11,0.465,12,0.011,13,0.22,16,2.184,29,4.468,75,0.008,76,0.008,80,1.496,83,0.533,86,0.86,89,0.636,123,1.173,135,0.577,138,1.248,151,1.661,159,1.77,217,2.517,225,2.603,226,1.963,321,1.241,324,3.03,325,1.558,392,1.049,393,3.134,394,1.828,397,5.795,398,5.057,406,1.397,423,1.628,427,2.286,428,1.334,442,2.982,493,1.313,512,3.665,863,3.762,897,2.824,1183,5.057,1464,4.218,1465,6.905,1466,6.27,1467,4.6,1468,6.127,1469,6.127,1470,6.127,1471,6.127,1472,4.6,1473,6.127,1474,6.89,1475,7.651,1476,6.447,1477,4.6,1478,6.127,1479,6.89,1480,4.6,1481,6.127,1482,4.6,1483,6.127,1484,4.6,1485,4.743,1486,4.6,1487,4.882,1488,5.376,1489,4.6,1490,3.665,1491,4.6,1492,4.6,1493,4.6,1494,4.6,1495,4.036,1496,4.6,1497,4.6,1498,6.127,1499,4.882,1500,5.376,1501,6.127,1502,4.6,1503,4.6,1504,4.036,1505,4.6,1506,4.6,1507,4.6,1508,4.6,1509,4.6,1510,4.6,1511,4.6]],["title/injectables/MetadataService.html",[128,2.546,392,0.747]],["body/injectables/MetadataService.html",[3,0.12,4,0.12,5,0.187,7,0.128,8,0.346,11,0.446,12,0.011,13,0.128,19,0.79,21,1.575,41,1.101,75,0.005,76,0.005,77,0.859,79,2.963,80,1.163,81,1.37,82,1.41,83,0.672,85,2.706,86,0.501,88,1.267,89,0.371,90,1.645,91,1.891,92,1.565,93,1.429,94,2.422,95,2.684,96,1.493,101,1.138,102,0.884,123,1.738,128,2.422,135,0.336,138,1.434,139,1.737,140,1.737,144,2.308,151,1.84,157,1.031,158,1.666,171,2.855,185,0.884,199,2.129,215,2.481,219,2.588,256,2.121,321,0.723,325,1.472,358,1.329,392,0.71,394,1.065,406,0.945,423,1.266,427,1.778,428,1.037,441,1.667,459,3.305,488,2.311,489,1.37,493,0.765,495,1.493,529,2.212,631,2.256,662,3.639,677,2.546,694,3.33,698,3.979,704,2.121,708,4.417,709,3.703,710,1.737,711,1.267,712,1.844,713,1.737,717,2.668,730,1.065,731,1.317,742,1.645,746,2.546,754,2.436,755,2.121,756,2.121,780,2.156,783,2.084,789,4.236,790,2.212,791,1.737,792,1.737,793,1.737,794,1.737,795,1.737,798,2.702,837,1.429,843,4.308,844,1.645,863,3.115,907,1.645,1266,3.305,1339,2.546,1512,2.351,1513,5.074,1514,5.074,1515,5.074,1516,5.074,1517,5.074,1518,3.639,1519,4.147,1520,4.147,1521,4.147,1522,2.68,1523,2.68,1524,2.351,1525,4.147,1526,4.147,1527,2.68,1528,4.043,1529,4.147,1530,2.68,1531,4.147,1532,2.68,1533,4.147,1534,2.68,1535,4.551,1536,4.147,1537,4.147,1538,2.68,1539,4.147,1540,2.68,1541,4.147,1542,2.68,1543,4.147,1544,2.68,1545,2.68,1546,2.351,1547,2.68,1548,2.351,1549,2.68,1550,2.68,1551,1.844,1552,2.68,1553,2.68,1554,2.351,1555,2.351,1556,2.68,1557,2.68,1558,2.68,1559,2.68,1560,2.68,1561,2.68,1562,2.68,1563,2.68,1564,2.68,1565,2.68,1566,2.68,1567,2.68,1568,2.68,1569,4.147,1570,2.135,1571,2.68,1572,2.68,1573,2.351,1574,2.68,1575,2.68,1576,2.68,1577,2.68,1578,2.68,1579,2.68,1580,4.147,1581,2.68,1582,2.68,1583,2.68,1584,4.147,1585,4.452,1586,2.68,1587,2.68,1588,4.147,1589,2.68,1590,5.712,1591,4.147,1592,4.147,1593,3.305,1594,3.639,1595,3.639,1596,5.074,1597,2.68,1598,2.68,1599,4.147,1600,5.074,1601,3.305,1602,2.68,1603,2.68,1604,2.68,1605,2.68,1606,6.178,1607,2.68,1608,2.68,1609,2.68,1610,2.68,1611,2.68,1612,2.68,1613,2.68,1614,6.178,1615,2.68,1616,4.147,1617,2.68,1618,4.147,1619,4.147,1620,2.68,1621,2.68,1622,2.68,1623,2.68,1624,2.68,1625,2.68,1626,2.68,1627,2.68,1628,2.68,1629,2.68,1630,2.68,1631,2.68,1632,2.68,1633,2.68,1634,2.68,1635,2.68,1636,2.68,1637,2.68,1638,2.68,1639,2.68,1640,2.68,1641,2.68,1642,2.68,1643,2.68,1644,2.351,1645,2.351,1646,2.68,1647,4.147,1648,2.68,1649,2.68,1650,2.68,1651,2.68,1652,2.68,1653,2.68,1654,2.68,1655,2.68,1656,2.68,1657,2.68,1658,2.351,1659,2.68,1660,2.68,1661,2.68,1662,2.68,1663,2.68,1664,2.68,1665,2.68,1666,2.68,1667,2.68,1668,2.68,1669,2.68,1670,2.68,1671,2.68]],["title/components/MetadataSettingsComponent.html",[84,1.022,369,1.791]],["body/components/MetadataSettingsComponent.html",[3,0.176,4,0.176,5,0.206,7,0.188,8,0.46,11,0.436,12,0.011,13,0.188,16,1.912,21,1.006,75,0.007,76,0.007,80,1.602,83,0.671,84,1.492,86,0.737,89,0.546,90,2.423,91,2.515,92,3.716,93,3.867,113,1.866,123,2.065,128,4.024,129,2.716,130,2.123,134,2.123,135,0.495,136,1.568,138,1.124,139,2.558,140,2.558,142,3.798,196,3.222,215,2.1,219,1.383,311,1.621,312,1.821,313,1.676,314,1.676,315,1.676,319,3.299,320,3.382,322,1.621,325,1.53,350,1.676,351,2.266,352,1.934,353,1.426,354,2.927,355,1.676,356,1.676,357,1.621,358,1.264,359,1.676,360,1.621,361,1.676,362,1.621,363,1.518,364,1.676,365,1.426,366,1.471,367,1.471,368,2.344,369,2.83,370,2.927,371,1.621,372,1.676,373,1.621,374,1.676,375,1.518,376,1.621,377,1.621,378,1.676,379,1.621,380,1.568,381,1.676,382,1.621,383,1.676,384,1.621,385,1.518,386,1.621,387,1.621,388,1.621,389,1.568,390,1.621,391,1.676,406,1.258,423,1.607,427,2.144,428,1.251,441,1.064,488,3.075,489,2.018,495,2.199,552,3.674,574,3.386,761,3.222,798,3.722,1118,3.798,1224,3.254,1345,3.577,1672,7.713,1673,6.768,1674,3.144,1675,5.07,1676,6.363,1677,4.064,1678,6.89,1679,5.518,1680,5.518,1681,5.518,1682,5.518,1683,3.946,1684,5.518,1685,8.324,1686,3.946,1687,5.518,1688,3.946,1689,5.518,1690,3.946,1691,5.518,1692,3.946,1693,3.946,1694,3.946,1695,3.462,1696,3.946,1697,3.144,1698,3.946,1699,3.946,1700,6.89,1701,3.946,1702,3.946,1703,3.946,1704,3.946,1705,3.946,1706,3.946,1707,3.946,1708,5.518,1709,6.046,1710,5.518,1711,4.842]],["title/interfaces/MusicbrainzReleaseGroup.html",[0,0.061,734,2.827]],["body/interfaces/MusicbrainzReleaseGroup.html",[0,0.101,2,0.861,3,0.195,4,0.195,5,0.12,7,0.208,8,0.492,10,0.79,11,0.424,12,0.011,13,0.208,19,1.186,22,1.394,75,0.007,76,0.007,77,1.394,82,1.479,83,0.689,86,0.813,89,0.601,101,1.848,102,1.436,135,0.546,138,1.529,144,1.685,151,1.909,158,1.779,185,2.37,189,4.194,199,2.952,215,2.21,217,2.751,219,2.517,225,2.845,226,2.481,230,1.394,260,2.671,321,1.173,358,1.394,392,1.011,428,1.071,493,1.242,631,1.394,694,2.791,703,1.622,716,3.826,717,1.572,718,2.994,719,2.994,720,2.138,721,2.994,723,2.319,724,2.225,725,2.994,726,2.82,727,2.82,728,3.425,729,2.2,730,1.729,731,2.138,732,2.225,733,2.319,734,4.342,735,3.422,736,5.019,737,4.409,738,2.82,739,4.062,740,2.994,741,2.994,742,2.671,743,2.82,744,2.82,745,2.319,746,2.671,747,2.225,748,2.319,749,2.319,750,2.994,751,2.994,752,2.994,753,2.319,754,2.497,755,2.225,756,3.018,757,4.062,758,2.994,759,2.994,760,3.147,761,2.54,762,2.994,763,2.994,764,2.994,765,2.994,766,2.994,767,2.994,768,3.147,769,4.062,770,2.994,771,2.994,772,2.671,773,2.994,774,2.994,775,2.994,776,2.994,777,4.062,778,2.994,779,2.994,780,1.848,781,2.994,782,2.994,783,2.424,784,2.994,785,2.994,786,2.994]],["title/interfaces/MusicbrainzResponse.html",[0,0.061,738,2.827]],["body/interfaces/MusicbrainzResponse.html",[0,0.101,2,0.874,3,0.198,4,0.198,5,0.121,7,0.211,8,0.498,10,1.226,11,0.378,12,0.011,13,0.211,19,1.145,22,1.416,75,0.007,76,0.007,77,1.416,82,1.502,83,0.691,86,0.826,89,0.611,101,1.877,102,1.458,135,0.554,138,1.537,144,1.703,151,1.917,158,1.784,185,1.458,189,2.58,199,2.964,215,2.228,217,2.773,219,2.533,225,2.868,226,2.492,230,1.416,260,2.713,321,1.192,358,1.416,392,1.021,493,1.261,631,1.416,694,2.821,703,1.647,716,3.866,717,1.597,718,3.041,719,3.041,720,2.171,721,3.041,723,2.356,724,2.26,725,3.041,726,2.864,727,2.864,728,3.453,729,2.223,730,1.756,731,2.171,732,2.26,733,2.356,734,4.686,735,2.719,736,5.042,737,2.713,738,3.866,739,5.196,740,4.975,741,3.041,742,2.713,743,2.864,744,2.864,745,2.356,746,2.713,747,2.26,748,2.356,749,2.356,750,3.041,751,3.041,752,3.041,753,2.356,754,2.517,755,2.26,756,3.05,757,4.105,758,3.041,759,3.041,760,3.18,761,2.58,762,3.041,763,3.041,764,3.041,765,3.041,766,3.041,767,3.041,768,3.18,769,4.105,770,3.041,771,3.041,772,2.713,773,3.041,774,3.041,775,3.041,776,3.041,777,4.105,778,3.041,779,3.041,780,1.877,781,3.041,782,3.041,783,2.45,784,3.041,785,3.041,786,3.041]],["title/injectables/MusicbrainzService.html",[392,0.747,746,2.677]],["body/injectables/MusicbrainzService.html",[0,0.101,3,0.197,4,0.197,5,0.121,7,0.21,10,0.8,11,0.279,12,0.011,13,0.21,19,1.145,22,1.412,75,0.007,76,0.007,77,1.412,80,0.897,82,1.498,83,0.691,86,0.824,89,0.609,101,1.872,102,1.454,135,0.553,138,1.536,144,1.7,151,1.915,158,1.784,185,1.454,189,2.573,199,2.962,215,2.489,217,2.769,219,2.53,225,2.864,226,2.49,230,1.412,260,2.706,321,1.189,325,0.897,358,1.412,392,1.019,394,1.751,406,1.357,423,0.977,427,1.371,428,0.8,493,1.258,631,1.412,694,2.816,703,1.643,716,3.859,717,2.151,718,3.033,719,3.033,720,2.166,721,3.033,723,2.35,724,2.254,725,3.033,726,2.857,727,2.857,728,3.448,729,2.692,730,1.751,731,2.166,732,2.254,733,2.35,734,3.859,735,2.714,736,4.371,737,2.706,738,2.857,739,4.098,740,3.033,741,3.033,742,2.706,743,2.857,744,2.857,745,2.35,746,3.655,747,2.254,748,2.35,749,2.35,750,3.033,751,3.033,752,3.033,753,3.175,754,2.692,755,2.254,756,3.045,757,4.098,758,3.033,759,3.033,760,3.175,761,2.573,762,3.033,763,3.033,764,3.033,765,3.033,766,3.033,767,3.033,768,3.175,769,4.098,770,3.033,771,3.033,772,2.706,773,3.033,774,3.033,775,3.033,776,3.033,777,4.098,778,3.033,779,3.033,780,1.872,781,3.033,782,3.033,783,2.445,784,3.033,785,3.033,786,3.033,798,2.084,1365,5.224,1712,4.407]],["title/injectables/NativeBrowserFileLoaderService.html",[392,0.747,847,3.474]],["body/injectables/NativeBrowserFileLoaderService.html",[0,0.062,3,0.199,4,0.199,5,0.219,7,0.212,8,0.499,10,0.806,11,0.281,12,0.011,13,0.212,25,2.303,41,2.458,75,0.007,76,0.007,83,0.658,86,0.83,89,0.614,90,2.727,91,2.025,92,2.594,93,2.369,101,1.887,102,1.466,135,0.557,138,0.904,139,2.879,140,2.879,151,1.919,158,1.715,215,2.76,217,1.824,219,2.837,225,1.887,226,1.918,256,2.272,321,1.198,325,1.475,331,2.183,392,1.025,394,1.765,406,1.364,423,1.5,428,1.087,443,2.831,493,1.268,529,2.369,631,1.918,677,2.727,735,2.728,754,2.819,835,3.539,836,2.727,837,2.369,838,3.539,839,3.271,840,5.205,841,5.205,842,2.727,843,4.037,844,2.727,845,4.649,846,3.057,847,4.769,848,4.985,849,4.696,850,5.772,851,3.897,852,5.94,853,3.897,854,5.94,855,3.897,856,4.986,857,3.897,858,3.897,859,3.897,860,3.897,861,5.335,862,3.897,863,3.675,864,3.539,865,3.897,866,3.897,867,3.897,868,3.539,869,3.539,870,3.897,871,3.897,872,3.897,873,3.539,874,3.897,875,3.539,876,3.897,877,3.897,878,3.897,879,3.897,880,3.539,881,3.057,882,5.94,883,4.769,884,3.539,885,3.897,886,3.897,887,3.897,1370,6.356,1713,4.442,1714,4.442,1715,4.442,1716,4.442]],["title/interfaces/OscVisualizerOptions.html",[0,0.061,309,2.23]],["body/interfaces/OscVisualizerOptions.html",[0,0.116,2,0.991,3,0.224,4,0.224,5,0.138,7,0.239,8,0.54,10,1.599,11,0.498,12,0.011,13,0.407,18,3.201,19,1.05,22,1.604,25,2.763,75,0.008,76,0.008,265,2.789,266,2.789,267,3.731,268,2.922,269,2.922,270,2.922,271,2.669,272,2.56,273,2.669,274,2.669,275,2.669,276,2.669,277,2.669,278,2.669,279,2.669,280,2.789,281,2.789,282,2.56,283,3.453,284,3.312,285,3.312,286,3.312,287,2.56,288,4.021,289,2.669,290,2.848,291,2.848,292,3.312,293,2.669,294,2.669,295,2.56,296,2.789,297,2.922,298,2.459,299,3.528,300,2.669,301,2.459,302,4.231,303,3.063,304,2.669,305,3.312,306,3.591,307,3.81,308,2.367,309,3.672,310,4.083]],["title/interfaces/OsciloscopeConfig.html",[0,0.061,287,2.23]],["body/interfaces/OsciloscopeConfig.html",[0,0.117,2,1.013,3,0.229,4,0.229,5,0.141,7,0.244,8,0.548,10,1.602,11,0.485,12,0.011,13,0.408,18,2.884,19,1.059,22,1.64,25,2.528,75,0.008,76,0.008,265,2.853,266,2.853,267,3.763,268,2.989,269,2.989,270,2.989,271,2.73,272,2.618,273,2.73,274,2.73,275,2.73,276,2.73,277,2.73,278,2.73,279,2.73,280,2.853,281,2.853,282,2.618,283,3.504,284,3.361,285,3.361,286,3.361,287,3.361,288,4.05,289,2.73,290,2.89,291,2.89,292,3.361,293,2.73,294,2.73,295,2.618,296,2.853,297,2.989,298,2.516,299,3.566,300,2.73,301,2.516,302,4.044,303,3.108,304,2.73,305,3.361,306,3.622,307,3.622,308,2.421,309,3.361,310,3.763]],["title/components/PlayerComponent.html",[84,1.022,371,1.791]],["body/components/PlayerComponent.html",[3,0.107,4,0.107,5,0.186,7,0.114,8,0.316,10,1.475,11,0.428,12,0.011,13,0.114,16,1.982,19,0.651,21,1.587,34,1.465,35,3.821,37,1.393,39,2.18,59,2.11,70,1.465,75,0.005,76,0.005,80,1.51,83,0.706,84,1.104,85,2.859,86,0.446,87,3.468,89,0.33,107,1.901,108,3.291,109,1.643,111,1.272,113,1.129,123,0.966,130,1.457,132,1.791,134,1.457,135,0.299,136,0.948,137,1.791,138,1.191,143,2.607,144,1.932,158,1.341,215,2.484,216,1.757,219,1.327,272,1.22,311,0.98,312,1.25,313,1.014,314,1.014,315,1.014,317,2.455,318,2.455,319,3.07,320,3.123,322,0.98,324,2.071,325,1.635,327,1.547,350,1.014,351,1.556,352,1.327,353,0.862,354,2.278,355,1.014,356,1.014,357,2.202,358,1.214,359,1.014,360,0.98,361,1.014,362,2.202,363,1.457,364,1.014,365,0.862,366,0.89,367,0.89,368,1.609,369,0.98,370,2.278,371,2.202,372,1.014,373,2.202,374,1.014,375,0.918,376,0.98,377,0.98,378,1.014,379,0.98,380,0.948,381,1.014,382,0.98,383,1.014,384,0.98,385,0.918,386,2.202,387,0.98,388,0.98,389,0.948,390,0.98,391,1.014,393,2.742,405,1.901,406,0.863,423,1.69,427,2.106,428,1.297,436,3.131,441,2.179,443,1.129,529,1.272,631,1.214,651,4.271,677,1.465,715,2.212,799,2.094,802,3.468,817,2.094,827,3.475,837,2.02,842,2.891,844,1.465,845,2.212,846,1.643,856,3.69,890,3.752,897,2.325,900,1.547,902,1.901,907,2.325,929,2.094,934,3.053,935,1.643,978,1.547,1023,2.455,1090,1.465,1142,1.757,1143,1.547,1144,1.757,1146,1.465,1155,2.325,1223,2.891,1224,2.408,1535,3.018,1717,2.386,1718,2.607,1719,4.132,1720,3.752,1721,4.709,1722,3.752,1723,3.787,1724,3.787,1725,4.709,1726,5.847,1727,3.787,1728,3.787,1729,3.787,1730,3.787,1731,3.787,1732,5.361,1733,3.787,1734,3.787,1735,3.323,1736,3.323,1737,5.361,1738,4.704,1739,4.704,1740,3.787,1741,3.787,1742,2.386,1743,3.787,1744,2.386,1745,3.787,1746,2.386,1747,2.386,1748,3.787,1749,2.386,1750,2.386,1751,3.787,1752,2.386,1753,3.787,1754,2.386,1755,3.787,1756,2.386,1757,3.787,1758,2.386,1759,2.386,1760,2.386,1761,2.386,1762,2.386,1763,2.386,1764,3.787,1765,2.386,1766,2.386,1767,3.787,1768,2.386,1769,1.901,1770,2.094,1771,2.386,1772,2.094,1773,2.094,1774,2.789,1775,2.094,1776,1.901,1777,1.901,1778,2.094,1779,2.386,1780,2.386,1781,2.386,1782,2.094,1783,2.094,1784,2.386,1785,2.094,1786,2.386,1787,2.386,1788,2.386,1789,2.386,1790,2.386,1791,3.787,1792,2.386,1793,3.787,1794,2.386,1795,2.386,1796,2.386,1797,2.386,1798,2.386,1799,2.386,1800,2.386,1801,2.386,1802,3.787,1803,2.386,1804,3.787,1805,4.709,1806,2.386,1807,2.386,1808,2.386,1809,2.386,1810,2.386,1811,2.386,1812,2.386,1813,3.787,1814,2.386,1815,3.787,1816,2.386,1817,2.386,1818,2.386,1819,2.386,1820,2.386,1821,2.386,1822,3.787,1823,2.386,1824,2.386,1825,3.787,1826,2.386,1827,2.386,1828,2.386,1829,2.094,1830,3.787,1831,2.386,1832,2.386,1833,2.386,1834,5.361,1835,2.386,1836,2.386,1837,2.386,1838,2.386,1839,1.901,1840,2.386,1841,2.386,1842,2.386,1843,2.386,1844,2.386,1845,2.386,1846,2.386,1847,2.386,1848,2.386,1849,2.386,1850,2.386,1851,2.386,1852,2.386,1853,2.386,1854,2.386,1855,2.386,1856,2.386,1857,3.323,1858,3.323,1859,3.323,1860,3.323,1861,3.787,1862,3.787,1863,3.787,1864,2.212,1865,3.787,1866,3.634]],["title/injectables/PlayerService.html",[108,2.677,392,0.747]],["body/injectables/PlayerService.html",[3,0.102,4,0.102,5,0.144,7,0.109,8,0.306,10,1.308,11,0.422,12,0.011,13,0.109,16,1.85,21,1.753,39,2.392,41,2.15,43,1.082,75,0.005,76,0.005,77,0.733,80,1.306,83,0.626,85,3.258,86,0.428,88,2.166,89,0.316,91,1.043,95,3.101,96,1.275,108,2.249,123,0.584,128,2.139,129,1.575,135,0.287,138,1.493,142,1.575,144,2.316,147,4.171,149,4.563,151,1.895,157,0.881,158,1.748,185,0.755,199,2.278,215,2.713,219,2.611,226,0.733,239,1.823,240,1.823,256,1.171,290,2.687,291,2.687,298,2.573,321,0.617,324,2.015,325,1.667,332,2.375,333,1.686,342,1.686,392,0.627,393,1.874,394,0.91,397,3.373,406,0.835,423,1.711,427,1.997,428,1.248,436,2.675,439,3.649,441,2.009,443,2.476,488,2.041,489,1.171,493,0.653,495,1.275,529,1.22,631,1.468,651,4.171,699,2.918,713,2.375,714,1.484,715,1.336,754,1.952,837,1.953,842,1.405,843,3.192,844,1.405,845,2.139,846,1.575,863,1.405,868,1.823,897,1.405,900,1.484,907,2.249,1246,2.008,1351,1.484,1398,3.214,1426,2.522,1440,5.025,1464,2.522,1466,1.823,1476,2.008,1485,2.522,1490,1.823,1495,3.214,1524,3.214,1735,3.214,1736,3.214,1738,4.594,1739,4.594,1785,2.008,1864,1.336,1866,2.675,1867,2.008,1868,4.58,1869,4.019,1870,3.663,1871,4.58,1872,4.58,1873,3.663,1874,5.235,1875,3.663,1876,4.58,1877,5.235,1878,4.58,1879,3.663,1880,3.663,1881,2.289,1882,2.289,1883,2.289,1884,3.663,1885,2.289,1886,3.649,1887,2.289,1888,2.289,1889,2.289,1890,3.663,1891,2.289,1892,2.289,1893,3.663,1894,2.289,1895,5.235,1896,3.663,1897,2.289,1898,2.289,1899,2.289,1900,3.663,1901,2.289,1902,3.663,1903,2.289,1904,2.289,1905,2.289,1906,2.289,1907,3.663,1908,3.663,1909,3.663,1910,2.289,1911,2.289,1912,2.289,1913,6.416,1914,5.235,1915,3.663,1916,3.663,1917,2.289,1918,3.663,1919,2.289,1920,3.663,1921,2.289,1922,2.289,1923,3.663,1924,2.289,1925,1.686,1926,2.522,1927,2.289,1928,2.289,1929,2.289,1930,1.823,1931,1.686,1932,1.686,1933,2.289,1934,2.289,1935,1.823,1936,1.823,1937,3.663,1938,2.289,1939,4.58,1940,2.289,1941,2.289,1942,2.289,1943,2.289,1944,3.663,1945,2.289,1946,2.289,1947,2.289,1948,2.289,1949,2.289,1950,2.289,1951,2.289,1952,2.289,1953,2.289,1954,3.663,1955,2.289,1956,3.214,1957,2.289,1958,2.008,1959,2.289,1960,3.663,1961,2.289,1962,2.289,1963,2.289,1964,2.289,1965,2.289,1966,2.289,1967,2.289,1968,2.289,1969,2.289,1970,2.289,1971,2.289,1972,2.289,1973,2.289,1974,2.289,1975,2.289,1976,2.289,1977,2.289,1978,2.289,1979,2.289,1980,2.289,1981,2.289,1982,2.289,1983,2.289,1984,2.289,1985,2.289,1986,2.289,1987,2.289,1988,3.663,1989,2.289,1990,3.663,1991,2.289,1992,2.289,1993,2.289,1994,2.289,1995,2.008,1996,2.289,1997,2.289,1998,2.289,1999,2.289,2000,5.235,2001,2.289,2002,2.008,2003,2.289,2004,4.58,2005,2.289,2006,2.289,2007,3.663,2008,2.289,2009,2.289,2010,3.663,2011,2.289,2012,2.289,2013,2.289,2014,2.289,2015,2.008,2016,2.289,2017,5.235,2018,2.289,2019,2.289,2020,2.289,2021,2.289,2022,2.289,2023,3.663,2024,2.289,2025,2.289,2026,2.289,2027,3.663,2028,2.289,2029,2.289,2030,3.153,2031,2.289,2032,2.289,2033,2.289,2034,2.289,2035,2.289,2036,2.008,2037,3.649,2038,3.649,2039,2.289,2040,2.289,2041,1.823,2042,2.008,2043,2.289,2044,2.289,2045,2.289,2046,2.289]],["title/components/PlaylistComponent.html",[84,1.022,373,1.791]],["body/components/PlaylistComponent.html",[3,0.107,4,0.107,5,0.147,7,0.181,8,0.316,10,0.856,11,0.34,12,0.011,13,0.114,16,0.663,19,0.524,21,1.664,39,1.413,41,1.557,43,2.229,45,1.395,75,0.005,76,0.005,80,1.455,83,0.694,84,1.105,85,3.12,86,0.447,88,3.202,89,0.33,95,3.2,96,1.332,99,3.055,100,1.549,108,3.294,109,1.645,111,1.274,113,1.13,114,3.755,115,3.755,116,3.755,117,1.904,118,3.755,119,1.76,120,1.222,123,1.202,125,3.755,126,2.792,127,1.76,128,3.133,129,1.645,130,1.459,132,1.793,134,1.459,135,0.3,136,0.95,138,1.093,142,2.61,143,2.61,144,2.04,151,1.959,157,1.459,158,1.571,185,1.251,196,1.395,215,1.556,263,3.021,311,0.982,312,1.251,313,1.015,314,1.015,315,1.015,317,2.458,318,2.458,319,3.071,320,3.124,322,0.982,324,2.073,325,1.511,327,1.549,350,1.015,351,1.557,352,1.329,353,0.864,354,2.279,355,1.015,356,1.015,357,0.982,358,0.766,359,1.015,360,0.982,361,1.015,362,0.982,363,0.92,364,1.015,365,0.864,366,0.891,367,0.891,368,1.611,369,0.982,370,2.279,371,0.982,372,1.015,373,2.204,374,1.015,375,0.92,376,0.982,377,0.982,378,1.015,379,0.982,380,0.95,381,1.015,382,0.982,383,1.015,384,0.982,385,0.92,386,0.982,387,0.982,388,0.982,389,2.132,390,0.982,391,1.015,393,2.744,403,4.275,406,0.864,423,1.189,427,1.67,428,0.974,441,1.761,474,1.76,528,1.76,574,2.637,743,1.549,754,1.413,772,2.328,819,4.708,883,3.021,897,2.328,900,1.549,980,2.097,986,3.327,1007,3.327,1008,3.327,1015,1.76,1146,1.467,1223,2.894,1224,2.411,1231,1.904,1295,3.327,1405,3.327,1425,3.327,1426,4.66,1485,3.693,1487,1.904,1488,4.136,1490,1.904,1570,1.904,1722,3.755,1869,3.327,1886,5.693,1925,1.76,1930,1.904,1931,1.76,1932,1.76,1935,1.904,1936,1.904,1995,3.327,2002,2.097,2015,3.327,2047,2.39,2048,4.136,2049,4.713,2050,4.713,2051,4.713,2052,3.791,2053,3.791,2054,4.713,2055,4.713,2056,6.526,2057,3.951,2058,3.791,2059,3.791,2060,2.39,2061,5.365,2062,2.39,2063,5.365,2064,2.39,2065,3.791,2066,2.39,2067,2.39,2068,2.39,2069,5.365,2070,3.791,2071,3.791,2072,3.791,2073,3.791,2074,3.791,2075,3.791,2076,3.791,2077,3.791,2078,2.39,2079,2.39,2080,2.39,2081,3.791,2082,2.39,2083,2.39,2084,3.327,2085,2.39,2086,2.097,2087,2.39,2088,2.39,2089,2.097,2090,2.39,2091,2.097,2092,2.39,2093,2.097,2094,2.39,2095,2.39,2096,5.464,2097,2.39,2098,4.136,2099,6.973,2100,4.713,2101,2.39,2102,2.39,2103,2.39,2104,3.791,2105,2.39,2106,3.791,2107,2.097,2108,2.39,2109,2.39,2110,3.791,2111,2.39,2112,3.327,2113,2.39,2114,1.904,2115,4.713,2116,2.39,2117,2.097,2118,2.097,2119,2.097,2120,2.39,2121,2.097,2122,3.791,2123,2.39,2124,2.39,2125,2.39,2126,1.395,2127,2.097,2128,2.39,2129,2.39,2130,2.39,2131,4.713,2132,2.39,2133,5.365,2134,2.39,2135,2.39,2136,3.327,2137,2.39,2138,2.39,2139,2.39,2140,3.791,2141,3.791,2142,4.713,2143,2.39,2144,2.39,2145,3.791,2146,2.39,2147,2.39,2148,3.327,2149,2.39,2150,4.713,2151,2.39,2152,2.39,2153,3.791,2154,3.755,2155,3.791,2156,2.39,2157,4.713,2158,2.39,2159,1.904,2160,1.904,2161,3.791,2162,2.39,2163,2.39,2164,3.791,2165,2.39,2166,2.39,2167,3.791,2168,3.791,2169,3.791,2170,3.791,2171,5.365,2172,3.327,2173,3.791,2174,3.791,2175,3.791]],["title/components/PromptDialogComponent.html",[84,1.022,375,1.678]],["body/components/PromptDialogComponent.html",[0,0.064,3,0.206,4,0.206,5,0.169,7,0.22,8,0.512,12,0.011,13,0.293,16,1.702,19,0.953,21,1.564,75,0.008,76,0.008,80,1.497,83,0.6,84,1.616,86,0.861,89,0.637,113,2.179,123,1.564,130,2.36,134,2.36,135,0.578,136,1.831,185,1.52,230,2.209,311,1.892,312,2.024,313,1.957,314,1.957,315,1.957,319,3.354,320,3.444,322,1.892,325,1.497,350,1.957,351,2.519,352,2.149,353,1.665,354,3.123,355,1.957,356,1.957,357,1.892,358,1.476,359,1.957,360,1.892,361,1.957,362,1.892,363,1.772,364,1.957,365,1.665,366,1.717,367,1.717,368,2.606,369,1.892,370,3.123,371,1.892,372,1.957,373,1.892,374,1.957,375,2.828,376,3.144,377,1.892,378,1.957,379,1.892,380,1.831,381,1.957,382,1.892,383,1.957,384,1.892,385,1.772,386,1.892,387,1.892,388,1.892,389,1.831,390,1.892,391,1.957,406,1.398,423,1.359,441,1.654,576,5.103,928,5.638,1148,2.828,1149,2.69,1158,3.581,1164,4.233,1219,3.392,1220,3.392,1221,5.078,1224,3.526,1226,4.517,1227,4.517,1228,4.517,1234,4.042,1333,2.69,2176,6.717,2177,6.717,2178,6.45,2179,4.606,2180,4.606,2181,4.606,2182,3.392,2183,3.67,2184,4.042,2185,4.042,2186,6.133,2187,6.133,2188,6.133]],["title/interfaces/PromptDialogData.html",[0,0.061,2182,3.211]],["body/interfaces/PromptDialogData.html",[0,0.082,2,1.156,3,0.261,4,0.261,5,0.16,7,0.279,8,0.595,11,0.488,12,0.011,13,0.341,19,1.193,75,0.009,76,0.009,83,0.67,84,1.673,86,1.092,89,0.808,113,2.762,130,2.247,134,2.247,135,0.733,185,2.649,230,1.872,319,2.247,320,2.321,375,2.247,376,2.931,576,3.786,928,4.301,1148,3.586,1149,3.41,1158,3.41,1164,3.586,1219,4.301,1220,4.301,1221,5.256,1224,3.65,1226,4.301,1227,4.301,1228,4.301,1333,4.688,2176,5.125,2177,5.125,2178,5.125,2182,5.256,2183,6.396,2184,5.125,2185,5.125]],["title/interfaces/RemoteCoverPicture.html",[0,0.061,82,1.483]],["body/interfaces/RemoteCoverPicture.html",[0,0.116,2,1.172,3,0.265,4,0.265,5,0.213,7,0.283,8,0.601,11,0.456,12,0.011,13,0.394,19,1.208,75,0.009,76,0.009,82,2.448,83,0.515,226,1.898,698,3.459,703,2.208,704,3.029,717,2.14,729,2.683,730,2.354,735,3.281,780,3.427,783,3.313,787,5.514,788,4.077,789,3.84,790,3.158,791,3.84,792,3.84,793,3.84,794,3.84,795,3.84,796,3.636,797,3.636,798,2.801]],["title/components/SettingsComponent.html",[84,1.022,377,1.791]],["body/components/SettingsComponent.html",[3,0.232,4,0.232,5,0.182,12,0.011,13,0.248,21,1.324,75,0.008,76,0.008,80,1.567,83,0.669,84,1.712,89,0.718,123,1.863,130,2.551,132,3.136,134,2.551,135,0.651,136,2.063,311,2.132,312,2.188,313,2.205,314,2.205,315,2.205,319,3.392,320,3.488,322,2.132,350,2.205,351,2.723,352,2.323,353,1.876,354,3.27,355,2.205,356,2.205,357,2.132,358,1.663,359,2.205,360,2.132,361,2.205,362,2.132,363,1.997,364,2.205,365,1.876,366,1.935,367,1.935,368,2.816,369,3.161,370,3.27,371,2.132,372,2.205,373,2.132,374,2.205,375,1.997,376,2.132,377,3.161,378,2.205,379,2.132,380,2.063,381,2.205,382,3.161,383,2.816,384,3.161,385,2.551,386,2.132,387,2.132,388,2.132,389,2.063,390,2.132,391,2.205,552,3.535,1673,4.554,1677,4.882,2189,5.19,2190,6.629,2191,4.554,2192,7.304,2193,4.554]],["title/components/ShellComponent.html",[84,1.022,322,1.791]],["body/components/ShellComponent.html",[3,0.174,4,0.174,5,0.15,7,0.186,8,0.457,11,0.247,12,0.011,13,0.186,16,1.082,19,0.874,21,1.841,75,0.007,76,0.007,80,1.47,83,0.727,84,1.482,86,0.729,89,0.539,99,4.099,100,2.528,102,1.287,111,2.08,113,1.845,120,1.995,121,4.031,122,2.872,123,1.396,126,2.872,130,2.106,132,2.589,134,2.106,135,0.489,136,1.55,138,1.288,141,3.107,144,2.137,166,2.173,229,3.196,311,1.602,312,1.806,313,1.657,314,1.657,315,1.657,319,3.295,320,3.377,322,2.816,325,1.47,350,1.657,351,2.248,352,1.918,353,1.409,354,2.913,355,1.657,356,1.657,357,1.602,358,1.25,359,1.657,360,1.602,361,1.657,362,1.602,363,1.501,364,1.657,365,1.409,366,1.454,367,1.454,368,2.325,369,1.602,370,2.913,371,1.602,372,1.657,373,1.602,374,1.657,375,1.501,376,1.602,377,1.602,378,1.657,379,1.602,380,1.55,381,1.657,382,1.602,383,1.657,384,1.602,385,1.501,386,1.602,387,1.602,388,1.602,389,1.55,390,1.602,391,1.657,406,1.248,423,0.864,427,1.214,428,0.708,441,1.948,443,3.242,552,2.918,889,4.361,1151,3.767,1223,3.882,1224,3.234,1446,3.422,1447,5.049,1449,4.802,1718,3.767,1719,5.548,1774,5.049,1775,3.422,1778,3.422,1782,4.802,1931,2.872,1932,2.872,2048,5.548,2086,3.422,2089,3.422,2194,3.9,2195,5.473,2196,6.323,2197,6.323,2198,5.473,2199,5.473,2200,7.486,2201,5.548,2202,5.473,2203,5.473,2204,7.22,2205,3.9,2206,3.422,2207,5.473,2208,5.473,2209,3.9,2210,3.9,2211,5.473,2212,3.9,2213,3.9,2214,5.473,2215,3.9,2216,3.9,2217,3.9,2218,3.9,2219,5.473,2220,3.9,2221,3.9,2222,3.9,2223,3.9,2224,3.9,2225,3.9,2226,3.9,2227,3.9,2228,3.9,2229,3.9,2230,3.9,2231,3.9,2232,3.9,2233,6.855,2234,5.473]],["title/components/SlidePanelComponent.html",[84,1.022,379,1.791]],["body/components/SlidePanelComponent.html",[3,0.138,4,0.138,5,0.127,7,0.147,8,0.385,11,0.476,12,0.011,13,0.147,16,1.536,19,1.017,21,1.919,22,1.773,75,0.006,76,0.006,80,1.251,83,0.572,84,1.297,89,0.427,111,1.646,113,1.46,123,1.178,130,1.777,132,2.184,134,1.777,135,0.387,136,1.226,137,2.184,144,1.58,311,1.268,312,1.524,313,1.311,314,1.311,315,1.311,319,3.198,320,3.266,322,1.268,325,1.637,350,1.311,351,1.897,352,1.619,353,1.115,354,2.61,355,1.311,356,1.311,357,1.268,358,0.989,359,1.311,360,1.268,361,1.311,362,1.268,363,1.187,364,1.311,365,1.115,366,1.15,367,1.15,368,1.962,369,1.268,370,2.61,371,1.268,372,1.311,373,1.268,374,1.311,375,1.187,376,1.268,377,1.268,378,1.311,379,2.523,380,3.222,381,1.311,382,1.268,383,1.311,384,1.268,385,1.187,386,1.268,387,1.268,388,1.268,389,1.226,390,1.268,391,1.311,406,1.053,423,1.024,441,2.03,443,3.48,529,3.816,631,2.455,633,2.273,816,5.075,928,5.97,1146,1.895,1210,4.076,1223,3.398,1224,2.83,1720,4.409,1722,4.409,1777,2.459,1864,2.697,1866,3.587,2030,4.752,2098,4.856,2159,4.409,2235,7.113,2236,8.106,2237,3.086,2238,5.534,2239,5.643,2240,4.618,2241,4.618,2242,5.534,2243,5.534,2244,4.856,2245,6.143,2246,6.143,2247,3.68,2248,5.534,2249,6.578,2250,7.156,2251,5.534,2252,4.618,2253,4.618,2254,4.618,2255,3.086,2256,6.143,2257,3.086,2258,3.086,2259,6.903,2260,5.391,2261,3.086,2262,3.086,2263,3.086,2264,3.086,2265,4.618,2266,4.618,2267,3.086,2268,3.086,2269,3.086,2270,4.618,2271,4.618,2272,4.618,2273,4.618,2274,6.903,2275,7.156,2276,6.457,2277,2.708,2278,2.708,2279,3.086,2280,3.086,2281,6.903,2282,6.578,2283,6.903,2284,3.086,2285,3.086,2286,3.086,2287,3.086,2288,3.086,2289,2.708,2290,2.708,2291,3.086,2292,3.086,2293,3.086,2294,3.086,2295,3.086,2296,3.086,2297,5.534,2298,6.143,2299,6.143]],["title/components/StorageSettingsComponent.html",[84,1.022,382,1.791]],["body/components/StorageSettingsComponent.html",[3,0.222,4,0.222,5,0.177,7,0.237,12,0.011,13,0.237,16,1.376,75,0.008,76,0.008,80,1.541,83,0.658,84,1.676,86,0.927,89,0.686,91,2.261,113,2.346,123,1.642,130,2.477,134,2.477,135,0.622,136,1.971,138,1.01,311,2.037,312,2.125,313,2.107,314,2.107,315,2.107,319,3.378,320,3.472,322,2.037,325,1.01,350,2.107,351,2.645,352,2.256,353,1.792,354,3.215,355,2.107,356,2.107,357,2.037,358,1.589,359,2.107,360,2.037,361,2.107,362,2.037,363,1.909,364,2.107,365,1.792,366,1.849,367,1.849,368,2.735,369,2.037,370,3.215,371,2.037,372,2.107,373,2.037,374,2.107,375,1.909,376,2.037,377,2.037,378,2.107,379,2.037,380,1.971,381,2.107,382,3.108,383,3.475,384,2.037,385,1.909,386,2.037,387,2.037,388,2.037,389,1.971,390,2.037,391,2.107,406,1.468,423,1.099,488,2.764,489,2.537,495,2.764,552,4.285,553,3.653,1118,4.432,1224,3.656,1593,5.13,1674,3.952,1675,5.696,1677,4.742,1697,3.952,1711,5.65,2191,5.65,2300,6.438,2301,7.566,2302,4.352,2303,4.96]],["title/interfaces/TagsWorkerRequest.html",[0,0.061,796,2.677]],["body/interfaces/TagsWorkerRequest.html",[0,0.116,2,1.172,3,0.265,4,0.265,5,0.236,7,0.283,8,0.601,11,0.456,12,0.011,13,0.394,19,1.195,75,0.009,76,0.009,82,2.014,83,0.515,226,1.898,698,3.459,703,2.208,704,3.029,717,2.14,729,2.683,730,2.354,735,3.768,780,2.516,783,2.433,787,5.514,788,4.077,789,3.84,790,3.158,791,3.84,792,3.84,793,3.84,794,3.84,795,3.84,796,4.419,797,3.636,798,2.801]],["title/interfaces/TagsWorkerResponse.html",[0,0.061,797,2.677]],["body/interfaces/TagsWorkerResponse.html",[0,0.115,2,1.15,3,0.26,4,0.26,5,0.211,7,0.277,8,0.594,11,0.487,12,0.011,13,0.392,19,1.205,75,0.009,76,0.009,82,1.976,83,0.505,226,2.568,428,1.455,698,3.393,703,2.166,704,2.972,717,2.1,729,2.987,730,2.309,735,3.747,780,2.468,783,2.386,787,5.492,788,3.999,789,3.767,790,3.098,791,3.767,792,3.767,793,3.767,794,3.767,795,3.767,796,3.567,797,4.368,798,3.79]],["title/injectables/ThemeService.html",[332,2.827,392,0.747]],["body/injectables/ThemeService.html",[3,0.177,4,0.177,5,0.109,7,0.189,8,0.462,11,0.437,12,0.011,13,0.189,16,1.771,19,0.955,21,1.762,22,2.045,39,1.48,59,2.212,75,0.007,76,0.007,80,1.573,83,0.672,86,0.742,88,1.877,89,0.549,91,1.809,135,0.498,138,1.63,144,1.822,151,1.666,158,1.194,159,1.527,321,1.071,325,1.533,330,2.437,331,1.951,332,3.592,385,2.658,392,0.949,394,1.577,406,1.263,423,1.415,427,1.724,428,1.006,441,1.722,463,2.212,488,3.088,489,2.03,493,1.133,495,2.212,601,3.592,631,1.272,695,5.496,697,4.862,698,2.318,699,3.85,1001,3.483,1002,3.483,1010,4.862,1015,2.923,1528,4.415,1535,3.162,2304,3.969,2305,6.383,2306,7.267,2307,6.383,2308,6.908,2309,5.541,2310,5.541,2311,3.969,2312,5.541,2313,3.969,2314,4.081,2315,5.541,2316,3.969,2317,3.969,2318,5.541,2319,5.541,2320,6.908,2321,5.541,2322,3.969,2323,3.969,2324,5.601,2325,3.483,2326,3.969,2327,5.086,2328,5.086,2329,3.969,2330,3.969,2331,3.969,2332,3.969,2333,5.541,2334,3.969,2335,3.969,2336,3.969,2337,3.969,2338,3.969,2339,3.969,2340,3.969,2341,6.383,2342,5.541,2343,3.969,2344,5.541,2345,6.908,2346,3.969,2347,5.541,2348,5.541,2349,3.969,2350,3.969,2351,3.969,2352,3.969,2353,5.541,2354,3.969,2355,3.969,2356,5.541,2357,3.162,2358,3.969,2359,3.969,2360,8.478,2361,3.969,2362,3.969,2363,3.969,2364,3.969,2365,3.483,2366,3.969,2367,3.483,2368,3.969,2369,3.969,2370,3.969,2371,3.969,2372,3.969,2373,3.969,2374,3.969,2375,3.969,2376,3.969,2377,3.969,2378,3.969,2379,3.969,2380,3.969,2381,3.969,2382,3.969,2383,3.969,2384,3.969,2385,3.969,2386,3.969,2387,3.969,2388,3.969,2389,5.541,2390,3.483,2391,3.483,2392,3.969,2393,3.969,2394,3.969]],["title/components/ThemeSettingsComponent.html",[84,1.022,384,1.791]],["body/components/ThemeSettingsComponent.html",[3,0.217,4,0.217,5,0.174,7,0.231,8,0.529,11,0.307,12,0.011,13,0.231,16,1.345,18,2.52,21,1.236,75,0.008,76,0.008,80,1.585,83,0.652,84,1.657,86,0.906,89,0.67,123,1.617,130,2.44,134,2.44,135,0.608,136,1.926,311,1.99,312,2.093,313,2.059,314,2.059,315,2.059,319,3.371,320,3.463,322,1.99,325,1.291,332,4.861,333,3.569,342,4.67,350,2.059,351,2.605,352,2.222,353,1.751,354,3.186,355,2.059,356,2.059,357,1.99,358,1.553,359,2.059,360,1.99,361,2.059,362,1.99,363,1.865,364,2.059,365,1.751,366,1.806,367,1.806,368,2.694,369,1.99,370,3.186,371,1.99,372,2.059,373,1.99,374,2.059,375,1.865,376,1.99,377,1.99,378,2.059,379,1.99,380,1.926,381,2.059,382,1.99,383,2.059,384,3.08,385,3.13,386,1.99,387,1.99,388,1.99,389,1.926,390,1.99,391,2.059,406,1.445,423,1.074,427,1.508,428,0.88,441,1.307,552,3.382,574,2.381,1674,3.861,1675,5.632,1677,4.67,1697,3.861,2193,6.202,2302,4.252,2314,4.67,2357,5.052,2395,7.068,2396,7.068,2397,6.341,2398,6.341,2399,7.498,2400,4.846,2401,4.846,2402,4.846]],["title/pipes/TimePipe.html",[120,2.23,802,3.211]],["body/pipes/TimePipe.html",[3,0.27,4,0.27,5,0.166,10,1.42,11,0.382,12,0.011,13,0.288,19,1.007,75,0.009,76,0.009,80,1.593,83,0.633,89,0.835,98,3.708,120,3.725,123,1.54,135,0.758,137,2.857,158,1.302,199,2.915,325,1.23,406,1.377,423,1.339,427,1.88,428,1.097,436,3.527,441,1.629,630,6.391,631,2.602,632,5.014,633,4.448,634,5.803,635,6.862,637,5.803,802,5.364,827,4.722,1769,4.813,1770,5.3,1839,4.813,2403,6.04,2404,6.04]],["title/injectables/TitleService.html",[392,0.747,1774,3.211]],["body/injectables/TitleService.html",[3,0.271,4,0.271,5,0.166,7,0.289,8,0.608,11,0.383,12,0.011,13,0.289,16,1.679,19,1.082,21,1.543,75,0.009,76,0.009,80,1.232,83,0.634,86,1.131,88,3.702,89,0.837,135,0.759,138,1.232,144,2.234,185,2.744,321,1.632,325,1.485,330,3.715,331,2.974,392,1.249,394,2.405,406,1.662,423,1.341,427,1.883,428,1.099,441,1.632,493,1.728,1774,5.37,2405,6.051,2406,7.292,2407,7.292,2408,6.051,2409,6.051,2410,6.051,2411,6.051,2412,6.051,2413,6.051]],["title/interfaces/Track.html",[0,0.061,95,1.791]],["body/interfaces/Track.html",[0,0.109,2,1.069,3,0.241,4,0.241,5,0.232,7,0.258,8,0.567,11,0.509,12,0.011,13,0.392,19,1.177,25,2.077,75,0.008,76,0.008,77,1.73,79,3.153,81,2.761,82,2.311,83,0.647,94,3.153,95,3.056,123,2.127,124,3.5,157,2.077,185,1.782,256,4.116,290,2.375,291,2.375,428,1.234,431,3.009,463,3.009,464,3.009,465,3.009,466,3.153,467,2.879,468,3.153,469,3.153,470,3.315,471,3.315,472,3.315,551,3.315,699,3.009,700,3.716,701,4.173,702,3.315,703,2.013,704,3.476,705,4.406,706,2.879,707,5.375,708,5.217,709,3.5,710,3.5,711,2.554,712,3.716,713,3.5,714,3.5,715,3.153]],["title/interfaces/TrackMetadata.html",[0,0.061,708,2.827]],["body/interfaces/TrackMetadata.html",[0,0.105,2,0.966,3,0.218,4,0.218,5,0.195,7,0.233,8,0.532,11,0.544,12,0.011,13,0.382,19,1.222,25,1.878,75,0.008,76,0.008,77,2.41,79,4.391,81,3.846,82,2.557,83,0.617,94,2.85,95,3.204,123,1.917,124,3.164,157,2.893,185,2.482,256,3.259,290,2.147,291,2.147,428,1.552,431,2.72,463,2.72,464,2.72,465,2.72,466,2.85,467,2.603,468,2.85,469,2.85,470,2.997,471,2.997,472,2.997,551,2.997,699,2.72,700,3.36,701,4.617,702,2.997,703,1.82,704,3.846,705,4.875,706,2.603,707,4.386,708,4.875,709,4.875,710,4.875,711,3.557,712,5.176,713,4.875,714,3.164,715,2.85]],["title/injectables/UpdateService.html",[334,3.474,392,0.747]],["body/injectables/UpdateService.html",[3,0.219,4,0.219,5,0.135,7,0.234,12,0.011,13,0.234,75,0.008,76,0.008,83,0.697,86,0.916,89,0.678,101,2.083,102,1.618,135,0.615,138,1.448,151,1.714,158,1.532,159,1.886,185,1.618,196,2.863,215,2.643,230,2.278,321,1.322,324,3.127,325,1.448,334,5.091,375,1.886,392,1.094,394,1.948,406,1.456,423,1.416,443,2.319,493,1.4,576,4.883,601,4.883,631,1.571,754,2.808,849,4.883,1067,4.302,1147,3.61,1149,2.863,1158,2.863,1159,3.61,1274,3.374,1333,2.863,1573,4.302,1776,3.906,1864,2.863,1866,4.151,1925,3.61,1930,3.906,1931,3.61,1932,3.61,1935,3.906,1936,3.906,2030,4.893,2182,4.706,2183,3.906,2414,4.902,2415,7.532,2416,4.902,2417,4.902,2418,4.902,2419,6.389,2420,6.237,2421,4.302,2422,4.902,2423,4.902,2424,4.902,2425,4.902,2426,4.902,2427,4.902,2428,4.902,2429,4.902,2430,5.185,2431,6.389,2432,4.902,2433,4.902,2434,4.902,2435,4.902,2436,4.902,2437,4.902,2438,4.902,2439,4.902,2440,4.902,2441,4.902,2442,4.902,2443,4.902,2444,4.902,2445,4.902,2446,4.902,2447,4.902,2448,4.902,2449,4.902,2450,4.302,2451,4.902,2452,4.902,2453,4.902,2454,4.902]],["title/components/VisualizerComponent.html",[84,1.022,386,1.791]],["body/components/VisualizerComponent.html",[3,0.092,4,0.092,5,0.092,7,0.098,8,0.28,10,1.455,11,0.45,12,0.011,13,0.098,16,1.935,21,1.978,37,1.199,43,1.587,47,2.06,55,2.06,75,0.004,76,0.004,80,1.475,83,0.656,84,0.998,85,3.531,86,0.384,87,3.134,88,0.971,89,0.284,91,0.936,93,1.789,95,1.378,108,3.017,109,1.413,111,1.095,113,0.971,123,0.856,130,1.291,132,1.587,134,1.291,135,0.258,136,0.816,137,1.587,138,0.418,143,2.31,144,2.419,158,1.379,216,1.512,267,3.254,271,1.789,272,1.716,273,1.789,274,1.789,275,1.789,276,1.789,277,2.62,278,1.789,279,1.789,280,1.87,281,1.87,282,1.05,283,2.889,284,2.77,285,3.137,286,2.77,287,1.05,288,2.513,292,2.77,303,3.477,306,3.222,307,3.027,310,3.145,311,0.843,312,1.107,313,0.872,314,0.872,315,0.872,317,2.175,318,2.175,319,2.985,320,3.028,322,0.843,324,1.872,325,1.668,327,1.331,350,0.872,351,1.378,352,1.176,353,0.742,354,2.088,355,0.872,356,0.872,357,0.843,358,0.658,359,0.872,360,0.843,361,0.872,362,0.843,363,0.79,364,0.872,365,0.742,366,0.766,367,0.766,368,1.426,369,0.843,370,2.088,371,0.843,372,0.872,373,0.843,374,0.872,375,0.79,376,0.843,377,0.843,378,0.872,379,2.018,380,0.816,381,0.872,382,0.843,383,0.872,384,0.843,385,0.79,386,2.018,387,2.225,388,0.843,389,1.953,390,0.843,391,0.872,393,2.513,406,0.765,423,1.468,425,2.471,427,2.061,428,1.237,429,2.929,441,2.308,484,2.471,488,2.738,489,1.05,495,1.87,631,0.658,699,2.371,890,3.39,897,2.06,900,1.331,902,1.636,934,2.759,978,1.331,1023,2.175,1090,5.081,1223,2.612,1224,2.176,1334,1.96,1720,3.39,1772,1.802,1773,1.802,1776,1.636,1777,1.636,1783,1.802,1860,2.944,1864,1.96,1866,3.977,2038,2.674,2057,3.619,2084,2.944,2159,2.674,2172,2.944,2235,1.802,2239,1.512,2455,2.053,2456,4.255,2457,4.255,2458,3.356,2459,3.356,2460,3.734,2461,5.417,2462,4.255,2463,3.734,2464,3.734,2465,5.417,2466,5.417,2467,3.356,2468,3.356,2469,3.356,2470,3.356,2471,3.356,2472,3.356,2473,3.356,2474,3.356,2475,3.356,2476,3.356,2477,3.356,2478,2.053,2479,3.356,2480,2.053,2481,3.356,2482,2.053,2483,3.356,2484,2.053,2485,3.356,2486,2.053,2487,3.356,2488,2.053,2489,3.356,2490,2.053,2491,3.356,2492,2.053,2493,3.356,2494,2.053,2495,3.356,2496,3.356,2497,2.053,2498,2.944,2499,2.053,2500,3.356,2501,2.674,2502,2.053,2503,3.356,2504,3.356,2505,3.356,2506,3.356,2507,2.053,2508,3.356,2509,2.053,2510,3.356,2511,2.053,2512,3.356,2513,3.356,2514,2.053,2515,2.053,2516,3.356,2517,2.053,2518,3.356,2519,2.053,2520,3.356,2521,2.053,2522,2.053,2523,3.356,2524,3.356,2525,2.053,2526,3.356,2527,2.053,2528,2.053,2529,3.356,2530,2.053,2531,3.356,2532,3.356,2533,2.053,2534,2.053,2535,2.053,2536,2.053,2537,2.053,2538,2.053,2539,2.053,2540,3.356,2541,2.053,2542,3.356,2543,2.053,2544,3.356,2545,2.053,2546,2.053,2547,1.802,2548,2.053,2549,2.053,2550,2.053,2551,2.053,2552,2.053,2553,2.053,2554,2.053,2555,2.053,2556,2.053,2557,2.053,2558,2.053,2559,2.053,2560,2.053,2561,2.053,2562,2.053,2563,2.053,2564,2.053,2565,2.053,2566,2.053,2567,2.053,2568,2.053,2569,2.053,2570,3.356,2571,5.101,2572,2.944,2573,4.914,2574,3.356]],["title/interfaces/VisualsColorConfig.html",[0,0.061,289,2.325]],["body/interfaces/VisualsColorConfig.html",[0,0.116,2,0.983,3,0.222,4,0.222,5,0.137,7,0.237,8,0.538,10,1.598,11,0.509,12,0.011,13,0.406,18,2.843,19,1.147,22,1.592,25,2.48,75,0.008,76,0.008,265,2.768,266,2.768,267,3.72,268,2.901,269,2.901,270,2.901,271,2.649,272,2.541,273,2.649,274,2.649,275,2.649,276,2.649,277,2.649,278,2.649,279,2.649,280,2.768,281,2.768,282,2.541,283,3.437,284,3.296,285,3.296,286,3.296,287,2.541,288,3.296,289,3.437,290,3.45,291,3.45,292,4.012,293,2.649,294,2.649,295,2.541,296,2.768,297,2.901,298,2.441,299,3.516,300,2.649,301,2.441,302,3.987,303,3.048,304,2.649,305,3.296,306,3.581,307,3.581,308,2.35,309,3.296,310,3.72,428,1.459]],["title/directives/VisualsDirective.html",[353,1.576,389,1.733]],["body/directives/VisualsDirective.html",[3,0.135,4,0.135,5,0.083,7,0.144,8,0.378,10,0.547,11,0.384,12,0.011,13,0.144,16,1.513,18,2.587,21,1.547,22,2.192,39,2.262,41,2.493,43,2.145,75,0.006,76,0.006,80,0.923,83,0.474,86,0.563,89,0.416,123,0.768,135,0.378,137,2.145,138,1.522,144,2.304,151,2.015,158,1.175,159,1.745,184,3.754,199,1.69,211,2.399,230,1.747,267,1.48,282,1.54,283,2.908,284,2.789,285,2.789,286,2.789,287,1.54,288,2.789,289,1.606,290,1.994,291,1.994,292,2.319,293,3.785,294,2.908,295,3.104,296,2.527,298,1.48,299,2.228,300,1.606,301,1.48,303,1.424,304,2.418,306,2.87,307,3.455,308,1.424,310,2.982,319,1.745,324,2.399,325,1.575,353,1.638,388,1.237,389,1.802,390,1.862,393,2.319,406,1.034,419,3.613,423,1.209,425,4.794,427,1.411,428,0.823,429,4.48,441,1.637,484,3.339,513,2.218,516,1.952,573,2.073,631,1.747,632,3.121,664,2.399,699,3.627,816,4.485,827,1.952,897,1.849,900,1.952,934,3.535,953,2.642,978,1.952,1123,2.642,1274,3.754,1279,2.642,1281,2.642,1282,2.399,1334,1.758,1337,1.952,1485,3.121,1864,1.758,1866,3.544,2030,4.177,2247,3.613,2327,4.345,2328,4.345,2460,4.785,2464,4.785,2498,2.642,2501,3.613,2575,2.642,2576,6.068,2577,4.534,2578,4.534,2579,3.011,2580,4.534,2581,3.011,2582,4.534,2583,3.011,2584,4.534,2585,3.011,2586,3.011,2587,3.011,2588,4.534,2589,3.011,2590,3.011,2591,3.011,2592,3.011,2593,2.642,2594,2.642,2595,2.642,2596,2.642,2597,3.011,2598,3.011,2599,3.011,2600,3.011,2601,3.011,2602,4.534,2603,3.011,2604,3.011,2605,3.011,2606,3.011,2607,3.011,2608,3.011,2609,3.011,2610,3.011,2611,3.011,2612,7.098,2613,3.011,2614,3.011,2615,3.011,2616,3.011,2617,2.073,2618,4.534,2619,3.011,2620,3.011,2621,3.011,2622,3.011,2623,3.011,2624,3.011,2625,5.453,2626,3.011,2627,4.534,2628,4.534,2629,3.011,2630,2.642,2631,3.011,2632,6.068,2633,3.011,2634,3.011,2635,3.011,2636,3.011,2637,3.011,2638,3.011,2639,4.534,2640,3.011,2641,3.011,2642,3.011,2643,5.453,2644,6.068,2645,3.011,2646,3.011,2647,3.011,2648,3.011,2649,4.534,2650,4.534,2651,4.534,2652,5.453,2653,3.011,2654,3.011,2655,3.011,2656,3.011,2657,3.011,2658,3.011,2659,3.011,2660,3.011,2661,3.011,2662,6.228,2663,4.534,2664,4.534,2665,2.642,2666,2.642,2667,3.011,2668,3.011,2669,3.011,2670,3.011,2671,3.011,2672,4.534,2673,4.785,2674,4.534,2675,4.534,2676,3.011,2677,3.011,2678,3.011,2679,3.011,2680,3.011,2681,3.011,2682,3.011,2683,3.011,2684,3.011,2685,3.011,2686,3.011,2687,3.011,2688,4.534,2689,3.011,2690,3.011,2691,3.011,2692,2.642,2693,3.011,2694,2.642,2695,3.011,2696,3.011,2697,3.011]],["title/injectables/VisualsService.html",[392,0.747,2057,3.211]],["body/injectables/VisualsService.html",[3,0.249,4,0.249,5,0.153,7,0.266,8,0.578,11,0.353,12,0.011,13,0.266,16,1.545,21,1.42,75,0.009,76,0.009,83,0.656,86,1.041,88,2.634,89,0.77,91,2.539,135,0.698,138,1.134,144,2.154,303,3.278,306,3.734,307,3.734,310,3.88,321,1.502,325,1.411,392,1.187,394,2.213,406,1.58,423,1.234,441,1.502,488,3.862,489,2.848,493,1.59,495,3.103,1864,3.252,1866,4.743,2030,5.59,2057,5.104,2593,4.887,2698,5.569,2699,7.545,2700,7.895,2701,5.569,2702,6.93,2703,5.569,2704,8.396,2705,5.569,2706,5.569,2707,5.569]],["title/interfaces/VisualsWorkerMessage.html",[0,0.061,293,2.325]],["body/interfaces/VisualsWorkerMessage.html",[0,0.116,2,0.96,3,0.217,4,0.217,5,0.133,7,0.232,8,0.53,10,1.587,11,0.522,12,0.011,13,0.405,18,2.811,19,1.037,22,2.267,25,2.442,75,0.008,76,0.008,265,2.704,266,2.704,267,3.687,268,2.834,269,2.834,270,2.834,271,2.588,272,2.482,273,2.588,274,2.588,275,2.588,276,2.588,277,2.588,278,2.588,279,2.588,280,2.704,281,2.704,282,2.482,283,3.385,284,3.246,285,3.246,286,3.246,287,2.482,288,3.246,289,2.588,290,2.792,291,2.792,292,3.246,293,3.385,294,4.001,295,3.618,296,4.181,297,4.131,298,3.687,299,4.056,300,4.001,301,3.476,302,3.942,303,3.002,304,2.588,305,3.246,306,3.549,307,3.549,308,2.295,309,3.246,310,3.687,428,1.499]],["title/injectables/WakelockService.html",[392,0.747,1926,3.001]],["body/injectables/WakelockService.html",[3,0.256,4,0.256,5,0.157,7,0.273,8,0.588,11,0.362,12,0.011,13,0.273,75,0.009,76,0.009,83,0.498,89,0.791,135,0.718,138,1.165,158,1.518,215,2.787,217,2.35,219,2.005,225,2.431,226,1.833,321,1.543,324,3.359,325,1.623,392,1.207,394,2.274,406,1.606,423,1.562,428,1.279,436,4.115,493,1.633,1926,4.851,2708,5.721,2709,6.085,2710,7.97,2711,7.97,2712,7.047,2713,5.721,2714,5.721,2715,7.047,2716,7.637,2717,5.721,2718,5.721,2719,5.721,2720,5.721,2721,5.721,2722,5.721,2723,5.721,2724,5.721]],["title/changelog.html",[2725,2.52,2726,2.696,2727,3.212]],["body/changelog.html",[0,0.008,5,0.123,10,0.099,11,0.093,12,0.003,18,0.217,21,0.263,29,4.36,41,1.038,43,2.426,45,2.078,47,3.077,49,3.588,51,3.169,53,3.588,55,2.433,57,3.701,59,2.652,61,3.149,63,2.16,65,1.639,67,3.396,69,4.169,75,0.001,76,0.001,77,0.331,80,0.21,81,0.28,83,0.09,84,0.242,86,0.102,88,0.488,92,0.319,93,0.55,95,0.907,121,0.403,123,0.961,127,0.76,128,0.319,132,0.259,134,0.85,135,0.069,157,0.21,159,0.564,169,0.436,171,0.376,181,0.822,185,0.181,188,0.436,189,0.319,196,2.611,217,0.424,228,2.014,229,1.084,230,0.175,295,0.28,299,0.269,306,0.259,307,0.488,308,0.488,312,0.612,321,0.148,324,0.241,331,1.085,351,0.762,353,0.198,358,0.81,363,0.397,385,0.397,387,0.424,393,0.28,411,0.436,428,0.099,429,0.376,442,0.95,464,0.305,465,0.305,489,0.528,497,1.203,502,0.436,511,0.76,513,0.76,516,0.355,517,0.436,522,0.376,528,0.403,529,0.99,530,1.862,531,1.139,533,0.355,534,0.403,540,0.376,551,0.634,552,1.348,554,0.436,573,2.969,576,5.24,598,1.168,599,2.014,601,1.203,632,1.52,645,0.436,660,1.628,664,0.436,695,1.431,706,1.504,710,0.355,715,0.319,720,0.507,729,0.204,730,0.217,736,5.755,747,0.28,761,0.319,772,0.336,790,0.782,798,0.878,801,1.009,816,0.9,827,0.669,840,1.009,843,0.305,849,0.669,850,0.436,869,1.759,875,0.822,881,0.376,935,0.711,994,0.906,995,5.548,1012,0.48,1015,2.776,1065,0.822,1078,3.158,1101,1.286,1118,0.711,1143,0.355,1145,0.376,1160,0.76,1178,0.403,1183,0.376,1204,0.403,1247,0.48,1274,1.277,1282,1.168,1298,1.08,1318,0.48,1334,0.319,1358,0.355,1426,2.45,1455,0.48,1463,0.436,1487,0.822,1499,0.822,1500,0.48,1504,0.48,1518,0.48,1551,1.52,1595,0.48,1601,0.436,1645,0.48,1695,0.48,1709,0.48,1829,0.906,1857,0.48,1858,0.48,1859,0.48,1864,0.319,1886,0.436,1925,0.403,1956,1.286,1958,2.218,2037,0.436,2041,3.993,2042,1.628,2093,0.48,2096,0.48,2107,0.48,2112,1.628,2114,0.436,2117,1.286,2118,0.48,2119,0.48,2126,0.603,2127,4.053,2136,0.48,2148,0.48,2154,0.436,2160,0.436,2201,0.48,2244,0.48,2247,0.436,2276,2.218,2277,0.906,2289,0.906,2290,0.48,2314,0.403,2357,0.436,2365,3.637,2367,4.175,2390,0.48,2391,0.48,2420,0.906,2430,1.009,2450,4.398,2463,0.48,2501,4.41,2547,0.48,2571,0.48,2572,0.48,2596,0.48,2617,2.594,2630,0.48,2662,0.48,2665,3.123,2692,0.48,2694,0.48,2709,1.168,2727,1.286,2728,0.547,2729,2.82,2730,0.547,2731,0.547,2732,0.547,2733,0.547,2734,0.355,2735,0.547,2736,5.867,2737,4.619,2738,1.937,2739,2.924,2740,2.208,2741,0.547,2742,0.547,2743,4.5,2744,6.255,2745,6.531,2746,5.535,2747,2.82,2748,1.032,2749,0.547,2750,1.856,2751,0.547,2752,0.547,2753,0.822,2754,0.547,2755,0.547,2756,6.144,2757,0.48,2758,2.208,2759,0.547,2760,1.466,2761,0.547,2762,1.032,2763,0.547,2764,1.032,2765,0.547,2766,0.547,2767,0.547,2768,5.535,2769,6.144,2770,0.547,2771,0.547,2772,0.547,2773,2.208,2774,0.547,2775,1.032,2776,0.547,2777,0.547,2778,0.547,2779,0.547,2780,0.547,2781,0.547,2782,0.547,2783,0.547,2784,0.547,2785,0.547,2786,0.547,2787,3.333,2788,0.547,2789,0.547,2790,0.547,2791,0.547,2792,0.547,2793,0.547,2794,0.547,2795,0.547,2796,0.547,2797,0.547,2798,3.087,2799,0.547,2800,1.032,2801,1.937,2802,1.466,2803,0.547,2804,0.547,2805,0.547,2806,0.547,2807,0.547,2808,3.559,2809,0.547,2810,0.547,2811,0.547,2812,0.547,2813,0.547,2814,0.547,2815,0.547,2816,0.547,2817,0.547,2818,1.466,2819,5.867,2820,0.547,2821,0.547,2822,2.528,2823,4.313,2824,0.547,2825,0.547,2826,0.547,2827,0.547,2828,0.547,2829,0.547,2830,1.032,2831,0.547,2832,1.856,2833,0.547,2834,0.547,2835,0.547,2836,0.547,2837,0.547,2838,0.547,2839,0.547,2840,0.547,2841,0.547,2842,0.547,2843,0.547,2844,0.547,2845,0.547,2846,0.547,2847,0.547,2848,0.547,2849,0.547,2850,0.547,2851,0.547,2852,0.547,2853,0.547,2854,0.547,2855,0.547,2856,0.547,2857,2.208,2858,0.547,2859,0.547,2860,0.547,2861,0.547,2862,0.547,2863,0.547,2864,0.547,2865,0.547,2866,1.032,2867,0.547,2868,0.547,2869,1.937,2870,0.547,2871,1.466,2872,1.168,2873,1.466,2874,0.547,2875,0.547,2876,1.286,2877,0.547,2878,0.547,2879,1.286,2880,1.032,2881,1.032,2882,0.547,2883,0.547,2884,0.48,2885,0.547,2886,0.547,2887,0.547,2888,0.547,2889,0.547,2890,0.547,2891,0.547,2892,0.547,2893,1.032,2894,0.547,2895,0.547,2896,0.547,2897,0.547,2898,0.547,2899,0.547,2900,0.547,2901,1.032,2902,0.547,2903,0.547,2904,1.856,2905,1.466,2906,0.547,2907,0.547,2908,0.547,2909,0.547,2910,0.547,2911,1.466,2912,1.032,2913,0.547,2914,0.547,2915,0.547,2916,0.547,2917,0.547,2918,0.547,2919,1.032,2920,0.547,2921,0.48,2922,0.547,2923,0.547,2924,0.547,2925,0.547,2926,0.547,2927,0.547,2928,0.547,2929,0.906,2930,0.547,2931,0.547,2932,1.032,2933,0.547,2934,0.547,2935,0.547,2936,0.547,2937,0.547,2938,0.547,2939,0.547,2940,0.547,2941,0.547,2942,0.547,2943,0.547,2944,1.856,2945,5.238,2946,0.547,2947,0.547,2948,0.547,2949,0.547,2950,0.547,2951,0.547,2952,0.547,2953,2.208,2954,0.547,2955,0.547,2956,0.547,2957,0.547,2958,0.547,2959,0.547,2960,0.547,2961,0.547,2962,0.547,2963,0.547,2964,0.547,2965,0.547,2966,0.547,2967,0.547,2968,0.547,2969,2.82,2970,0.547,2971,0.547,2972,5.867,2973,0.547,2974,0.547,2975,0.436,2976,0.547,2977,0.547,2978,0.547,2979,0.547,2980,0.547,2981,0.547,2982,0.547,2983,0.547,2984,0.547,2985,1.032,2986,0.822,2987,0.547,2988,0.547,2989,0.547,2990,0.547,2991,6.68,2992,0.547,2993,0.547,2994,0.547,2995,0.547,2996,0.547,2997,0.547,2998,0.547,2999,0.547,3000,0.547,3001,0.547,3002,0.547,3003,0.547,3004,0.547,3005,0.547,3006,0.547,3007,0.547,3008,0.547,3009,0.547,3010,0.547,3011,1.466,3012,0.547,3013,0.547,3014,0.547,3015,0.547,3016,0.547,3017,0.547,3018,0.547,3019,0.547,3020,6.266,3021,0.547,3022,0.48,3023,0.547,3024,0.547,3025,0.547,3026,0.547,3027,0.547,3028,0.547,3029,6.792,3030,0.547,3031,0.547,3032,0.547,3033,1.032,3034,0.547,3035,0.547,3036,0.547,3037,0.547,3038,0.547,3039,1.856,3040,0.547,3041,0.547,3042,0.547,3043,0.547,3044,0.547,3045,0.547,3046,0.547,3047,0.547,3048,0.547,3049,0.547,3050,0.547,3051,0.547,3052,0.547,3053,0.547,3054,0.547,3055,7.842,3056,7.446,3057,0.547,3058,0.547,3059,0.547,3060,0.547,3061,0.547,3062,0.547,3063,0.547,3064,3.81,3065,0.547,3066,0.547,3067,0.547,3068,0.547,3069,0.547,3070,1.856,3071,1.032,3072,1.466,3073,0.547,3074,0.547,3075,0.547,3076,0.547,3077,0.547,3078,0.547,3079,0.547,3080,0.547,3081,0.547,3082,6.012,3083,0.48,3084,0.547,3085,1.856,3086,1.856,3087,0.547,3088,0.547,3089,2.208,3090,2.82,3091,0.547,3092,0.547,3093,0.547,3094,0.547,3095,0.547,3096,0.547,3097,1.286,3098,0.547,3099,0.547,3100,0.547,3101,0.547,3102,0.547,3103,0.547,3104,0.547,3105,0.547,3106,0.547,3107,0.547,3108,1.032,3109,0.547,3110,0.547,3111,0.547,3112,2.528,3113,0.547,3114,0.547,3115,0.547,3116,0.547,3117,2.82,3118,1.032,3119,0.547,3120,1.032,3121,1.032,3122,0.547,3123,0.547,3124,0.547,3125,0.547,3126,0.547,3127,0.547,3128,3.559,3129,0.547,3130,0.547,3131,0.547,3132,0.547,3133,0.547,3134,0.547,3135,0.547,3136,2.709,3137,0.547,3138,0.547,3139,0.547,3140,0.547,3141,0.547,3142,3.769,3143,0.547,3144,0.547,3145,0.547,3146,0.547,3147,7.099,3148,0.547,3149,0.547,3150,1.856,3151,2.218,3152,0.547,3153,0.547,3154,0.547,3155,0.547,3156,1.856,3157,0.547,3158,0.547,3159,0.547,3160,0.547,3161,0.547,3162,0.547,3163,0.547,3164,0.547,3165,0.547,3166,0.547,3167,0.547,3168,0.547,3169,0.547,3170,0.547,3171,0.547,3172,0.547,3173,0.547,3174,0.547,3175,0.547,3176,0.547,3177,0.547,3178,4.889,3179,0.547,3180,0.547,3181,0.547,3182,0.547,3183,0.547,3184,0.547,3185,0.547,3186,0.48,3187,0.547,3188,0.547,3189,0.547,3190,0.547,3191,0.547,3192,0.547,3193,0.547,3194,0.547,3195,0.547,3196,0.547,3197,3.333,3198,7.336,3199,0.547,3200,0.547,3201,0.547,3202,0.547,3203,0.547,3204,0.547,3205,0.547,3206,0.547,3207,0.547,3208,0.547,3209,0.547,3210,0.547,3211,1.937,3212,0.547,3213,0.547,3214,0.547,3215,0.547,3216,0.547,3217,0.547,3218,1.032,3219,1.466,3220,1.466,3221,0.547,3222,0.547,3223,0.547,3224,0.547,3225,0.547,3226,1.032,3227,0.547,3228,0.547,3229,0.547,3230,0.547,3231,0.547,3232,0.547,3233,0.547,3234,0.547,3235,0.547,3236,0.547,3237,0.547,3238,0.547,3239,0.547,3240,0.547,3241,0.547,3242,0.547,3243,1.466,3244,1.032,3245,1.032,3246,0.547,3247,0.547,3248,0.547,3249,0.547,3250,0.547,3251,0.547,3252,0.547,3253,0.547,3254,0.547,3255,0.547,3256,0.547,3257,0.547,3258,0.547,3259,0.547,3260,0.547,3261,0.547,3262,0.547,3263,1.032,3264,0.547,3265,0.547,3266,0.547,3267,0.547,3268,0.547,3269,0.547,3270,0.547,3271,0.547,3272,0.547,3273,2.82,3274,6.079,3275,0.547,3276,0.547,3277,0.547,3278,0.547,3279,0.547,3280,0.547,3281,0.547,3282,0.547,3283,0.547,3284,0.547,3285,0.547,3286,0.547,3287,0.547,3288,0.547,3289,0.547,3290,1.032,3291,0.547,3292,0.547,3293,0.547,3294,0.547,3295,0.547,3296,0.547,3297,0.547,3298,0.547,3299,0.547,3300,0.547,3301,0.547,3302,0.547,3303,0.547,3304,4.889,3305,0.547,3306,0.547,3307,0.547,3308,0.547,3309,0.547,3310,0.547,3311,0.547,3312,0.547,3313,0.547,3314,0.547,3315,0.547,3316,0.547,3317,0.547,3318,0.547,3319,0.547,3320,0.547,3321,0.547,3322,0.547,3323,0.547,3324,0.547,3325,0.547,3326,0.547,3327,0.547,3328,0.547,3329,0.547,3330,0.547,3331,0.547,3332,0.547,3333,0.547,3334,1.032,3335,0.547,3336,1.032,3337,0.547,3338,0.547,3339,0.547,3340,0.547,3341,0.547,3342,0.547,3343,0.547,3344,0.547,3345,0.547,3346,3.087,3347,0.547,3348,0.547,3349,0.547,3350,0.547,3351,0.547,3352,0.547,3353,0.547,3354,0.547,3355,0.547,3356,0.547,3357,0.547,3358,0.547,3359,0.547,3360,2.208,3361,0.547,3362,0.547,3363,0.547,3364,0.547,3365,4.758,3366,5.128,3367,0.547,3368,0.547,3369,0.547,3370,0.547,3371,0.547,3372,0.547,3373,0.547,3374,0.547,3375,0.547,3376,0.547,3377,0.547,3378,0.547,3379,0.547,3380,0.547,3381,0.547,3382,0.547,3383,0.547,3384,0.547,3385,0.547,3386,0.48,3387,0.547,3388,0.547,3389,0.547,3390,0.547,3391,0.547,3392,1.856,3393,1.466,3394,0.547,3395,0.547,3396,0.547,3397,0.547,3398,0.547,3399,0.547,3400,0.547,3401,0.547,3402,1.032,3403,0.547,3404,0.547,3405,0.547,3406,0.547,3407,0.547,3408,0.547,3409,0.547,3410,0.547,3411,0.547,3412,0.547,3413,0.547,3414,0.547,3415,0.547,3416,0.547,3417,1.032,3418,0.547,3419,0.547,3420,0.547,3421,1.032,3422,0.547,3423,0.547,3424,0.547,3425,0.547,3426,0.547,3427,0.547,3428,0.547,3429,0.547,3430,0.547,3431,0.547,3432,0.547,3433,0.547,3434,1.466,3435,0.547,3436,0.547,3437,0.547,3438,0.547,3439,0.547,3440,0.547,3441,0.547,3442,0.547,3443,0.547,3444,0.547,3445,0.547,3446,0.547,3447,0.547,3448,0.547,3449,0.547,3450,0.547,3451,0.48,3452,0.547,3453,0.547,3454,0.547,3455,0.547,3456,0.547,3457,0.547,3458,7.596,3459,1.032,3460,0.547,3461,0.547,3462,0.547,3463,0.547,3464,0.547,3465,0.547,3466,0.547,3467,0.547,3468,0.547,3469,0.547,3470,0.547,3471,0.547,3472,0.547,3473,0.547,3474,0.547,3475,0.547,3476,0.547,3477,1.466,3478,1.466,3479,0.547,3480,0.547,3481,0.547,3482,0.547,3483,0.547,3484,0.547,3485,0.547,3486,0.547,3487,0.547,3488,0.547,3489,1.032,3490,0.547,3491,0.547,3492,0.547,3493,1.032,3494,1.937,3495,0.547,3496,0.547,3497,0.547,3498,0.547,3499,1.032,3500,0.547,3501,0.547,3502,0.547,3503,0.547,3504,0.547,3505,0.547,3506,0.547,3507,0.547,3508,0.547,3509,0.547,3510,0.547,3511,0.547,3512,0.547,3513,0.547,3514,0.547,3515,0.547,3516,0.547,3517,2.82,3518,0.547,3519,0.547,3520,0.547,3521,1.032,3522,0.547,3523,0.547,3524,0.547,3525,0.547,3526,0.547,3527,0.547,3528,0.547,3529,0.547,3530,0.547,3531,0.547,3532,0.547,3533,0.547,3534,0.547,3535,0.547,3536,0.547,3537,0.547,3538,1.466,3539,0.547,3540,0.547,3541,0.547,3542,0.547,3543,0.547,3544,0.547,3545,0.547,3546,0.547,3547,0.547,3548,1.032,3549,0.547,3550,0.547,3551,0.547,3552,0.547,3553,0.547,3554,0.547,3555,0.547,3556,0.547,3557,0.547,3558,0.547,3559,0.547,3560,0.547,3561,0.547,3562,0.547,3563,0.547,3564,0.547,3565,1.032,3566,0.547,3567,0.547,3568,0.547,3569,0.547,3570,0.547,3571,0.547,3572,0.547,3573,0.547,3574,0.547,3575,0.547,3576,0.547,3577,0.547,3578,0.547,3579,0.547,3580,0.547,3581,0.547,3582,0.547,3583,0.547,3584,0.547,3585,0.547,3586,0.547,3587,0.547,3588,0.547,3589,0.547,3590,0.547,3591,0.547,3592,0.547,3593,0.547,3594,4.144,3595,0.547,3596,0.547,3597,1.032,3598,1.032,3599,0.547,3600,0.547,3601,0.547,3602,0.547,3603,0.547,3604,0.547,3605,0.547,3606,0.547,3607,0.547,3608,0.547,3609,0.547,3610,0.547,3611,0.547,3612,0.547,3613,0.547,3614,0.547,3615,0.547,3616,2.82,3617,0.547,3618,1.032,3619,1.032,3620,0.547,3621,0.547,3622,0.547,3623,0.547,3624,0.547,3625,0.547,3626,0.547,3627,0.547,3628,0.547,3629,0.547,3630,0.547,3631,0.547,3632,0.547,3633,0.547,3634,0.547,3635,0.547,3636,0.547,3637,0.547,3638,0.547,3639,0.547,3640,0.547,3641,0.547,3642,0.547,3643,0.547,3644,0.547,3645,1.032,3646,0.547,3647,0.547,3648,0.547,3649,0.547,3650,0.547,3651,0.547,3652,0.547,3653,0.547,3654,0.547,3655,0.547,3656,0.547,3657,0.547,3658,0.547,3659,0.547,3660,0.547,3661,0.547,3662,0.547,3663,0.547,3664,0.547,3665,0.547,3666,0.547,3667,0.547,3668,0.547,3669,0.547,3670,0.547,3671,0.547,3672,0.547,3673,0.547,3674,0.547,3675,0.547,3676,0.547,3677,0.547,3678,1.032,3679,0.547,3680,0.547,3681,0.547,3682,0.547,3683,0.547,3684,0.547,3685,0.547,3686,0.711,3687,1.277,3688,0.547,3689,0.547,3690,0.547,3691,0.547,3692,0.547,3693,0.547,3694,0.547,3695,0.547,3696,0.547,3697,0.547,3698,0.547,3699,0.547,3700,0.547,3701,0.547,3702,0.547,3703,0.547,3704,0.547,3705,0.547,3706,0.547,3707,0.547,3708,0.547,3709,1.856,3710,0.547,3711,0.547,3712,0.547,3713,0.547,3714,1.032,3715,0.547,3716,1.032,3717,0.547,3718,0.547,3719,0.547,3720,0.547,3721,0.547,3722,0.547,3723,0.547,3724,0.547,3725,0.547,3726,0.547,3727,0.547,3728,0.547,3729,0.547,3730,0.547,3731,0.547,3732,0.547,3733,0.547,3734,0.547,3735,0.547,3736,0.547,3737,0.547,3738,0.547,3739,0.547,3740,0.547,3741,0.547,3742,0.547,3743,0.547,3744,0.547,3745,0.547,3746,0.547,3747,0.547,3748,0.547,3749,0.547,3750,0.547,3751,0.547,3752,0.547,3753,0.547,3754,0.547,3755,0.547,3756,0.547,3757,0.547,3758,0.547,3759,0.547,3760,0.547,3761,0.48,3762,0.547,3763,0.547,3764,0.547,3765,0.547,3766,0.547,3767,0.547,3768,0.547,3769,0.547,3770,0.547,3771,0.547,3772,0.547,3773,0.547,3774,0.547,3775,0.547,3776,0.547,3777,0.547,3778,0.547,3779,0.547,3780,0.547,3781,0.547,3782,0.547,3783,0.547,3784,0.547,3785,0.547,3786,0.547,3787,1.032,3788,0.547,3789,0.547,3790,0.547,3791,0.547,3792,0.547,3793,0.547,3794,0.547,3795,0.547,3796,0.547,3797,0.547,3798,0.547,3799,0.547,3800,0.547,3801,0.547,3802,0.547,3803,0.547,3804,0.547,3805,0.547,3806,0.547,3807,0.547,3808,0.547,3809,0.547,3810,0.547,3811,0.547,3812,0.547,3813,0.547,3814,0.547,3815,0.547,3816,0.547,3817,0.547,3818,0.547,3819,0.547,3820,0.547,3821,0.547,3822,0.547,3823,0.547,3824,0.547,3825,2.528,3826,0.547,3827,0.547,3828,0.547,3829,0.547,3830,0.547,3831,0.547,3832,0.547,3833,0.547,3834,1.032,3835,0.547,3836,0.547,3837,0.547,3838,0.547,3839,0.547,3840,1.856,3841,0.547,3842,0.547,3843,0.547,3844,0.547,3845,0.547,3846,0.547,3847,0.547,3848,0.547,3849,0.547,3850,0.547,3851,0.547,3852,0.48,3853,0.547,3854,0.547,3855,1.937,3856,0.547,3857,0.547,3858,7.677,3859,0.547,3860,0.547,3861,0.547,3862,0.547,3863,0.547,3864,0.547,3865,0.547,3866,0.547,3867,0.547,3868,0.547,3869,0.547,3870,0.547,3871,0.547,3872,0.547,3873,0.547,3874,0.547,3875,1.032,3876,0.547,3877,0.547,3878,0.547,3879,0.547,3880,0.547,3881,0.547,3882,0.547,3883,0.547,3884,0.547,3885,0.547,3886,0.547,3887,0.547,3888,0.547,3889,0.547,3890,0.547,3891,0.547,3892,0.547,3893,0.547,3894,0.547,3895,0.547,3896,0.547,3897,0.547,3898,0.547,3899,0.547,3900,0.547,3901,0.547,3902,0.547,3903,0.547,3904,0.547,3905,0.547,3906,1.032,3907,0.547,3908,0.547,3909,0.547,3910,0.547,3911,2.82,3912,0.547,3913,0.547,3914,0.547,3915,0.547,3916,2.82,3917,0.547,3918,0.547,3919,0.547,3920,0.547,3921,0.547,3922,0.547,3923,0.547,3924,0.547,3925,0.547,3926,0.547,3927,0.547,3928,0.547,3929,0.547,3930,1.032,3931,0.547,3932,0.547,3933,0.547,3934,0.547,3935,0.547,3936,0.547,3937,0.547,3938,0.547,3939,0.547,3940,0.547,3941,0.547,3942,0.547,3943,0.547,3944,2.208,3945,0.547,3946,0.547,3947,0.547,3948,0.547,3949,1.032,3950,0.547,3951,0.547,3952,0.547,3953,0.547,3954,1.032,3955,0.547,3956,0.547,3957,0.547,3958,0.547,3959,0.547,3960,1.032,3961,0.547,3962,0.547,3963,0.547,3964,0.547,3965,0.547,3966,0.547,3967,0.547,3968,0.547,3969,0.547,3970,0.547,3971,0.547,3972,0.547,3973,2.528,3974,0.547,3975,1.032,3976,1.937,3977,0.547,3978,0.547,3979,0.547,3980,0.547,3981,0.547,3982,0.547,3983,0.547,3984,0.547,3985,0.547,3986,1.466,3987,0.547,3988,0.547,3989,0.547,3990,0.547,3991,0.547,3992,0.547,3993,0.547,3994,0.547,3995,0.547,3996,0.547,3997,1.466,3998,0.547,3999,0.547,4000,0.547,4001,0.547,4002,0.547,4003,0.547,4004,0.547,4005,0.547,4006,0.547,4007,0.48,4008,0.547,4009,1.032,4010,0.547,4011,0.547,4012,0.547,4013,0.547,4014,0.547,4015,0.547,4016,0.547,4017,0.547,4018,0.547,4019,0.547,4020,0.547,4021,0.547,4022,0.547,4023,0.547,4024,0.547,4025,0.547,4026,0.547,4027,0.547,4028,1.032,4029,1.032,4030,0.547,4031,1.032,4032,0.547,4033,0.547,4034,0.547,4035,0.547,4036,0.547,4037,0.547,4038,0.547,4039,0.547,4040,0.547,4041,0.547,4042,0.547,4043,0.547,4044,0.547,4045,0.547,4046,0.547,4047,0.547,4048,0.547,4049,0.547,4050,0.547,4051,0.547,4052,0.547,4053,0.48,4054,0.547,4055,0.547,4056,1.032,4057,0.547,4058,0.547,4059,0.547,4060,0.547,4061,0.547,4062,0.547,4063,0.547,4064,0.547,4065,0.547,4066,0.547,4067,0.547,4068,0.547,4069,0.547,4070,0.547,4071,0.547,4072,0.547,4073,0.547,4074,0.547,4075,0.436,4076,0.547,4077,0.547,4078,0.547,4079,0.547,4080,0.547,4081,0.547,4082,0.547,4083,0.547,4084,0.547,4085,0.547,4086,0.547,4087,0.547,4088,0.547,4089,0.547,4090,0.547,4091,0.547,4092,0.547,4093,0.547,4094,0.547,4095,0.547,4096,0.547,4097,0.547,4098,0.48,4099,0.547,4100,0.547,4101,0.547,4102,1.466,4103,0.547,4104,0.547,4105,0.547,4106,0.547,4107,0.547,4108,0.547,4109,0.547,4110,0.547,4111,0.547,4112,0.547,4113,0.547,4114,0.547,4115,1.856,4116,0.547,4117,0.547,4118,0.547,4119,0.547,4120,0.547,4121,2.82,4122,2.208,4123,0.547,4124,0.547,4125,0.547,4126,0.547,4127,0.547,4128,0.547,4129,0.547,4130,0.547,4131,0.547,4132,0.547,4133,0.547,4134,0.547,4135,0.547,4136,0.547,4137,1.032,4138,0.547,4139,0.547,4140,0.547,4141,0.547,4142,0.547,4143,0.547,4144,0.547,4145,0.547,4146,0.547,4147,0.547,4148,0.547,4149,0.547,4150,0.547,4151,0.547,4152,0.547,4153,0.547,4154,0.547,4155,0.547,4156,0.547,4157,0.547,4158,0.547,4159,0.547,4160,0.547,4161,0.547,4162,0.547,4163,0.547,4164,0.547,4165,1.032,4166,0.547,4167,0.547,4168,0.547,4169,0.547,4170,0.547,4171,0.547,4172,0.547,4173,0.547,4174,0.547,4175,0.547,4176,0.547,4177,0.547,4178,0.547,4179,0.547,4180,0.547,4181,0.547,4182,0.547,4183,0.547,4184,0.547,4185,0.547,4186,0.547,4187,0.547,4188,0.547,4189,0.547,4190,0.547,4191,0.547,4192,0.547,4193,0.547,4194,1.856,4195,0.547,4196,0.547,4197,0.547,4198,0.547,4199,0.547,4200,1.032,4201,0.547,4202,0.547,4203,0.547,4204,0.547,4205,0.547,4206,0.547,4207,0.547,4208,0.547,4209,0.547,4210,0.547,4211,0.547,4212,0.547,4213,0.547,4214,0.547,4215,0.547,4216,0.547,4217,0.547,4218,0.547,4219,0.547,4220,0.547,4221,0.547,4222,0.547,4223,0.547,4224,0.547,4225,0.547,4226,0.547,4227,0.547,4228,0.547,4229,0.547,4230,0.547,4231,0.547,4232,0.547,4233,0.547,4234,2.208,4235,2.208,4236,0.547,4237,0.547,4238,0.547,4239,0.547,4240,0.547,4241,0.547,4242,0.547,4243,0.547,4244,0.547,4245,0.547,4246,0.547,4247,0.547,4248,0.547,4249,0.547,4250,0.547,4251,0.547,4252,0.547,4253,0.547,4254,0.547,4255,0.547,4256,0.547,4257,0.547,4258,0.547,4259,0.547,4260,0.547,4261,0.547,4262,0.547,4263,0.547,4264,0.547,4265,0.547,4266,0.547,4267,0.547,4268,0.547,4269,0.547,4270,0.547,4271,0.547,4272,0.547,4273,0.547,4274,0.547,4275,0.547,4276,0.547,4277,0.547,4278,0.547,4279,0.547,4280,0.547,4281,7.561,4282,0.547,4283,0.547,4284,0.547,4285,0.547,4286,0.547,4287,0.547,4288,0.547,4289,0.547,4290,0.547,4291,0.547,4292,0.547,4293,0.48,4294,1.466,4295,0.547,4296,0.547,4297,0.547,4298,0.48,4299,0.547,4300,0.547,4301,0.547,4302,0.547,4303,0.547,4304,0.547,4305,0.547,4306,0.547,4307,0.547,4308,0.547,4309,0.547,4310,0.547,4311,0.547,4312,0.547,4313,0.547,4314,0.547,4315,0.547,4316,0.906,4317,0.547,4318,0.547,4319,0.547,4320,0.547,4321,0.547,4322,0.547,4323,0.547,4324,0.547,4325,0.547,4326,1.032,4327,0.547,4328,0.547,4329,0.547,4330,0.547,4331,0.547,4332,0.547,4333,0.547,4334,0.547,4335,0.547,4336,0.547,4337,0.547,4338,0.547,4339,0.547,4340,0.547,4341,0.547,4342,0.547,4343,0.547,4344,0.547,4345,0.547,4346,0.547,4347,0.547,4348,0.547,4349,0.547,4350,0.547,4351,0.547,4352,0.547,4353,0.547,4354,0.547,4355,0.547,4356,0.547,4357,0.547,4358,0.547,4359,0.547,4360,0.547,4361,0.547,4362,0.547,4363,0.547,4364,0.547,4365,0.547,4366,0.547,4367,0.547,4368,0.547,4369,0.547,4370,0.547,4371,0.547,4372,0.547,4373,0.547,4374,0.547,4375,0.547,4376,0.547,4377,0.547,4378,0.547,4379,0.547,4380,0.547,4381,0.547,4382,0.547,4383,0.547,4384,0.547,4385,0.547,4386,0.547,4387,0.547,4388,0.547,4389,0.547,4390,0.547,4391,0.547,4392,0.547,4393,0.547,4394,0.547,4395,0.547,4396,0.547,4397,0.547,4398,0.547,4399,0.547,4400,0.547,4401,0.547,4402,0.547,4403,0.547,4404,0.547,4405,0.547,4406,0.547,4407,0.547,4408,0.547,4409,0.547,4410,0.547,4411,0.547,4412,0.547,4413,0.547,4414,0.547,4415,0.547,4416,0.547,4417,0.547,4418,0.547,4419,0.547,4420,0.547,4421,0.547,4422,0.547,4423,1.032,4424,0.547,4425,0.547,4426,0.547,4427,0.547,4428,0.547,4429,0.547,4430,0.547,4431,0.547,4432,0.547,4433,0.547,4434,0.547,4435,0.547,4436,0.547,4437,0.547,4438,0.547,4439,0.547,4440,0.547,4441,0.547,4442,0.547,4443,0.547,4444,0.547,4445,0.547,4446,0.547,4447,0.547,4448,0.547,4449,0.547,4450,0.547,4451,0.547,4452,0.547,4453,0.547,4454,0.547,4455,0.547,4456,0.547,4457,0.547,4458,1.032,4459,0.547,4460,0.547,4461,0.547,4462,0.547,4463,0.547,4464,1.032,4465,1.032,4466,1.032,4467,0.547,4468,0.547,4469,0.547,4470,0.547,4471,0.547,4472,0.547,4473,0.547,4474,1.032,4475,1.032,4476,0.547,4477,0.547,4478,0.547,4479,0.547,4480,0.547,4481,0.547,4482,0.547,4483,0.547,4484,0.547,4485,0.547,4486,0.547,4487,0.547,4488,0.547,4489,0.547,4490,0.547,4491,0.547,4492,0.547,4493,0.547,4494,0.547,4495,0.547,4496,0.547,4497,0.547,4498,0.547,4499,0.547,4500,0.547,4501,0.547,4502,0.547,4503,0.547,4504,0.547,4505,0.547,4506,0.547,4507,0.547,4508,0.547,4509,0.547,4510,0.547,4511,0.547,4512,0.547,4513,0.547,4514,0.547,4515,0.547,4516,0.547,4517,0.547,4518,0.547,4519,0.547,4520,0.547,4521,0.547,4522,0.547,4523,0.547,4524,0.547,4525,0.547,4526,0.547,4527,0.547,4528,0.547,4529,0.547,4530,0.547,4531,0.547,4532,0.547,4533,0.547,4534,0.547,4535,0.547,4536,0.547,4537,0.547,4538,0.547,4539,0.547,4540,0.547,4541,0.547,4542,0.547,4543,0.547,4544,0.547,4545,0.547,4546,0.547,4547,0.547,4548,0.547,4549,0.547,4550,0.547,4551,0.547,4552,0.547,4553,0.547,4554,0.547,4555,0.547,4556,0.547,4557,0.547,4558,0.547,4559,0.547,4560,0.547,4561,0.547,4562,0.547,4563,0.547,4564,0.547,4565,0.547,4566,0.547,4567,0.547,4568,0.547,4569,0.547,4570,0.547,4571,0.547,4572,0.547,4573,0.547,4574,1.032,4575,0.547,4576,1.032,4577,0.547,4578,1.032,4579,1.466,4580,0.547,4581,0.547,4582,1.032,4583,0.547,4584,1.032,4585,8.193,4586,0.547,4587,0.547,4588,1.032,4589,0.547,4590,0.547,4591,0.547,4592,1.032,4593,0.547,4594,1.032,4595,0.547,4596,1.032,4597,0.547,4598,1.032,4599,0.547,4600,1.032,4601,0.547,4602,0.547,4603,0.547,4604,0.547,4605,1.032,4606,0.547,4607,1.032,4608,0.547,4609,1.032,4610,0.547,4611,1.032,4612,0.547,4613,1.032,4614,0.547,4615,1.032,4616,0.547,4617,1.032,4618,0.547,4619,1.032,4620,0.547,4621,0.547,4622,1.032,4623,1.032,4624,0.547,4625,0.547,4626,1.032,4627,0.547,4628,1.032,4629,0.547,4630,1.032,4631,0.547,4632,1.032,4633,0.547,4634,0.547,4635,1.032,4636,0.547,4637,0.547,4638,0.547,4639,1.032,4640,0.48,4641,0.547,4642,0.547,4643,1.032,4644,0.547,4645,1.032,4646,0.906,4647,0.547,4648,0.547,4649,1.032,4650,1.032,4651,0.547,4652,0.547,4653,1.032,4654,1.466,4655,1.856,4656,0.547,4657,0.547,4658,0.547,4659,1.032,4660,0.547,4661,1.032,4662,0.547,4663,0.547,4664,1.032,4665,0.547,4666,1.032,4667,0.547,4668,1.032,4669,0.547,4670,1.032,4671,0.547,4672,1.032,4673,0.547,4674,1.032,4675,0.547,4676,0.547,4677,1.032,4678,0.547,4679,1.032,4680,0.547,4681,1.032,4682,0.547,4683,1.032,4684,0.547,4685,1.032,4686,0.547,4687,1.032,4688,0.547,4689,1.032,4690,0.547,4691,1.032,4692,0.547,4693,0.547,4694,1.032,4695,0.547,4696,0.547,4697,0.547,4698,1.032,4699,0.547,4700,0.547,4701,0.547,4702,1.032,4703,0.547,4704,0.376,4705,0.547,4706,0.547,4707,0.547,4708,1.466,4709,0.547,4710,1.032,4711,0.547,4712,1.032,4713,1.032,4714,1.032,4715,1.856,4716,1.032,4717,0.547,4718,0.547,4719,0.547,4720,0.547,4721,0.547,4722,0.547,4723,0.547,4724,1.032,4725,1.032,4726,0.547,4727,0.547,4728,1.032,4729,0.547,4730,0.547,4731,1.032,4732,0.547,4733,1.032,4734,0.547,4735,1.032,4736,0.547,4737,1.032,4738,0.547,4739,1.032,4740,1.466,4741,0.547,4742,0.547,4743,0.547,4744,1.032,4745,0.547,4746,1.032,4747,0.547,4748,1.466,4749,0.547,4750,0.547,4751,0.547,4752,1.032,4753,0.547,4754,1.032,4755,0.547,4756,0.547,4757,0.547,4758,0.547,4759,0.547,4760,0.547,4761,0.547,4762,1.032,4763,0.547,4764,1.032,4765,0.547,4766,1.032,4767,0.547,4768,1.032,4769,0.547,4770,1.032,4771,0.547,4772,1.032,4773,0.547,4774,1.032,4775,0.547,4776,1.032,4777,0.547,4778,1.032,4779,0.547,4780,1.032,4781,0.547,4782,1.032,4783,0.547,4784,1.032,4785,0.547,4786,1.032,4787,0.547,4788,1.032,4789,0.547,4790,1.032,4791,0.547,4792,1.032,4793,0.547,4794,1.032,4795,0.547,4796,1.032,4797,0.547,4798,1.032,4799,0.547,4800,0.547,4801,0.547,4802,0.547,4803,1.032,4804,0.547,4805,0.547,4806,0.547,4807,0.547,4808,1.032,4809,1.856,4810,1.032,4811,0.547,4812,1.466,4813,0.547,4814,0.547,4815,0.547,4816,1.032,4817,0.547,4818,0.76,4819,0.547,4820,0.547,4821,0.547,4822,0.547,4823,1.032,4824,0.547,4825,0.547,4826,0.547,4827,1.032,4828,0.547,4829,1.032,4830,0.547,4831,1.032,4832,0.547,4833,1.032,4834,0.547,4835,1.032,4836,0.547,4837,1.032,4838,0.547,4839,1.032,4840,1.032,4841,0.547,4842,0.547,4843,1.032,4844,0.547,4845,0.547,4846,1.032,4847,0.547,4848,0.547,4849,1.032,4850,0.547,4851,0.547,4852,1.032,4853,0.547,4854,0.547,4855,0.547,4856,0.547,4857,0.547,4858,0.547,4859,0.547,4860,0.547,4861,0.547,4862,0.547,4863,0.547,4864,1.032,4865,0.547,4866,0.547,4867,1.032,4868,0.547,4869,0.547,4870,1.032,4871,0.547,4872,0.547,4873,1.032,4874,0.547,4875,0.547,4876,0.547,4877,1.032,4878,0.547,4879,0.547,4880,0.547,4881,1.032,4882,0.547,4883,1.032,4884,0.547,4885,0.547,4886,0.547,4887,0.547,4888,1.032,4889,0.547,4890,1.032,4891,0.547,4892,1.032,4893,0.547,4894,1.032,4895,0.547,4896,0.547,4897,0.547,4898,0.547,4899,0.547,4900,1.032,4901,0.547,4902,1.032,4903,0.547,4904,0.547,4905,1.032,4906,0.547,4907,1.032,4908,0.547,4909,0.547,4910,0.547,4911,0.547,4912,0.547,4913,0.547,4914,1.032,4915,0.547,4916,0.547,4917,0.547,4918,1.032,4919,0.547,4920,0.547,4921,0.547,4922,0.547,4923,0.547,4924,0.48,4925,0.547,4926,1.032,4927,0.547,4928,1.032,4929,0.547,4930,0.48,4931,0.547,4932,0.547,4933,0.547,4934,0.547,4935,1.032,4936,0.547,4937,1.032,4938,0.547,4939,1.032,4940,0.547,4941,0.547,4942,1.032,4943,0.547,4944,0.547,4945,1.032,4946,0.547,4947,0.547,4948,0.547,4949,1.032,4950,0.547,4951,1.032,4952,0.547,4953,1.032,4954,0.547,4955,1.032,4956,0.547,4957,1.032,4958,0.547,4959,1.032,4960,0.547,4961,1.032,4962,0.547,4963,1.032,4964,0.547,4965,1.032,4966,0.547,4967,1.032,4968,0.547,4969,1.032,4970,0.547,4971,0.547,4972,0.547,4973,0.547,4974,0.547]],["title/dependencies.html",[2617,3.602,2872,2.917]],["body/dependencies.html",[12,0.011,75,0.009,76,0.009,89,0.806,91,3.657,92,3.405,93,3.109,98,3.58,102,1.924,119,4.294,120,2.982,122,4.294,123,1.487,330,4.377,331,3.504,489,2.982,706,3.109,726,3.78,727,3.78,728,2.982,737,4.377,790,3.109,1146,3.58,1274,4.013,1546,5.116,1551,4.013,1554,5.116,1555,5.116,2091,5.116,2324,5.116,2325,5.116,2421,5.116,2617,4.013,3022,5.116,3083,7.567,3136,5.116,3186,5.116,3761,5.116,4053,5.116,4293,5.116,4298,5.116,4975,5.83,4976,5.83,4977,7.129,4978,5.83,4979,5.83,4980,5.83,4981,7.129,4982,5.83,4983,5.83,4984,5.83,4985,5.83,4986,5.83,4987,5.83,4988,5.83,4989,5.83]],["title/miscellaneous/enumerations.html",[4990,2.138,4991,4.592]],["body/miscellaneous/enumerations.html",[6,3.847,7,0.283,12,0.011,37,4.208,38,4.084,40,4.084,41,2.96,42,4.084,43,3.408,44,4.084,45,4.208,46,4.084,47,3.643,48,4.084,49,3.847,50,4.084,51,3.847,52,4.084,53,3.847,54,4.084,55,3.643,56,4.084,57,3.847,58,4.084,59,3.306,60,4.084,61,3.643,62,4.084,63,3.847,64,4.084,65,3.847,66,4.084,67,3.847,68,4.084,69,3.847,70,4.424,71,4.084,72,4.084,73,4.084,74,4.084,75,0.009,76,0.009,441,2.402,4990,3.465,4991,5.206,4992,6.323]],["title/miscellaneous/functions.html",[2753,4.17,4990,2.138]],["body/miscellaneous/functions.html",[5,0.224,7,0.206,10,1.3,11,0.522,12,0.011,19,1.093,21,1.101,22,2.294,75,0.007,76,0.007,80,1.695,299,3.796,305,2.207,309,2.207,331,3.278,423,1.907,427,2.59,428,1.511,441,1.584,631,1.383,689,4.324,694,2.776,717,2.411,732,3.002,754,2.487,836,3.604,837,3.13,838,3.439,839,4.913,840,2.971,841,4.928,864,3.439,880,3.439,907,2.65,1023,2.798,1090,4.395,1155,2.65,1268,5.151,1270,3.787,1464,2.971,1465,3.787,1466,3.439,1512,3.787,1644,3.787,1658,3.787,1769,4.677,1839,3.439,1867,3.787,1926,2.971,2036,3.787,2037,4.677,2038,3.439,2753,3.439,4990,2.52,4993,6.67,4994,7.154,4995,6.67,4996,6.67,4997,6.67,4998,6.67,4999,4.316,5000,5.87,5001,5.87,5002,4.316,5003,5.853,5004,3.787,5005,5.87,5006,4.316,5007,5.87,5008,5.853,5009,5.87,5010,5.87,5011,5.87,5012,5.87,5013,5.87,5014,4.316,5015,5.853,5016,5.87,5017,6.67,5018,5.87,5019,6.67,5020,6.67,5021,6.67,5022,5.87,5023,6.67,5024,5.87,5025,6.67,5026,5.87,5027,5.853,5028,5.87,5029,5.87,5030,5.853,5031,3.787,5032,3.787,5033,4.316,5034,4.316,5035,4.316,5036,4.316,5037,4.316,5038,4.316,5039,4.316,5040,5.87,5041,4.316,5042,3.787,5043,4.316,5044,4.316]],["title/index.html",[7,0.175,2725,2.52,2726,2.696]],["body/index.html",[5,0.193,12,0.011,59,3.167,75,0.009,76,0.009,77,1.821,123,2.028,157,2.186,171,3.911,185,1.875,331,2.793,358,2.249,385,2.186,492,4.83,497,4.549,552,3.03,553,4.185,601,3.684,695,3.684,706,3.03,761,3.318,790,3.03,798,2.688,816,4.308,889,4.527,1065,4.527,1118,3.911,1265,4.527,1298,4.185,1499,4.527,1548,4.986,1551,3.911,1593,4.527,1601,5.591,1718,3.911,2314,5.168,2617,3.911,2709,4.527,2725,3.911,2734,3.684,2739,4.986,2757,4.986,2876,6.681,2879,4.986,2884,4.986,2921,4.986,2929,4.986,3211,4.986,3494,6.157,3855,6.157,3976,4.986,4640,4.986,4930,4.986,5045,4.986,5046,6.157,5047,4.986,5048,5.682,5049,5.682,5050,5.682,5051,5.682,5052,5.682,5053,7.017,5054,7.017,5055,5.682,5056,5.682,5057,5.682,5058,5.682,5059,5.682,5060,5.682,5061,5.682,5062,5.682,5063,5.682,5064,5.682,5065,5.682,5066,5.682,5067,5.682,5068,5.682,5069,5.682,5070,5.682,5071,5.682,5072,5.682]],["title/license.html",[2725,2.52,2726,2.696,4818,2.696]],["body/license.html",[10,0.827,12,0.006,29,3.555,61,1.861,75,0.006,76,0.006,179,2.414,184,2.086,185,1,196,4.154,209,3.63,230,0.971,325,0.617,353,1.646,398,3.136,436,1.77,490,3.355,516,1.965,540,2.086,656,2.659,663,2.659,720,1.489,737,1.861,742,1.861,783,1.871,801,2.086,827,2.953,873,5.2,884,2.414,1145,4.493,1161,2.232,1298,2.232,1463,5.667,1485,2.086,1570,4.85,1866,2.66,2121,3.997,2260,2.659,2278,2.659,2430,2.086,2673,2.659,2738,6.796,2744,2.659,2801,2.659,2975,2.414,3151,2.659,3386,2.659,4007,4.803,4075,2.414,4818,5.05,4924,3.997,5073,7.113,5074,7.318,5075,6.527,5076,7.113,5077,3.03,5078,3.03,5079,3.03,5080,7.318,5081,3.03,5082,4.556,5083,3.03,5084,3.03,5085,3.03,5086,3.03,5087,5.474,5088,3.03,5089,5.474,5090,5.474,5091,3.03,5092,6.088,5093,3.03,5094,5.474,5095,3.03,5096,3.03,5097,3.03,5098,3.03,5099,7.318,5100,3.03,5101,3.03,5102,4.556,5103,4.556,5104,3.03,5105,3.03,5106,4.556,5107,7.745,5108,8.399,5109,4.556,5110,4.556,5111,3.03,5112,3.03,5113,3.03,5114,4.556,5115,8.509,5116,3.03,5117,5.474,5118,4.556,5119,3.03,5120,4.556,5121,3.03,5122,4.556,5123,3.03,5124,5.474,5125,3.03,5126,4.556,5127,4.556,5128,6.088,5129,3.03,5130,3.03,5131,3.03,5132,6.088,5133,4.556,5134,3.03,5135,3.03,5136,4.556,5137,3.03,5138,3.03,5139,3.03,5140,3.03,5141,5.474,5142,6.527,5143,7.486,5144,6.527,5145,5.474,5146,3.03,5147,3.03,5148,3.03,5149,4.556,5150,3.03,5151,4.556,5152,3.03,5153,3.03,5154,3.03,5155,3.03,5156,3.03,5157,3.03,5158,3.03,5159,2.086,5160,3.03,5161,3.03,5162,4.556,5163,3.03,5164,7.745,5165,6.527,5166,3.03,5167,3.03,5168,4.556,5169,3.03,5170,4.556,5171,7.113,5172,3.03,5173,3.03,5174,3.03,5175,3.03,5176,3.03,5177,3.03,5178,3.03,5179,3.03,5180,3.03,5181,3.03,5182,3.03,5183,3.03,5184,3.03,5185,3.03,5186,6.088,5187,3.03,5188,3.03,5189,3.03,5190,3.03,5191,5.474,5192,3.03,5193,3.03,5194,3.03,5195,4.556,5196,3.03,5197,3.03,5198,5.474,5199,4.556,5200,3.03,5201,3.03,5202,3.03,5203,3.03,5204,4.556,5205,3.03,5206,3.03,5207,3.03,5208,3.03,5209,3.03,5210,6.527,5211,3.03,5212,3.03,5213,3.03,5214,3.03,5215,3.03,5216,3.03,5217,3.03,5218,3.03,5219,4.556,5220,3.03,5221,5.474,5222,3.03,5223,3.03,5224,3.03,5225,3.03,5226,3.03,5227,3.03,5228,3.03,5229,7.113,5230,5.474,5231,3.03,5232,7.113,5233,4.556,5234,4.556,5235,3.03,5236,5.474,5237,3.03,5238,4.556,5239,3.03,5240,3.03,5241,3.03,5242,3.03,5243,3.03,5244,6.856,5245,4.556,5246,5.474,5247,4.556,5248,3.03,5249,3.03,5250,6.527,5251,4.556,5252,4.556,5253,5.474,5254,4.556,5255,4.556,5256,4.556,5257,4.556,5258,3.03,5259,3.03,5260,3.03,5261,3.03,5262,3.03,5263,3.03,5264,6.088,5265,3.03,5266,3.03,5267,3.03,5268,3.03,5269,3.03,5270,3.03,5271,3.03,5272,3.03,5273,3.03,5274,6.088,5275,5.474,5276,3.03,5277,4.556,5278,5.474,5279,4.556,5280,4.556,5281,4.556,5282,3.03,5283,3.03,5284,3.03,5285,3.03,5286,4.556,5287,3.03,5288,6.088,5289,3.03,5290,3.03,5291,3.03,5292,3.03,5293,4.556,5294,3.03,5295,3.03,5296,3.03,5297,3.03,5298,3.03,5299,3.03,5300,3.03,5301,3.03,5302,3.03,5303,3.03,5304,4.556,5305,3.03,5306,3.03,5307,3.03,5308,3.03,5309,3.03,5310,3.03,5311,3.03,5312,3.03,5313,3.03,5314,3.03,5315,3.03,5316,3.03,5317,3.03,5318,3.03,5319,3.03,5320,3.03,5321,3.03,5322,3.03,5323,4.556,5324,3.03,5325,3.03,5326,3.03,5327,3.03,5328,3.03,5329,3.03,5330,3.03,5331,3.03,5332,4.556,5333,3.03,5334,3.03,5335,3.03,5336,3.03,5337,3.03,5338,3.03,5339,3.03,5340,3.03,5341,3.03,5342,3.03,5343,3.03,5344,3.03,5345,3.03]],["title/modules.html",[2986,4.709]],["body/modules.html",[12,0.01,75,0.01,76,0.01,2986,5.54]],["title/overview.html",[5346,5.186]],["body/overview.html",[2,1.343,12,0.01,41,3.204,45,3.962,75,0.01,76,0.01,98,4.166,135,0.851,312,2.239,353,2.452,394,2.696,1078,5.406,2743,5.953,5346,5.953,5347,6.785]],["title/properties.html",[8,0.437,2872,2.917]],["body/properties.html",[8,0.558,12,0.011,75,0.01,76,0.01,497,4.337,1143,4.337,1718,4.605,2430,4.605,4098,5.87,4818,4.927,5046,5.87,5047,5.87,5348,6.69,5349,6.69,5350,6.69,5351,6.69,5352,6.69,5353,6.69]],["title/todo.html",[529,1.952,2725,2.52,2726,2.696]],["body/todo.html",[5,0.181,12,0.01,18,2.622,75,0.01,76,0.01,196,3.853,497,4.277,790,3.519,798,3.121,1426,4.542,1528,5.257,1551,4.542,2869,5.79,4316,5.79,4646,5.79,5354,6.598,5355,6.598,5356,6.598,5357,6.598,5358,6.598,5359,6.598,5360,5.79,5361,6.598,5362,6.598,5363,6.598,5364,6.598,5365,6.598,5366,6.598,5367,6.598]],["title/miscellaneous/typealiases.html",[4990,2.138,5368,5.233]],["body/miscellaneous/typealiases.html",[6,3.703,7,0.273,11,0.362,12,0.011,14,4.564,23,4.564,30,3.931,31,3.703,32,4.564,33,3.703,34,3.507,35,3.507,75,0.009,76,0.009,266,3.183,267,3.459,271,3.046,272,2.921,273,3.046,274,3.046,275,3.046,276,3.046,277,3.046,278,3.046,279,3.046,299,3.459,303,3.33,305,2.921,306,3.33,307,3.33,309,2.921,310,3.459,431,3.923,463,3.183,464,3.183,465,3.183,466,3.335,467,3.046,468,3.335,469,3.335,700,3.931,714,4.564,715,3.335,717,2.064,863,3.507,1330,3.703,1331,4.564,1335,3.507,1336,3.507,1338,4.564,4990,3.335,4992,6.696,5369,5.711,5370,7.631,5371,7.039,5372,5.711,5373,5.711,5374,5.711,5375,5.711,5376,5.711,5377,5.711]],["title/miscellaneous/variables.html",[4990,2.138,5378,4.592]],["body/miscellaneous/variables.html",[7,0.142,10,1.462,11,0.55,12,0.011,18,1.783,19,0.977,21,2.144,39,1.107,43,1.404,75,0.006,76,0.006,77,1.437,80,1.385,90,1.823,157,1.726,167,3.574,168,5.154,185,1.784,267,2.204,284,2.294,285,2.294,286,2.294,288,2.294,290,1.973,291,1.973,292,2.294,294,2.392,295,1.518,300,2.392,301,1.459,303,1.404,304,2.392,308,2.122,358,0.951,395,2.365,431,1.654,441,2.268,442,1.925,443,3.218,463,1.654,464,1.654,465,1.654,466,1.734,467,1.583,468,1.734,469,1.734,470,1.823,471,1.823,472,1.823,491,3.304,534,3.304,552,1.583,631,2.18,654,3.936,689,4.194,709,3.505,735,1.353,801,2.044,836,1.823,837,1.583,840,3.088,842,2.754,845,1.734,907,1.823,908,4.744,909,2.605,910,2.605,911,2.605,912,3.936,913,2.605,914,2.605,915,2.605,916,2.605,917,2.605,918,2.605,919,2.605,920,3.936,921,2.605,922,2.605,923,2.605,924,2.605,925,2.605,926,2.605,1023,1.925,1090,1.823,1155,1.823,1434,2.365,1464,2.044,1585,2.605,1594,3.936,1718,3.088,1926,2.044,2114,2.365,2154,2.365,2160,3.574,2206,2.605,2327,4.8,2328,4.8,2430,2.044,2575,2.605,2594,3.936,2595,3.936,2666,3.936,2975,3.574,2991,2.605,3852,2.605,4075,5.628,4990,1.734,4994,7.428,5003,2.605,5004,3.936,5008,2.605,5015,2.605,5027,2.605,5030,2.605,5031,2.605,5032,4.744,5042,2.605,5045,2.605,5378,2.605,5379,4.486,5380,4.486,5381,4.486,5382,4.486,5383,4.486,5384,4.486,5385,4.486,5386,4.486,5387,6.025,5388,2.969,5389,2.969,5390,4.486,5391,5.406,5392,4.486,5393,2.969,5394,4.486,5395,4.486,5396,2.969,5397,4.486,5398,6.469,5399,4.486,5400,4.486,5401,5.406,5402,4.486,5403,4.486,5404,4.486,5405,4.486,5406,4.486,5407,4.486,5408,4.486,5409,4.486,5410,2.969,5411,4.486,5412,2.969,5413,2.969,5414,2.969,5415,2.969,5416,2.969,5417,2.969,5418,2.969,5419,2.969,5420,2.969,5421,2.969,5422,2.969,5423,2.969,5424,2.969,5425,2.969,5426,2.969,5427,2.969,5428,2.969,5429,2.969,5430,2.969,5431,2.969,5432,2.969,5433,2.969,5434,2.969,5435,2.969,5436,6.469,5437,2.969,5438,2.969,5439,2.969,5440,2.969,5441,2.969,5442,2.969,5443,2.969,5444,2.969,5445,2.969,5446,2.969,5447,2.969,5448,2.969,5449,4.486,5450,7.064,5451,4.486,5452,4.486,5453,2.969,5454,2.969,5455,2.969,5456,2.969,5457,2.969,5458,2.969,5459,2.969,5460,2.969,5461,2.969,5462,2.969,5463,2.969,5464,2.969,5465,2.969,5466,2.969,5467,2.969,5468,2.969,5469,2.969,5470,2.969,5471,2.969,5472,2.969,5473,2.969,5474,2.969,5475,6.803,5476,4.486,5477,2.969,5478,2.969,5479,6.025,5480,2.969,5481,2.969,5482,2.969,5483,2.969,5484,2.969,5485,2.969]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.061,312,0.736,363,0.858,935,1.535,2126,1.302,4704,1.535,5159,1.535]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.212,12,0.01,75,0.01,76,0.01,229,3.891,312,2.548,363,2.97,531,4.091,935,5.314,2126,4.508,2734,4.32,3064,5.314,3686,4.587,3687,5.314,5486,4.908,5487,5.685,5488,4.908]],["title/additional-documentation/ui-components-slide-panel.html",[312,0.816,380,0.982,2126,1.443,2239,1.82,4704,1.701,5159,1.701]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.01,75,0.01,76,0.01,229,3.907,312,2.554,380,3.075,531,4.108,2126,4.518,2239,5.698,2734,4.337,3064,5.326,3686,4.605,3687,5.326,5486,4.927,5487,5.698,5488,4.927]],["title/additional-documentation/ui-components-dialogs.html",[312,0.915,2126,1.619,4704,1.908,5159,1.908,5489,2.432]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,229,3.922,312,2.559,531,4.124,2126,4.528,2734,4.354,3064,5.338,3686,4.624,3687,5.338,5486,4.947,5487,5.711,5488,4.947,5489,6.805]],["title/additional-documentation/helpers.html",[4704,2.52,5159,2.52,5490,3.212]],["body/additional-documentation/helpers.html",[12,0.01,75,0.01,76,0.01,229,3.861,531,4.059,2041,5.267,2734,4.286,3064,5.592,3097,5.801,3451,7.128,3686,5.289,3687,5.289,5360,6.742,5486,5.659,5487,5.659,5488,5.659,5490,7.128]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":1049,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.2",{"_index":1836,"title":{},"body":{"components/PlayerComponent.html":{}}}],["0.5",{"_index":484,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.7",{"_index":2532,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":2496,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0038838",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["00399df",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["006b52c",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["009b48d",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["00b47ed",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["00d5b5e",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["0107dc5",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["0129566",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["013e987",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["0174ddf",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["019de24",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["025a430",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["027ad79",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["02bde5d",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["02c06cb",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["02d4bfb",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["02e548c",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["0325a08",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["0338bd7",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["03a0491",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["045b043",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["0486e25",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["04b4812",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["04dca08",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["0581767",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["05a441e",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["05b4ddd",{"_index":4233,"title":{},"body":{"changelog.html":{}}}],["05ddceb",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["0629b20",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["063950a",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["063d395",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["0674adf",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["067bbea",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["072caca",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["07d6959",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["07de52a",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["07ec810",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["0843a41",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["0858a77",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["08b1238",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["0903cd2",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["092dc60",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["0960760",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["097fe6b",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["09ae300",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["09eba6b",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["0a9aedc",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["0b2a071",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["0b30a9f",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["0ba1f5d",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["0bde446",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["0c889a3",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["0c91659",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["0cabcad",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["0cec276",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["0d0dfcb",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["0d76c85",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["0dc096d",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["0e060af",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["0e6195d",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["0f45127",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["0f6c72b",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["0f8326e",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["0f8e394",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":5077,"title":{},"body":{"license.html":{}}}],["1.0.1",{"_index":4982,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":4975,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["1.2.4",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/PlayerComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["10.0.1",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["10.0.2",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["10.0.3",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["10.0.4",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["10.1",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["10.1.0",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["10.2.0",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["10.2.5",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["10.2.7",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["10.3.0",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["10.3.1",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["10.3.2",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":1535,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":467,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["101bbd0",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["1024",{"_index":276,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["108",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["1081f8e",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["1098d6a",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["10_000",{"_index":638,"title":{},"body":{"pipes/BandPipe.html":{}}}],["10bf971",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.0.0",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["11.0.2",{"_index":4983,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["11.1.2",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["11.2.0",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["11.3.0",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["11.3.1",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["11.4.0",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["11.4.1",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["11.4.10",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["11.4.11",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["11.4.2",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["11.4.3",{"_index":4179,"title":{},"body":{"changelog.html":{}}}],["11.4.5",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["11.4.6",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["11.4.8",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["11.4.9",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["11.5.0",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["11.5.1",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["11.5.10",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["11.5.11",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["11.5.12",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["11.5.13",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["11.5.14",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["11.5.3",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["11.5.4",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["11.5.5",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["11.5.6",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["11.5.7",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["11.5.8",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["11.5.9",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["112db1a",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["11ae344",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.0",{"_index":4053,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["12.0.1",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["12.0.10",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["12.0.11",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["12.0.12",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["12.0.13",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["12.0.15",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["12.0.16",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["12.0.3",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["12.0.4",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["12.0.5",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["12.0.6",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["12.0.7",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["12.0.8",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["12.0.9",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["12000",{"_index":5375,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["120476b",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["120f02a",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["122856c",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["128",{"_index":273,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["128a3c3",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["12_000",{"_index":470,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["12a71dd",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["13.0.0",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["13.0.1",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["13.0.10",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["13.0.11",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["13.0.12",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["13.0.13",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["13.0.16",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["13.0.18",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["13.0.19",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["13.0.2",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["13.0.20",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["13.0.3",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["13.0.5",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["13.0.6",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["13.0.7",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["13.0.8",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["13.0.9",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["13.1.0",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["13.1.1",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["13.1.10",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["13.1.11",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["13.1.12",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["13.1.2",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["13.1.3",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["13.1.4",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["13.1.5",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["13.1.6",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["13.1.7",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["13.1.8",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["13.1.9",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["13.2",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["13.2.0",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["13.2.1",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["13.2.2",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["13.2.3",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["13.2.4",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["13.2.5",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["13.2.6",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["13.3.0",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["13.3.1",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["13.3.2",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["13.3.3",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["13.3.4",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["13.3.5",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["131",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["133059f",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["1333d05",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["135",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["1385586",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["139",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["13bf8e2",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["14.0.0",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["14.0.10",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["14.0.11",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["14.0.12",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["14.0.13",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["14.0.2",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["14.0.3",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["14.0.4",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["14.0.5",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["14.0.6",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["14.0.7",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["14.0.8",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["14.0.9",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["14.1.0",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["14.1.1",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["14.1.10",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["14.1.11",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["14.1.12",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["14.1.13",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["14.1.14",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["14.1.15",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["14.1.16",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["14.1.17",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["14.1.18",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["14.1.19",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["14.1.2",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["14.1.20",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["14.1.23",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["14.1.3",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["14.1.4",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["14.1.5",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["14.1.6",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["14.1.7",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["14.1.8",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["14.1.9",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["140",{"_index":2107,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["14000",{"_index":5376,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["141",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["14148e0",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["142",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["144",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["1455d32",{"_index":4241,"title":{},"body":{"changelog.html":{}}}],["146",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["147",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["14768e6",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["14_000",{"_index":471,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["14a5bd3",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["15.0.0",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["15.0.1",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["15.0.2",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["15.0.3",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["15.0.4",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["15.0.5",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["15.0.6",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["15.0.7",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["15.0.8",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["15.0.9",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["15.1.1",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["15.1.10",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["15.1.11",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["15.1.12",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["15.1.13",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["15.1.14",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["15.1.16",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["15.1.17",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["15.1.2",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["15.1.3",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["15.1.4",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["15.1.5",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["15.1.6",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["15.1.7",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["15.1.8",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["15.1.9",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["150",{"_index":2390,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["155e1fd",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["15dded8",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1078,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"overview.html":{}}}],["16.0.1",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["16.0.2",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["16.0.3",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["16.0.4",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["16.0.5",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["16.0.6",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["16000",{"_index":5377,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["1604161",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["162acda",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["16384",{"_index":5373,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["164",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["166c79d",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["16925cf",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["16_000",{"_index":472,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":280,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["16d8b1b",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2743,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["17.0.10",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["17.0.11",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["17.0.12",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["17.0.13",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["17.0.14",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["17.0.15",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["17.0.16",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["17.0.17",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["17.0.18",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["17.0.2",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["17.0.3",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["17.0.4",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["17.0.5",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["17.0.6",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["17.0.7",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["17.0.8",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["17.0.9",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["170",{"_index":464,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["170ea47",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["171",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["172",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["17266a3",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["1730f16",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["1745489",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["17a1677",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["17e4083",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["17ed8a6",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["18.0.1",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["18.1.0",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["18.1.1",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["18.2.0",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["18.2.2",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["18.2.3",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["18.2.4",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["18.2.5",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["18.2.6",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["18.2.7",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["181",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["184a834",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["1857720",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["18a45bd",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["18cab80",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["19.0.0",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["19.0.1",{"_index":3186,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.0.10",{"_index":3139,"title":{},"body":{"changelog.html":{}}}],["19.0.2",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["19.0.3",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["19.0.4",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["19.0.5",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["19.0.6",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["19.0.7",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["19.0.8",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["19.0.9",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["19.1.0",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["19.1.1",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["19.2.0",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["19.2.1",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["19.2.10",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["19.2.2",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["19.2.3",{"_index":3083,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.4",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["19.2.5",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["19.2.6",{"_index":4977,"title":{},"body":{"dependencies.html":{}}}],["19.2.7",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["19.2.8",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["19.2.9",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["19.2.x",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["19.3.0",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["19.4.0",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["19.4.1",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["19.4.10",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["19.4.11",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["19.4.12",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["19.4.13",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["19.4.14",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["19.4.15",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["19.4.2",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["19.4.3",{"_index":3022,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.4.4",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["19.4.5",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["19.4.6",{"_index":3005,"title":{},"body":{"changelog.html":{}}}],["19.4.7",{"_index":2999,"title":{},"body":{"changelog.html":{}}}],["19.4.8",{"_index":2993,"title":{},"body":{"changelog.html":{}}}],["19.4.9",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["19.5.0",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["19.5.1",{"_index":2917,"title":{},"body":{"changelog.html":{}}}],["19.5.3",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["19.5.4",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["194199c",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["195",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["1989419",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["199",{"_index":1005,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":5216,"title":{},"body":{"license.html":{}}}],["19bf065",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["1a30a33",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["1a33b93",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["1a65661",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["1a92061",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["1c4c67e",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["1c7fa4e",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["1c876b6",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["1c9fedf",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["1d0b823",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["1de2a3c",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["1e340e1",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["1e4fd87",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["1e660c9",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["1e96bc3",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["1ebb626",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["1ffd91e",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["2.8.1",{"_index":4989,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1015,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["20.0.0",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["20.1.0",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["20.1.1",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["20.1.2",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["20.1.3",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["20.1.4",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["20.2.1",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["20.2.2",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["20.2.3",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["20.2.4",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["20.2.5",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["20.2.6",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["20.2.7",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["20.2.9",{"_index":5348,"title":{},"body":{"properties.html":{}}}],["200",{"_index":2391,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["20050dc",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["20110c3",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["2011e46",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":277,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["206",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["207",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["208",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["20cf16a",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["20d1b8b",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["20rem",{"_index":2256,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["2119d47",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["220",{"_index":2547,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["220c7f4",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["221781e",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["223",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["228ee85",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["22afab3",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["22da5c7",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["22ec300",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["23061dd",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["2346f13",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["235",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["2389739",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2501,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["240",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["241",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["242",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["2427749",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["2434ec6",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["24e4c9a",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2365,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["250",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["2500235",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["250d7f9",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["251",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":1014,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":274,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["26",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["261",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["264",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["2708806",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["272",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["275e54d",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["27acba5",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["27fdc57",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["28465d6",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["28548eb",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["286",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["287",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["287138c",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["288",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["289",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["289ec3d",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["28cff25",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["292ed5a",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["29878bc",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["29f1cbe",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["29f2b37",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["2a4184c",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["2a427ed",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["2a99961",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["2ab7cc1",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["2b942c4",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["2bb0e78",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["2bb5430",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["2bcfefb",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["2bdc500",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["2bfabd0",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["2c0f612",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["2ce3664",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["2d68f3b",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["2db5dc7",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["2e2cf66",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["2e5b003",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["2eb6cae",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["2f0d555",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["2f592f3",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["2f67e34",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.0.2",{"_index":4988,"title":{},"body":{"dependencies.html":{}}}],["3.0.4",{"_index":4987,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":4980,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4984,"title":{},"body":{"dependencies.html":{}}}],["3.9.17",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["3.9.19",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":2367,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["300",{"_index":1047,"title":{},"body":{"injectables/GamepadService.html":{}}}],["3000",{"_index":468,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["301",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["305aec6",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["308b3e5",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["308bd9f",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["30_000",{"_index":1273,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["30fec73",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["30fps",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["310",{"_index":465,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["312",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["314f02a",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":271,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3233ed1",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["32570e0",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["32768",{"_index":5374,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":281,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["32c3f4d",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["32e3ad6",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["331bb8f",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["337a109",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["338",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["339af30",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["339bd87",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["339d07b",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["33bb6c8",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["33d73d9",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["34663be",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":2369,"title":{},"body":{"injectables/ThemeService.html":{}}}],["358",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["3597f8b",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["35a78e4",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["360px",{"_index":1211,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["362",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["362d9db",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["368",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["369",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["372",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["3773370",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["3797092",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["37f76dc",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["37fa04d",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["381",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["389407a",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["38d27f1",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["390",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["392b41d",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["395",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["397399b",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1341,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3a9067b",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["3acc7bf",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["3bccffb",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["3ccea4c",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["3ce805f",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["3d1f63c",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["3e58c71",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["3e7b9a4",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["3e8e5d0",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["3f2c562",{"_index":2928,"title":{},"body":{"changelog.html":{}}}],["3f449ec",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["3f668a5",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["3f73f6e",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["3fbfb97",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["3ff6d19",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":5206,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":4985,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":3761,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["4.1.1",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["4.4",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["40",{"_index":2371,"title":{},"body":{"injectables/ThemeService.html":{}}}],["401",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["402",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["4035819",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["403737f",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["4040b59",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["409",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["4096",{"_index":278,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["40cc765",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":5347,"title":{},"body":{"overview.html":{}}}],["411",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["4164d59",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["418b524",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["419",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["41e632f",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["422fc8e",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["423",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["424242",{"_index":2594,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["42a58d9",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["42f56c1",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["431",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["431a9ad",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["43463ab",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["438",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["43a40a4",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["43d9b1f",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["440hz",{"_index":684,"title":{},"body":{"interfaces/Chainable.html":{}}}],["448",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["450",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["452f074",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["455",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["457",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["460",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["465",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["466",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["467",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["468",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["4695772",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["469a890",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["46c60ce",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["46e627b",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["473",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["4781958",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["47842e1",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["478c88a",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["47b6776",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["47e3527",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["483",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["49a76e8",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["49b1735",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["49d8293",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["4a42a18",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["4a4b1c4",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["4a66bde",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["4bdbceb",{"_index":4279,"title":{},"body":{"changelog.html":{}}}],["4c16c1e",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["4c272db",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["4c8c0ad",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["4c8f851",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["4d47689",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["4d9ca69",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["4dbf4b8",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["4df45ed",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["4e27dea",{"_index":2922,"title":{},"body":{"changelog.html":{}}}],["4e72fcd",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["4e9a327",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["4eac2a7",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["4ec2e90",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["4ef0700",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["4f1794f",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["4f70846",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["4f91524",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["4feefcd",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":1002,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":741,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["5059439",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["505e77f",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["5061051",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["50b7005",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["50dbff9",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["5101ea6",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["511",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["51154fe",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":275,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":1987,"title":{},"body":{"injectables/PlayerService.html":{}}}],["51304c2",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["51a51dd",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["51e219a",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["521e049",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["522",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["5273759",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["529",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["52afb10",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["52bf10d",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["52d642b",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["5302fb4",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["532",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["5321e86",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["53749c8",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["53818e8",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["539",{"_index":2898,"title":{},"body":{"changelog.html":{}}}],["53a8631",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["540",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["540fdd8",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["541",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["5467c6f",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["549bfa1",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["55e56b8",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["55f3319",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["569161e",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["56a3899",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["572a9f8",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["5742e12",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["57f591d",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["58",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["580c58d",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["5824006",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["586ef29",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["58fb13b",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["592ac3b",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["592cb7a",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["597ee4f",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["59f1df2",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["59f4ac4",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["5a61397",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["5a7054c",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["5a92c07",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["5aecee8",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["5aed853",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["5af2ad7",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["5bab2a7",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["5c1346d",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["5cbeb5b",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["5cec62d",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["5e77b33",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["5ed4032",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["5effed4",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["5f1d097",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["5fe0756",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["5ffbd62",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["5sec.mp3",{"_index":685,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["6.3.0",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["6.3.1",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["6.4.0",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["6.4.1",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["6.5.0",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["6.5.1",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["6.5.2",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["6.5.3",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["6.5.4",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["6.5.5",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["6.5.6",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["6.5.7",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["6.5.8",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["6.5.9",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["6.6.0",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["6.6.1",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["6.6.2",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["6.6.4",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["6.6.5",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["6.6.6",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["6.6.7",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["6.7.0",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["6.7.1",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["6.7.2",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["6.7.3",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["6.7.4",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["60",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":466,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["6000",{"_index":469,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600f7e6",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["60d5b05",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["60dbedc",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["61721ca",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["61eb69b",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["620afb8",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["62c64c5",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["62cfee7",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["62f7474",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["635e855",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["63600c3",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["63f69d0",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":272,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["646c494",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["64a34dc",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["64d30e1",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["654bac2",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["667c54e",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["667f875",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["669facb",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["670b3af",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["6756668",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["6782ecd",{"_index":4947,"title":{},"body":{"changelog.html":{}}}],["678aef6",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["67a17ee",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["681d4cd",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["6841a21",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["6878f22",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["68d9939",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["68e8dc6",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["6926167",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["6966d17",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["69ed6f4",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["6a6ec18",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["6a8d3be",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["6aed158",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["6b0ec83",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["6b2d8b8",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["6b5e613",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["6b9ff38",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["6bc0773",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["6bd60c5",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["6bf609d",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["6bfb6ba",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["6c219df",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["6c27523",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["6c63788",{"_index":2968,"title":{},"body":{"changelog.html":{}}}],["6c6f88c",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["6cab435",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["6cd086c",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["6cee32d",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["6d26668",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["6d2a8fe",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["6d52ad4",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["6d67484",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["6d6f310",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["6ee2324",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["6f12a37",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["6f1cdb4",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["6f6ac17",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["6fc1434",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["6fdfa5a",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":999,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["7.0.0",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["7.0.2",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["7.0.3",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["7.0.4",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["7.0.5",{"_index":4446,"title":{},"body":{"changelog.html":{}}}],["7.0.6",{"_index":4441,"title":{},"body":{"changelog.html":{}}}],["7.1.0",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["7.1.1",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["7.2.0",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["7.8.2",{"_index":4986,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2375,"title":{},"body":{"injectables/ThemeService.html":{}}}],["707a0cb",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["70990de",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["71bd586",{"_index":4139,"title":{},"body":{"changelog.html":{}}}],["71e1d6c",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":2158,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["72075fe",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["722901c",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["72575f6",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["726da93",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["72be3d3",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["72dafd7",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["72fa061",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["73",{"_index":2524,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["73050ff",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["7353f84",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["7362da7",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["73b9b59",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["73bd100",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["73ed2ca",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["7440340",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["7445539",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["7445cc4",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["7484f35",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["748a302",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["7493e98",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["74e7c83",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["7522583",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["7528cd4",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["752aa76",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["7553170",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["7560dfa",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["756dc90",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["7593825",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["75fc12c",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["764711a",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["76ace70",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["77091b9",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["774ffed",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["7762874",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["77707fb",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["7785053",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["77c544b",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["78fcf7a",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["79c83aa",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["79d861d",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["79fee74",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["7a1bbe5",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["7a66d5a",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["7a6f294",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["7a838a9",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["7a8645a",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["7b38580",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["7b491de",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["7b8cdeb",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["7bebf2d",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["7c00473",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["7c5bbe5",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["7ccbc95",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["7cf10f9",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["7d3846a",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["7d9d809",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["7def043",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["7defe9b",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["7e45969",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["7f1e3c1",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["7f8ad27",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["7f90220",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["7fa33e8",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["7fb56e0",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["7fcd244",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["8.0.0",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["8.0.1",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["8.1.0",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["8.1.1",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["8.1.10",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["8.1.2",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["8.1.3",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["8.1.4",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["8.1.5",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["8.1.6",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["8.1.7",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["8.1.8",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["8.1.9",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["80",{"_index":2377,"title":{},"body":{"injectables/ThemeService.html":{}}}],["800",{"_index":5440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800fdae",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["801cd46",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["80553e8",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["80b42ce",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["80d5e14",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["8192",{"_index":279,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["81bb449",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["822ff08",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["8264f64",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["8268a8b",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["826cbe5",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["828148a",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["8337321",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["834f706",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["8377116",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["839a546",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["8448134",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["845189d",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["84a2466",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["84ac04c",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["84e91e3",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["8515368",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["858ff56",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["8596088",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["85d2a14",{"_index":2933,"title":{},"body":{"changelog.html":{}}}],["85eb0ba",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["8626722",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["864d7e1",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["866de3e",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["869dddb",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["86a18bb",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["86a63af",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["86bda79",{"_index":4250,"title":{},"body":{"changelog.html":{}}}],["86be7eb",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["870e50b",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["8738efc",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["87adc2c",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["892689d",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["8a371a0",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["8aabc76",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["8b184a4",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["8b6bfeb",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["8b9fdf5",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["8c297a1",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["8c47814",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["8c56320",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["8c75c5f",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["8c90a58",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["8c9c5c3",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["8cab1e2",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["8d072f1",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["8d3ed72",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["8d47dd4",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["8d5f783",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["8d61f2e",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["8da74bb",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["8df3910",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["8dfc611",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["8e2ff5a",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["8e36da3",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["8e7ecec",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["8ebff84",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["8ec046f",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["8ee0628",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["8f60273",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["9.0.0",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["9.0.1",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["9.0.10",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["9.0.11",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["9.0.2",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["9.0.3",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["9.0.4",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["9.0.5",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["9.0.6",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["9.0.7",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["9.0.8",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["9.0.9",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["9.1.0",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["9.1.1",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["9.1.2",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["9.1.3",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["9.2.2",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["9.2.3",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["9.2.4",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":2379,"title":{},"body":{"injectables/ThemeService.html":{}}}],["901f502",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["908f395",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["90df676",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["90e9f96",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["91d4a54",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["9280e3a",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["92d89c3",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["930dc28",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["934d323",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["939f6b8",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["9458a12",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["949055a",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["94b7001",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":2381,"title":{},"body":{"injectables/ThemeService.html":{}}}],["953bf76",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["95902bb",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["96/9/ec",{"_index":5212,"title":{},"body":{"license.html":{}}}],["965f5d8",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["96bcdfc",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["96dbdf6",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["972b1ee",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["9767a1a",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["9767ad0",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["97ccbb6",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["97d68d0",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["98",{"_index":2383,"title":{},"body":{"injectables/ThemeService.html":{}}}],["986dd30",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["98a793b",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":2385,"title":{},"body":{"injectables/ThemeService.html":{}}}],["9934470",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["998ad7c",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["9b0ad09",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["9b11a20",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["9c56a21",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["9ce5e31",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["9d2ef7e",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["9d81efd",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["9dfd762",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["9e95c2d",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["9ea103a",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["9eb089c",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["9fa1a37",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["9fb4192",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["_audiocontext",{"_index":501,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audioelement",{"_index":499,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audiosourcenode",{"_index":503,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_connectedanalyzers",{"_index":510,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_eqgainnode",{"_index":507,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_frequencyfilters",{"_index":508,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_gainnode",{"_index":505,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_hasended",{"_index":514,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_internalanalyzer",{"_index":2598,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":1165,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a.album",{"_index":194,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.artist",{"_index":191,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.title",{"_index":213,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.track",{"_index":198,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.year.localecompare(b.year",{"_index":180,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a00ccd1",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["a04aa39",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["a0517fe",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["a0aa269",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["a0c15a4",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["a0e7ce7",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["a10893b",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["a11eb42",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["a12f9c3",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["a19a09f",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["a1a074f",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["a1da736",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["a280f97",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["a2a4811",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["a2b1db1",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["a358906",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["a3ae7df",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["a409033",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["a40c9e8",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["a457b9c",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["a4b6dab",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["a4de6d4",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["a552ea9",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["a555517",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["a5849e4",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["a6386d2",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["a7cf166",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["a7f82ab",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["a8073a9",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["a84cb97",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["a867afe",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["a8bb04b",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["a90639a",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["a948ad5",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["a9a8e68",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["a9a9c0b",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ab311db",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["ab5a0f8",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["ab89f63",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["ab98677",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["abandoned",{"_index":5311,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":5242,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2188,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["abc0b07",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["abccf03",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":5441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":5323,"title":{},"body":{"license.html":{}}}],["abstacted",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":1018,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":1121,"title":{},"body":{"injectables/GamepadService.html":{}}}],["ac02523",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["ac62dde",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["accent",{"_index":1001,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":2332,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":2305,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accepts",{"_index":872,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":2615,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["accessors",{"_index":419,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":5284,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":5326,"title":{},"body":{"license.html":{}}}],["achse",{"_index":1085,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":5342,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"license.html":{}}}],["action(details",{"_index":1503,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["actions/cache",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["actions/checkout",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["actions/setup",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["actions/upload",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["activated",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["activatewakelock",{"_index":2710,"title":{},"body":{"injectables/WakelockService.html":{}}}],["activeaxescaches",{"_index":1052,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["ad57b9c",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["ad6497d",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["ad7e0f1",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["ada5e83",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["ada6807",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["adapt",{"_index":5182,"title":{},"body":{"license.html":{}}}],["add",{"_index":573,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["addalbumtoplaylist",{"_index":1395,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addalbumtoplaylist(album",{"_index":247,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addartisttoplaylist",{"_index":1396,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addartisttoplaylist(artist",{"_index":242,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["added",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["addeventlistener('gamepadconnected",{"_index":1057,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":1060,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestolibrary",{"_index":1518,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["addfilestolibrary(...filedatas",{"_index":1563,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(filedatas",{"_index":1522,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestoplaylist",{"_index":1873,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...filedatas",{"_index":1997,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(filedatas",{"_index":1882,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":5285,"title":{},"body":{"license.html":{}}}],["additional",{"_index":5159,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["adds",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["addtrackstoplaylist",{"_index":1397,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addtrackstoplaylist(...dbtracks",{"_index":252,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addtracktoplaylist",{"_index":1398,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["addtracktoplaylist(song",{"_index":1884,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addtracktoplaylist(track",{"_index":250,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["adjust",{"_index":5056,"title":{},"body":{"index.html":{}}}],["advertising",{"_index":5256,"title":{},"body":{"license.html":{}}}],["ae202ad",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["ae93b7a",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["aefd739",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["af0ef42",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["af2926f",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["af8a6b4",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["affected",{"_index":5286,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":5164,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":5244,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":5301,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":1973,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":1971,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":933,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["again",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":5200,"title":{},"body":{"license.html":{}}}],["agents",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["aiff",{"_index":912,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":77,"title":{"interfaces/Album.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["album.coverurl",{"_index":1427,"title":{},"body":{"components/LibraryComponent.html":{}}}],["album.name",{"_index":249,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["album.year",{"_index":1428,"title":{},"body":{"components/LibraryComponent.html":{}}}],["albumcompare",{"_index":193,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap",{"_index":170,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.has(albumname",{"_index":174,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.set(albumname",{"_index":175,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.values()].sort((a",{"_index":178,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumname",{"_index":172,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albums",{"_index":169,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["aliases",{"_index":5369,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1006,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allex/crc32",{"_index":1546,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["allowed_extensions",{"_index":920,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":842,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":868,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1385,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":1725,"title":{},"body":{"components/PlayerComponent.html":{}}}],["allowedcommonjsdeps",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["allowedtypes",{"_index":939,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":292,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["alpha.40",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["amended",{"_index":5222,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["analyser.disconnect",{"_index":595,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["analyserconfig",{"_index":265,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":300,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analysers",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["analyservalue",{"_index":2643,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyze",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["analyzer",{"_index":2694,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["and/or",{"_index":5117,"title":{},"body":{"license.html":{}}}],["android",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["angular",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["angular.json",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["angular/animations",{"_index":4976,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4293,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2216,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":117,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":1146,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":724,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["angular/compiler",{"_index":4978,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":89,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":1931,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":2091,"title":{},"body":{"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4298,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":113,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1697,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2401,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2537,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":1149,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":2092,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":111,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":2090,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/list",{"_index":100,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":107,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{}}}],["angular/material/progress",{"_index":126,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2538,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2218,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1694,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":902,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":1778,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":1777,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2421,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angularmaterial",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["angulartitleservice",{"_index":2410,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2600,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["api",{"_index":875,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["api_key",{"_index":1356,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":749,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["apis",{"_index":5048,"title":{},"body":{"index.html":{}}}],["app",{"_index":601,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{}}}],["app.component.html",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":311,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":5379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["append",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["applicable",{"_index":5229,"title":{},"body":{"license.html":{}}}],["application",{"_index":2277,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["applicationconfig",{"_index":5416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":5296,"title":{},"body":{"license.html":{}}}],["apply",{"_index":5168,"title":{},"body":{"license.html":{}}}],["apps",{"_index":5057,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":5380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":5401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":5410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":5393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../default",{"_index":5390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":5388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":5389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":5004,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":5009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":4992,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":5016,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../lastfm",{"_index":5372,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":5022,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":4999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":5001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":5002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":5012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":5398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":5014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":5371,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../settings.po.ts",{"_index":5396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":5392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":5370,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":4994,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":5026,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":5467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":650,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":652,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":5460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":5456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:14",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":5415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":5474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":395,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:136",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:143",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:151",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:158",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:164",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:172",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:178",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:186",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:191",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:199",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:203",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:211",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:219",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":475,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":479,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":478,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":480,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":476,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":485,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:34",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":482,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:37",{"_index":473,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:43",{"_index":487,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:45",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:8",{"_index":906,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":643,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":629,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:10",{"_index":636,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":888,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14",{"_index":898,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16",{"_index":899,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18",{"_index":896,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":836,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":78,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:140",{"_index":1412,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:146",{"_index":1411,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:151",{"_index":1413,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:157",{"_index":1410,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:164",{"_index":1407,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:173",{"_index":1406,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:178",{"_index":1409,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:182",{"_index":1408,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:199",{"_index":1415,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:203",{"_index":1414,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:207",{"_index":1416,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:46",{"_index":1417,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:47",{"_index":1418,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:51",{"_index":1420,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:52",{"_index":1419,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:53",{"_index":1421,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:55",{"_index":1424,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:63",{"_index":1423,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:90",{"_index":1422,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":717,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":1717,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:108",{"_index":1750,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:113",{"_index":1765,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:115",{"_index":1752,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:121",{"_index":1756,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:125",{"_index":1758,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:129",{"_index":1760,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:133",{"_index":1746,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:137",{"_index":1742,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:141",{"_index":1754,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:145",{"_index":1749,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:156",{"_index":1768,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:158",{"_index":1761,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:162",{"_index":1762,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:166",{"_index":1744,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:170",{"_index":1759,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:175",{"_index":1747,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:45",{"_index":1766,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:50",{"_index":1763,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:52",{"_index":1740,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":1867,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:107",{"_index":1887,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:112",{"_index":1885,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:118",{"_index":1883,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:124",{"_index":1903,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:130",{"_index":1919,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:134",{"_index":1917,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:142",{"_index":1901,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:146",{"_index":1891,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:158",{"_index":1889,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:174",{"_index":1904,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:183",{"_index":1888,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:204",{"_index":1892,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:222",{"_index":1898,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:240",{"_index":1899,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:25",{"_index":1912,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:257",{"_index":1894,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:261",{"_index":1897,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:27",{"_index":1922,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:275",{"_index":1905,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:29",{"_index":1911,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:294",{"_index":1906,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":1921,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:32",{"_index":1924,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:34",{"_index":1910,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:39",{"_index":1881,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":700,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":2047,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:161",{"_index":2062,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:167",{"_index":2064,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:173",{"_index":2066,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:178",{"_index":2067,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:44",{"_index":2080,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:45",{"_index":2068,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:46",{"_index":2085,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:47",{"_index":2079,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:50",{"_index":2083,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:52",{"_index":2078,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:64",{"_index":2082,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:66",{"_index":2060,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2403,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:10",{"_index":2404,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2455,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2486,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2480,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2484,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2482,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2490,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2488,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26",{"_index":2515,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2499,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2528,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31",{"_index":2534,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2522,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2533,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2525,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2497,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2502,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2517,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2511,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2519,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2509,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2521,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2476,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2530,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2514,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2507,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2527,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2494,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2492,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2478,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2575,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105",{"_index":2583,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126",{"_index":2585,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2589,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2586,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188",{"_index":2581,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2590,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2587,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23",{"_index":2580,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33",{"_index":2579,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93",{"_index":2592,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2698,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2703,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2701,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":266,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":5031,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":5041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":1024,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":1043,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":1036,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":1040,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":1033,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15",{"_index":1044,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":1031,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1218,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":5043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":1141,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100",{"_index":1256,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104",{"_index":1257,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26",{"_index":1260,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30",{"_index":1263,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32",{"_index":1262,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34",{"_index":1261,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36",{"_index":1259,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38",{"_index":1253,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48",{"_index":1255,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85",{"_index":1258,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96",{"_index":1254,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1436,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1442,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1453,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1457,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1456,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1458,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1465,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2405,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2409,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2408,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":5044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2708,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:11",{"_index":2713,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:28",{"_index":2714,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:7",{"_index":2712,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1672,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2189,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2300,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2395,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2194,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:24",{"_index":2213,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:25",{"_index":2210,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:35",{"_index":2209,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:37",{"_index":2212,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:39",{"_index":2205,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":5455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":2304,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:20",{"_index":2322,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:22",{"_index":2323,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:23",{"_index":2317,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:25",{"_index":2311,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:31",{"_index":2316,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:37",{"_index":2313,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":696,"title":{},"body":{"interfaces/Color.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2414,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2416,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:45",{"_index":2418,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:52",{"_index":2417,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":5453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":5454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["april",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["arguments_",{"_index":635,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["arising",{"_index":5211,"title":{},"body":{"license.html":{}}}],["arrays",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["art",{"_index":1601,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["artifact",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["artist",{"_index":157,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist/album",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["artist:${luceneescapequery.escape(artist",{"_index":764,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["artistcompare",{"_index":190,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artists",{"_index":188,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["artwork",{"_index":1982,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2415,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":5303,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1560,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":5245,"title":{},"body":{"license.html":{}}}],["associating",{"_index":5163,"title":{},"body":{"license.html":{}}}],["async",{"_index":215,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["asyncgenerator",{"_index":1525,"title":{},"body":{"injectables/MetadataService.html":{}}}],["atrack",{"_index":197,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["attorney",{"_index":5083,"title":{},"body":{"license.html":{}}}],["audio",{"_index":497,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["audio.service",{"_index":900,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":916,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":909,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":918,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":910,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":913,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":919,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":915,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":914,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":917,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/x",{"_index":911,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":502,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audiocontext.creategain",{"_index":541,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":539,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement",{"_index":517,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audioelement.autoplay",{"_index":523,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.controls",{"_index":524,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.id",{"_index":519,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.loop",{"_index":518,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.preload",{"_index":527,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.style.display",{"_index":521,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.volume",{"_index":525,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioservice",{"_index":393,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["audioservice.isplaying",{"_index":1860,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":538,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiosource.connect(eqgain",{"_index":547,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audit",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["auf",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":5352,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":5189,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":5116,"title":{},"body":{"license.html":{}}}],["auto",{"_index":528,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["autofix",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["autofixes",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["autoincrement",{"_index":5451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":5104,"title":{},"body":{"license.html":{}}}],["autoscroll",{"_index":2113,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":184,"title":{},"body":{"interfaces/Album.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2680,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2671,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2681,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avatar",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1291,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["await",{"_index":219,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":2152,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["axis.valueof",{"_index":1128,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":1133,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":1132,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":1025,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":1131,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":1134,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":1034,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":179,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["b.track",{"_index":203,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["b04ce8b",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["b0d0fe4",{"_index":2937,"title":{},"body":{"changelog.html":{}}}],["b20fd36",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["b241b46",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["b286be9",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["b2b5088",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["b2dcbb8",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["b2ed530",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["b3905a0",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["b416bff",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["b4d909a",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["b599685",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["b5dfb18",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["b5f68a1",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["b65204b",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["b6729e6",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["b6bd950",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["b708169",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["b7303ed",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["b73ce66",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["b7bb801",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["b7be438",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["b7e8f76",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["b80e2ea",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["b820bf4",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["b8ad144",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["b925747",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["b9445d4",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["b99bf0c",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ba13cfe",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["ba2a28a",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["ba634aa",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["babdb9f",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":211,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{}}}],["background",{"_index":1012,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["backgroundcolor",{"_index":805,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["badges",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["band",{"_index":492,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"index.html":{}}}],["band.pipe",{"_index":901,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bandfrequency",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":624,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandgains[bandfrequency",{"_index":626,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandpipe",{"_index":628,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{}}}],["bands",{"_index":893,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bar",{"_index":127,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["barcount",{"_index":283,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["bark",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["barkscalebandenergy",{"_index":5381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":306,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2460,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":305,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":5382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":683,"title":{},"body":{"interfaces/Chainable.html":{}}}],["based",{"_index":5228,"title":{},"body":{"license.html":{}}}],["basegain",{"_index":396,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["basesubscribingclass",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["basevisualizeroptions",{"_index":302,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":5088,"title":{},"body":{"license.html":{}}}],["bb34f11",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["bb4a1a8",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["bb4ded8",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["bb4e0ce",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["bb8466d",{"_index":2925,"title":{},"body":{"changelog.html":{}}}],["bba9cb0",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["bbda480",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["bc4e4dc",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["bcbcbc",{"_index":2595,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["bd0ddc3",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["bd67275",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["bda90a4",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["be025cd",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["be57fa9",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["be90110",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["bef3e3e",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":2144,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["below",{"_index":5109,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":5258,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":1953,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":1103,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["better",{"_index":2665,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["bf7b3a9",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["bfd28ec",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["bfd4685",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["bffc736",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["bigger",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["biquadfilternode",{"_index":509,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bitrate",{"_index":645,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"changelog.html":{}}}],["bitrate.pipe",{"_index":818,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":642,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1642,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1597,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1620,"title":{},"body":{"injectables/MetadataService.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2273,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["bootstrap",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["border",{"_index":998,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["both",{"_index":205,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["bottom",{"_index":2098,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":996,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["branch",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":2030,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2214,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2215,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2227,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2226,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2225,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2228,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["browserlist",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["btrack",{"_index":202,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["buffer",{"_index":2662,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["buffer.buffer",{"_index":2687,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":304,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2667,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2664,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2661,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bugs",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3151,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["buildapiurl(method",{"_index":1350,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["builds",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["bundles",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1101,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["button.pressed",{"_index":1114,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":1116,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":1026,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":1119,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":1124,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":1037,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2183,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2242,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":5331,"title":{},"body":{"license.html":{}}}],["c.islight",{"_index":2394,"title":{},"body":{"injectables/ThemeService.html":{}}}],["c042ae8",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["c08196a",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["c0c9413",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["c0d5ae4",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["c20efb2",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["c2c0b8f",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["c3062ed",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["c31aaa6",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["c3208e7",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["c339811",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["c35bc38",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["c363f4e",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["c398655",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["c3bb2d1",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["c3d7490",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["c4668f1",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["c51af5f",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["c550911",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["c64cd79",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["c6dff5e",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["c73a2ce",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["c78b2bf",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["c82e02b",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["c86decf",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["c9dcf09",{"_index":2902,"title":{},"body":{"changelog.html":{}}}],["ca80a43",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["ca87d69",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["cace929",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":1118,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":1126,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":1120,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":1125,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cacheable",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["caching",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["calculate",{"_index":2141,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["calculating",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":597,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":1142,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{}}}],["called",{"_index":1462,"title":{},"body":{"injectables/LoaderService.html":{}}}],["cancel",{"_index":2178,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2690,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":5267,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":294,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["canvasgradient",{"_index":5413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":5383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvaswidth",{"_index":5384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2573,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":286,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":284,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":5385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":5458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":1866,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":5427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1319,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":225,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":5246,"title":{},"body":{"license.html":{}}}],["cb01a92",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["cb19d50",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["cb797bc",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["cbab637",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["cbc6e41",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["cbef1c8",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["cc0",{"_index":5076,"title":{},"body":{"license.html":{}}}],["ccbf388",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["cd2a934",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["cd5831f",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["cd620b6",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["cdb5380",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["cdf04e9",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":114,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":115,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":116,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["ce588f9",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["ce621ee",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["cea2824",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["cefa1f1",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":1008,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":5119,"title":{},"body":{"license.html":{}}}],["cf00688",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["cf13446",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["chainable",{"_index":649,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2117,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["changed",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["changedarkmode",{"_index":2397,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2398,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changelog",{"_index":2727,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":2112,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["check",{"_index":871,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":1111,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":1050,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":686,"title":{},"body":{"interfaces/Chainable.html":{}}}],["child(${link",{"_index":5470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chore",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["chore(config",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["chore(deps",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["chromaprint",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":5052,"title":{},"body":{"index.html":{}}}],["ci",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["circular",{"_index":307,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":5132,"title":{},"body":{"license.html":{}}}],["class",{"_index":135,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"overview.html":{}}}],["class.closed",{"_index":2253,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2254,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":1016,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":599,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["clear",{"_index":1711,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":5333,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":1139,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":1091,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearmetadatacache",{"_index":1678,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2301,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1303,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["cli",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":5084,"title":{},"body":{"license.html":{}}}],["close",{"_index":1231,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2243,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2452,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2245,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closing",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["clr",{"_index":2344,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.hex",{"_index":2348,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.name",{"_index":2347,"title":{},"body":{"injectables/ThemeService.html":{}}}],["code",{"_index":2278,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":695,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"index.html":{}}}],["color.getbrightness",{"_index":2393,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.tohexstring(false",{"_index":2392,"title":{},"body":{"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":699,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2651,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2649,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2650,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorful",{"_index":5349,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":2314,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["colors.ts",{"_index":5391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":2282,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["command",{"_index":674,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":661,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":657,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":5145,"title":{},"body":{"license.html":{}}}],["committen",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["commons",{"_index":5074,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":5184,"title":{},"body":{"license.html":{}}}],["compare",{"_index":187,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["comparison",{"_index":212,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["compatibility",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["compensation",{"_index":5161,"title":{},"body":{"license.html":{}}}],["competition",{"_index":5202,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2119,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["compodoc",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":84,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["component_template",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":312,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2422,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2176,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":929,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlayerComponent.html":{}}}],["components/slide",{"_index":2235,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":665,"title":{},"body":{"interfaces/Chainable.html":{}}}],["compressed",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["computecolors(hex",{"_index":2359,"title":{},"body":{"injectables/ThemeService.html":{}}}],["computed",{"_index":85,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":5317,"title":{},"body":{"license.html":{}}}],["confer",{"_index":5105,"title":{},"body":{"license.html":{}}}],["config",{"_index":2450,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["config).afterclosed",{"_index":2454,"title":{},"body":{"injectables/UpdateService.html":{}}}],["configuration",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":546,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["connected",{"_index":1069,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":1062,"title":{},"body":{"injectables/GamepadService.html":{}}}],["consents",{"_index":5337,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":5160,"title":{},"body":{"license.html":{}}}],["consistency",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["console",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["console.error('error",{"_index":227,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('file",{"_index":259,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('worker",{"_index":1316,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":567,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["console.log('button",{"_index":1080,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":1961,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":1086,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":860,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":1084,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":1097,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":1093,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2433,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2429,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2440,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":1088,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":1067,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2610,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":1070,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1576,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('hash",{"_index":1581,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('id3tags",{"_index":1603,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('vibrant",{"_index":1616,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('webcover",{"_index":1608,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1578,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('hash",{"_index":1583,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('id3tags",{"_index":1605,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('vibrant",{"_index":1618,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('webcover",{"_index":1611,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":1100,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":1108,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":760,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('loaderservice",{"_index":1461,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('missing",{"_index":1612,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('no",{"_index":786,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":2722,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":1175,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1498,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":151,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["constructor",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["contemplated",{"_index":5273,"title":{},"body":{"license.html":{}}}],["content",{"_index":1010,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["context",{"_index":534,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contrary",{"_index":5305,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":5235,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":5146,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":5125,"title":{},"body":{"license.html":{}}}],["control",{"_index":2289,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["controls",{"_index":5060,"title":{},"body":{"index.html":{}}}],["converter",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["converttobarkscale",{"_index":4993,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":5255,"title":{},"body":{"license.html":{}}}],["copy",{"_index":983,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":5107,"title":{},"body":{"license.html":{}}}],["core",{"_index":496,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["corporation",{"_index":5079,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2630,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["corresponding",{"_index":5227,"title":{},"body":{"license.html":{}}}],["council",{"_index":5215,"title":{},"body":{"license.html":{}}}],["count",{"_index":740,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["cover",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cover_api_url",{"_index":751,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverart",{"_index":1709,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["coverartimage",{"_index":716,"title":{"interfaces/CoverArtImage.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverartresponse",{"_index":744,"title":{"interfaces/CoverArtResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":806,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":787,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":704,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":713,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":1908,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":1909,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":776,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":778,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdisplay",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["coverdisplaycomponent",{"_index":357,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":777,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":782,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["covers",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["coverurl",{"_index":79,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1606,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.original",{"_index":1615,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc",{"_index":709,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["crc32",{"_index":1545,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc32(hashstring",{"_index":1654,"title":{},"body":{"injectables/MetadataService.html":{}}}],["create",{"_index":516,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":1083,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":1079,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture",{"_index":1519,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1526,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile",{"_index":1520,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(filedata",{"_index":1529,"title":{},"body":{"injectables/MetadataService.html":{}}}],["creative",{"_index":5073,"title":{},"body":{"license.html":{}}}],["creator",{"_index":5111,"title":{},"body":{"license.html":{}}}],["crossing",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["css",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["cultural",{"_index":5126,"title":{},"body":{"license.html":{}}}],["culture",{"_index":5150,"title":{},"body":{"license.html":{}}}],["current",{"_index":2121,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["currentanalyser",{"_index":2626,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2620,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2624,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":848,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":2145,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":2295,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":1868,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2618,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2622,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":1869,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["currentposition",{"_index":2017,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":397,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":819,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{}}}],["currenttrack.metadata?.crc",{"_index":2135,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":821,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":823,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":822,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":830,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":829,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":828,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":826,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":831,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":820,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":824,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["custom",{"_index":660,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":5462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":5472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":5465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":5466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":5463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":5473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":5457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":5461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":5469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":676,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":530,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":691,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":687,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":675,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":692,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":5340,"title":{},"body":{"license.html":{}}}],["d0b8d34",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["d0cd94f",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["d1b4f51",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["d200e57",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["d254989",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["d2765b8",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["d29b113",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["d2e1df8",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["d2f46f8",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["d3",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["d38c534",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["d3bca3a",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["d489b64",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["d4abfdc",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["d505863",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["d50fcd7",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["d516e97",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["d562368",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["d597302",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["d5cd7ea",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["d612735",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["d6210df",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["d629a20",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["d641392",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["d64a3c3",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["d690072",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["d78443f",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["d7b3ea2",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["d895f0f",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["d8a2bf9",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["d8bf0e7",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["d954540",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["d9677d0",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":5096,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2357,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{}}}],["dark)').matches",{"_index":2321,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":697,"title":{},"body":{"interfaces/Color.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":2306,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":793,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":792,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2447,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":1000,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":230,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["data.album.image",{"_index":1361,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2187,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2186,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":769,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["database",{"_index":5118,"title":{},"body":{"license.html":{}}}],["databaseconfig",{"_index":5386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":5218,"title":{},"body":{"license.html":{}}}],["date",{"_index":737,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"license.html":{}}}],["dateien",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["dates",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["db",{"_index":93,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["db2122c",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["db48fe2",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["dbb788d",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["dbc354f",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["dbconfig",{"_index":5446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbtrack",{"_index":253,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle",{"_index":257,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle?.getfile",{"_index":255,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtracks",{"_index":254,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dc41223",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["dc45fe1",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["dc55360",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["dd93cb1",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["ddab2f3",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["de5bda9",{"_index":4311,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["december",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["declare",{"_index":671,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorator",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":2270,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":1728,"title":{},"body":{"components/PlayerComponent.html":{}}}],["decreasevolume(value",{"_index":1741,"title":{},"body":{"components/PlayerComponent.html":{}}}],["deemed",{"_index":5294,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":1048,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":1046,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":1160,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["defects",{"_index":5325,"title":{},"body":{"license.html":{}}}],["defined",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1250,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":2124,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dep",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":2617,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["depicted",{"_index":5197,"title":{},"body":{"license.html":{}}}],["deploy",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":2991,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":1027,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":1032,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":1028,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":1035,"title":{},"body":{"injectables/GamepadService.html":{}}}],["description",{"_index":1143,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{},"changelog.html":{},"properties.html":{}}}],["desktop",{"_index":5064,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":1935,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1327,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":1925,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["details",{"_index":1475,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":2026,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":2025,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":2118,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["determine",{"_index":2143,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":5260,"title":{},"body":{"license.html":{}}}],["dev",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["devcontainer.json",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["dfa400c",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":1158,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":1153,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1226,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1225,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1219,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2180,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":2181,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1235,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1234,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1237,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2179,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1233,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2177,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":1164,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1208,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1215,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":5489,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["didn't",{"_index":886,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["diesen",{"_index":1169,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dir",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":353,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":874,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":1859,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["dirhandle",{"_index":5042,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dirhandle.values",{"_index":865,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry",{"_index":835,"title":{"interfaces/DirHandleEntry.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry).topromise",{"_index":859,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":2042,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["disableclose",{"_index":2451,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabled",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["disabletooltipinteractivity",{"_index":5442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":5306,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":5094,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2692,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["disconnectallanalyzers",{"_index":407,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["disconnectanalysernode",{"_index":408,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["disconnected",{"_index":1089,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":1087,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":5329,"title":{},"body":{"license.html":{}}}],["display",{"_index":801,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":1780,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":803,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":804,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":800,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":815,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":813,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":811,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":644,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:8",{"_index":646,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":799,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayed",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["displayfunction",{"_index":894,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":895,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":1190,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":5270,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":5208,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2142,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":5170,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":5082,"title":{},"body":{"license.html":{}}}],["document",{"_index":1145,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":532,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["document.body.append(this.fileinput",{"_index":1387,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1379,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style.setproperty",{"_index":2345,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2438,"title":{},"body":{"injectables/UpdateService.html":{}}}],["documented",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":297,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["dotenv",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["double",{"_index":870,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["doubleclick",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["download",{"_index":1708,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2631,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drag",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["dragend",{"_index":975,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":962,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":967,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":959,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":944,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":972,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":961,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":970,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":960,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":2672,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":4995,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":4996,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":4997,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawosc",{"_index":4998,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":363,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":943,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":963,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dual",{"_index":690,"title":{},"body":{"interfaces/Chainable.html":{}}}],["dummy",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["duplicates",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["duration",{"_index":398,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":1870,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2448,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":5344,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":4979,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1184,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2292,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":1186,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":1187,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e102482",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["e11e3bd",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["e218808",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["e252172",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["e2a0794",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["e2e1eb4",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["e336db1",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["e34b732",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["e36192c",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["e42b61f",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["e486f52",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["e4b565b",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["e4d8e7c",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["e4ec6c1",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["e5de213",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["e615145",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["e6660e2",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["e6d7fd2",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["e6fc6eb",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["e7032e1",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["e727ac0",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["e7aa58d",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["e7c9ada",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["e844d5d",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["e933c61",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["e96ef56",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["e992cb4",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["e99d4f2",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["ea0dd16",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["ea1fc76",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["ea63800",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["ea688e0",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["ea932ef",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["eaa27a6",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["eab1d35",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["eac8dd6",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":1570,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{},"license.html":{}}}],["eaeb47a",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["eaf46cf",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["eaf70a8",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["eb5338b",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["ebab8da",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["ec067ee",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["ec1f94a",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["eccaa4a",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["ecf45e6",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["ed57248",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["ee83304",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["ee8b31b",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["ef11066",{"_index":2895,"title":{},"body":{"changelog.html":{}}}],["ef22e4a",{"_index":4396,"title":{},"body":{"changelog.html":{}}}],["ef650c5",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["efc9aad",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["eff95d0",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1485,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":5295,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":5155,"title":{},"body":{"license.html":{}}}],["eine",{"_index":1104,"title":{},"body":{"injectables/GamepadService.html":{}}}],["electron",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["elects",{"_index":5167,"title":{},"body":{"license.html":{}}}],["element",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":953,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":498,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["elementscrolled",{"_index":2101,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2603,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2606,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embedded",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["embeddedpicture",{"_index":712,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["empty",{"_index":1246,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":2095,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":2114,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1349,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1348,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":682,"title":{},"body":{"interfaces/Chainable.html":{}}}],["endings",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["enhance",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["enjoyment",{"_index":5272,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2677,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":2125,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":732,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(coverimage.image",{"_index":785,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails.large",{"_index":784,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails['500",{"_index":781,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(images[1]['#text",{"_index":1363,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(images[5]['#text",{"_index":1364,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(url",{"_index":5037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entfernt",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["entries",{"_index":2168,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["entries[0].contentrect",{"_index":2641,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":850,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["entry.getfile",{"_index":867,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.handle",{"_index":855,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":866,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":4991,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":5387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":5422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":551,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["eqgain",{"_index":542,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.connect(eqinput",{"_index":548,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.gain.value",{"_index":558,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqinput",{"_index":543,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput",{"_index":544,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput.connect(gain",{"_index":549,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equalizer",{"_index":889,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"index.html":{}}}],["equalizer'},{'name",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizer.component.html",{"_index":891,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":892,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":360,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":399,"title":{"interfaces/EqualizerGainValues.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equitable",{"_index":5269,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":5226,"title":{},"body":{"license.html":{}}}],["error",{"_index":226,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/WakelockService.html":{}}}],["error('metadata",{"_index":1288,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1326,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1312,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1321,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error.message",{"_index":2723,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errorevent",{"_index":1315,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":5328,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1638,"title":{},"body":{"injectables/MetadataService.html":{}}}],["erweitert",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["es",{"_index":1247,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"changelog.html":{}}}],["esbuild",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["escape",{"_index":727,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["eslint",{"_index":2041,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"additional-documentation/helpers.html":{}}}],["eslint/utils",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["eslintrc",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["establish",{"_index":2616,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["etag",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["european",{"_index":5213,"title":{},"body":{"license.html":{}}}],["event",{"_index":574,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["event.checked",{"_index":1700,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["event.currentversion.hash",{"_index":2434,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1309,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2668,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2669,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":982,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":981,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2442,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":1068,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2435,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":979,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.stoppropagation",{"_index":980,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2427,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2431,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventcoalescing",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["eventmanager",{"_index":1150,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":600,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":656,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":666,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusions",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["exclusive",{"_index":5106,"title":{},"body":{"license.html":{}}}],["execute",{"_index":5488,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["executor",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["exercise",{"_index":5293,"title":{},"body":{"license.html":{}}}],["existing",{"_index":663,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["exists",{"_index":2695,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["exit",{"_index":602,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["expect",{"_index":1957,"title":{},"body":{"injectables/PlayerService.html":{}}}],["expectation",{"_index":5158,"title":{},"body":{"license.html":{}}}],["expected",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":5355,"title":{},"body":{"todo.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":5274,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2291,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":4924,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["extent",{"_index":5165,"title":{},"body":{"license.html":{}}}],["extractcolorswithnodevibrant",{"_index":5000,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurls.original",{"_index":1617,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(objecturl",{"_index":1622,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1658,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1360,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extraction",{"_index":1298,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":5055,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1268,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1270,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["f038069",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["f0442a7",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["f06b116",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["f076ced",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["f0ae911",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["f0f7618",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["f12cad8",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["f154aed",{"_index":2959,"title":{},"body":{"changelog.html":{}}}],["f1580e8",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["f18fa1f",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["f1b02b7",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["f1cad4d",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["f1f709b",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["f201082",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["f209ddb",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["f24dcc7",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["f278040",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["f2cfbcc",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["f306ca1",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["f31886e",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["f3351c2",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["f34b7cf",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["f36895a",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["f37d715",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["f386a36",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["f3a09c7",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["f3a3520",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["f3f4ae7",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["f3f93f6",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["f401a49",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["f4324a4",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["f4928f5",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["f4f50ef",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["f52095f",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["f54702d",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["f591692",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["f5c6154",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["f5ee0e6",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["f69d368",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["f78467f",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["f7913c1",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["f8b7451",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["f8cbc65",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["f908dd2",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["f954f07",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["f9c114e",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["f9c93ce",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["fall",{"_index":210,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["fallback",{"_index":5276,"title":{},"body":{"license.html":{}}}],["fallback_accent_color",{"_index":2327,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":2328,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2574,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["false",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2151,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{}}}],["fb05c12",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["fc633d2",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["fc998b4",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["fd18536",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["fd45c70",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["fdad632",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["fe15d24",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["fe4ebfa",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["fear",{"_index":5130,"title":{},"body":{"license.html":{}}}],["feat",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5049,"title":{},"body":{"index.html":{}}}],["february",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["fee270f",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["fee5161",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["fefaba0",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["fetchalbuminfo(artist",{"_index":1346,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":773,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ff778a5",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["ff7cdad",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["ffa9bb5",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["ffc8723",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["ffe5da9",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["ffnet",{"_index":1168,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2570,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2461,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":267,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2093,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.arraybuffer",{"_index":1657,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.lastmodified",{"_index":1653,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.name",{"_index":1650,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.size",{"_index":1652,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.type",{"_index":1651,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata",{"_index":843,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["filedata.file",{"_index":1579,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.file.name",{"_index":1624,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.filehandle",{"_index":1580,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.push",{"_index":876,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedata.push(...subfiles",{"_index":879,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedatas",{"_index":1524,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["filedatas.values",{"_index":1567,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedatas?.length",{"_index":1564,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":362,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":256,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filehandle.getfile",{"_index":1967,"title":{},"body":{"injectables/PlayerService.html":{}}}],["fileinput",{"_index":1375,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":991,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":845,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice:11",{"_index":1374,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:18",{"_index":1716,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:20",{"_index":1713,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:27",{"_index":1371,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:29",{"_index":1372,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:30",{"_index":1715,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:40",{"_index":1714,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:46",{"_index":1373,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservicefactory",{"_index":5003,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":710,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["filepath",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{}}}],["filesdroped",{"_index":940,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filestoprocess",{"_index":1562,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesystemdirectoryhandle",{"_index":841,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filesystemfilehandle",{"_index":707,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["fill",{"_index":2682,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":554,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["filter((artist",{"_index":156,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filter((song",{"_index":2073,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["filter.gain.value",{"_index":556,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["filtered",{"_index":152,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.filter((item",{"_index":163,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.sort((a",{"_index":186,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filteredplaylist",{"_index":2054,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["filteredplaylist().length",{"_index":2167,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["filtering",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":1445,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["findreleasegroupid(artist",{"_index":762,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":2670,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":1096,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebase",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["firebuttonaction(index",{"_index":1092,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":5081,"title":{},"body":{"license.html":{}}}],["first",{"_index":189,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["firstvaluefrom",{"_index":101,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2453,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":768,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getall('metatags",{"_index":220,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('dirhandle",{"_index":851,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('metatags",{"_index":1586,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":5321,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["fix(deps",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["fix(eslint",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":995,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["flac",{"_index":922,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["flat",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":994,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["float32array",{"_index":5032,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2290,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["fns",{"_index":4981,"title":{},"body":{"dependencies.html":{}}}],["folders",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":5180,"title":{},"body":{"license.html":{}}}],["font",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":5140,"title":{},"body":{"license.html":{}}}],["format",{"_index":711,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formating",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["formatlabel",{"_index":1729,"title":{},"body":{"components/PlayerComponent.html":{}}}],["formatlabel(value",{"_index":1743,"title":{},"body":{"components/PlayerComponent.html":{}}}],["formats",{"_index":5051,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":1769,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":1839,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatting",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":2051,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["found",{"_index":260,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":5149,"title":{},"body":{"license.html":{}}}],["freely",{"_index":5138,"title":{},"body":{"license.html":{}}}],["frequency",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["frequency_bands",{"_index":491,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["frequencyband",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["frequencybarsconfig",{"_index":282,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":5394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":719,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["full",{"_index":5478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen/multiwindow",{"_index":5366,"title":{},"body":{"todo.html":{}}}],["fully",{"_index":5238,"title":{},"body":{"license.html":{}}}],["function",{"_index":863,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":2753,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["funkt",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["further",{"_index":5151,"title":{},"body":{"license.html":{}}}],["future",{"_index":5250,"title":{},"body":{"license.html":{}}}],["für",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["gain",{"_index":540,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":550,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gain.gain.value",{"_index":560,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainnode",{"_index":506,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainvalue",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gamepad",{"_index":1065,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":1112,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":1045,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":1806,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":1816,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":1807,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":1058,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":1063,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":1066,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":1023,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":5008,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":285,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gax",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["gblaster",{"_index":5045,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1641,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":2734,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":5010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1644,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehash(filedata.file",{"_index":1582,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generatefilehashmd5(file",{"_index":1655,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["generator.bitdroid.de/#section",{"_index":5069,"title":{},"body":{"index.html":{}}}],["generierte",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["getanalysernode",{"_index":2591,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getaudiofilesfromdirhandle",{"_index":5011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":864,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":878,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(this.currentfolderhandle",{"_index":862,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2659,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2660,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":5395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcolorobject(value",{"_index":2387,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getcoverdisplay",{"_index":5397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1365,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":753,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1389,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":409,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gethasended",{"_index":486,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1236,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":654,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":678,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1521,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(filedata",{"_index":1531,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":5399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":5013,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":2014,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":2036,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":5400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":5402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":2725,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettoolbartitle",{"_index":5403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":5404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":1833,"title":{},"body":{"components/PlayerComponent.html":{}}}],["getvolumeslider",{"_index":5405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gh",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2629,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":1955,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":1959,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":2319,"title":{},"body":{"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":1072,"title":{},"body":{"injectables/GamepadService.html":{}}}],["google",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["gp",{"_index":1074,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":1073,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":1075,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":5406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":887,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":852,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":884,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["greater",{"_index":5153,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5233,"title":{},"body":{"license.html":{}}}],["group/${releasegroupid",{"_index":775,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["group?query=${query}&limit=5&fmt=json",{"_index":767,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":739,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":770,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":771,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["grpc/grpc",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["hack",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":840,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.requestpermission",{"_index":885,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":990,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1314,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlemessage",{"_index":1307,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":1183,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["handles",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["hanging",{"_index":1292,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1212,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["hashing",{"_index":1647,"title":{},"body":{"injectables/MetadataService.html":{}}}],["hashstring",{"_index":1649,"title":{},"body":{"injectables/MetadataService.html":{}}}],["height",{"_index":2159,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":5261,"title":{},"body":{"license.html":{}}}],["held",{"_index":5309,"title":{},"body":{"license.html":{}}}],["help",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["helpers",{"_index":5490,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":1163,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":669,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":5236,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":5093,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":5098,"title":{},"body":{"license.html":{}}}],["hex",{"_index":698,"title":{},"body":{"interfaces/Color.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":987,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1382,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1454,"title":{},"body":{"injectables/LoaderService.html":{}}}],["hilfe",{"_index":1170,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["history",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["hk",{"_index":1201,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":1203,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hooks",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["hopefully",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":992,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2274,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2288,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2271,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2272,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2284,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2287,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2285,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2286,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2252,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":955,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hosting",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["hotkey",{"_index":1140,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1239,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1242,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1245,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":1154,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1229,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeys.service",{"_index":1222,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1217,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":365,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":1155,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":5015,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["htmlaudioelement",{"_index":500,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["htmlcanvaselement",{"_index":2599,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlinputelement",{"_index":1376,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":747,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["http_interceptors",{"_index":5443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":723,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["httpevent",{"_index":1443,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1441,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1444,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1439,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":5068,"title":{},"body":{"index.html":{}}}],["https://coverartarchive.org",{"_index":752,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://github.com/motabass/gblaster",{"_index":5351,"title":{},"body":{"properties.html":{}}}],["https://musicbrainz.org/ws/2",{"_index":750,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://on.cypress.io/custom",{"_index":670,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":5070,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/20917710/fast",{"_index":1648,"title":{},"body":{"injectables/MetadataService.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1342,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["husky",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":3494,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["iconregistry",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgicon('logo",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgiconset(sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":3855,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["id",{"_index":735,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":730,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3coverpicture",{"_index":701,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":729,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3tagsservice",{"_index":1266,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":5148,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":705,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ignore",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["ignores",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["ii",{"_index":5186,"title":{},"body":{"license.html":{}}}],["iii",{"_index":5191,"title":{},"body":{"license.html":{}}}],["image",{"_index":720,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"license.html":{}}}],["image.front",{"_index":779,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images",{"_index":745,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images[5]?.['#text",{"_index":1362,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["iml",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":1829,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["implementation",{"_index":5220,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":5231,"title":{},"body":{"license.html":{}}}],["implements",{"_index":137,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":5318,"title":{},"body":{"license.html":{}}}],["import",{"_index":83,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":5482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":5484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":5480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":5485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1281,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["imports",{"_index":134,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["improve",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":3386,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["including",{"_index":5143,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":5135,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":1730,"title":{},"body":{"components/PlayerComponent.html":{}}}],["increasevolume(value",{"_index":1745,"title":{},"body":{"components/PlayerComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":905,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["indexed",{"_index":92,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":4640,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["indexeddbservice",{"_index":139,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["indexeddbtrackmetadata",{"_index":94,"title":{"interfaces/IndexedDbTrackMetadata.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["indexeddbtracks",{"_index":145,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ineffective",{"_index":5281,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":5298,"title":{},"body":{"license.html":{}}}],["inferred",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":5087,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":5133,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":1370,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["init",{"_index":849,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["initbarkscale",{"_index":5017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":533,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["initializetheme",{"_index":2308,"title":{},"body":{"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2208,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":86,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["inject(audioservice",{"_index":897,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2222,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":1936,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":1157,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":956,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":1156,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":1785,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["inject(gamepadservice",{"_index":1783,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":1784,"title":{},"body":{"components/PlayerComponent.html":{}}}],["inject(httpclient",{"_index":748,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["inject(id3tagsservice",{"_index":1556,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1557,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(loaderservice",{"_index":1449,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":495,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1228,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":1159,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":1934,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":2330,"title":{},"body":{"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":142,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["inject(musicbrainzservice",{"_index":1558,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":140,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(ngzone",{"_index":2597,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject(playerservice",{"_index":143,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":958,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":141,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2423,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2411,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":1782,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":2084,"title":{},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":1933,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2604,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1227,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":392,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":394,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":816,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('bars",{"_index":2588,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["input.required",{"_index":814,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":2247,"title":{},"body":{"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["inset",{"_index":1003,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2441,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":5066,"title":{},"body":{"index.html":{}}}],["instant",{"_index":2150,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["instead",{"_index":2985,"title":{},"body":{"changelog.html":{}}}],["integriert",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["intended",{"_index":5175,"title":{},"body":{"license.html":{}}}],["intending",{"_index":5263,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1437,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1438,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1433,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1435,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["intergrated",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["internal",{"_index":2693,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":1932,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":1137,"title":{},"body":{"injectables/GamepadService.html":{}}}],["introducing",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":5280,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":5299,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":5297,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":5291,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":5239,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":2058,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":2061,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":2094,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":1127,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":5018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":5033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":5019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2200,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":5020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":400,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":401,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ismediasessionsupported",{"_index":5021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnan(atrack",{"_index":207,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["isnan(btrack",{"_index":208,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["isoscvisualizeroptions",{"_index":5024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":5034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":402,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["isplaying",{"_index":403,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":2063,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isplaylistempty",{"_index":1726,"title":{},"body":{"components/PlayerComponent.html":{}}}],["isstopped",{"_index":404,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ist",{"_index":1176,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":5025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":1572,"title":{},"body":{"injectables/MetadataService.html":{}}}],["item",{"_index":2154,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["item.album",{"_index":165,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item.artist",{"_index":164,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item__content",{"_index":5471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1007,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["itemsize",{"_index":2157,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":5198,"title":{},"body":{"license.html":{}}}],["january",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["jb",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["jest",{"_index":3097,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["js",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1358,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["judged",{"_index":5278,"title":{},"body":{"license.html":{}}}],["july",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["jurisdictions",{"_index":5101,"title":{},"body":{"license.html":{}}}],["justify",{"_index":1009,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["k",{"_index":640,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kb/s",{"_index":648,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["keine",{"_index":1249,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":5058,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1185,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":1181,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":5450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":1144,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{}}}],["keys.replaceall",{"_index":1200,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":5316,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5173,"title":{},"body":{"license.html":{}}}],["known",{"_index":5248,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1639,"title":{},"body":{"injectables/MetadataService.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["lang",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":742,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["last",{"_index":1858,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["last.fm",{"_index":1345,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1548,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1340,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1329,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1336,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1332,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1339,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1338,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1335,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2675,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["late",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["latencyhint",{"_index":535,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["latent",{"_index":5324,"title":{},"body":{"license.html":{}}}],["later",{"_index":5131,"title":{},"body":{"license.html":{}}}],["latest",{"_index":2739,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["launch",{"_index":1962,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters",{"_index":1960,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":1966,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":1965,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":1954,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":5080,"title":{},"body":{"license.html":{}}}],["laws",{"_index":5100,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3211,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["lazy",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["leadingminutezero",{"_index":5040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":941,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":946,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2259,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1367,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":5075,"title":{},"body":{"license.html":{}}}],["legally",{"_index":5279,"title":{},"body":{"license.html":{}}}],["legend",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":5095,"title":{},"body":{"license.html":{}}}],["lib",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":229,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":131,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":133,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":136,"title":{"components/LibraryComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libs",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["libs/.../helpers",{"_index":5006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/helpers",{"_index":5039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":928,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":4818,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{},"properties.html":{}}}],["license.md",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["licensed",{"_index":5313,"title":{},"body":{"license.html":{}}}],["light",{"_index":2358,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":795,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":2389,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":794,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":5196,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":5144,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":5204,"title":{},"body":{"license.html":{}}}],["limited",{"_index":5179,"title":{},"body":{"license.html":{}}}],["line",{"_index":2043,"title":{},"body":{"injectables/PlayerService.html":{}}}],["linethickness",{"_index":2462,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":5468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3451,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["linting",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":2160,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":575,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lite",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":722,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/Id3Tags.html":{}}}],["load",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["loadcomponent",{"_index":5479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["loadedtrack",{"_index":2010,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":837,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":844,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loader.helpers.ts",{"_index":908,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1448,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":846,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loader.service.abstract.ts",{"_index":1017,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:4",{"_index":1019,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":1021,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:6",{"_index":1022,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:7",{"_index":1020,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":5005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":839,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:13",{"_index":1369,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1434,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1447,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2234,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":651,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":228,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["loadingcounter",{"_index":1459,"title":{},"body":{"injectables/LoaderService.html":{}}}],["local",{"_index":1593,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localecompare(b.album",{"_index":195,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.artist",{"_index":192,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.title",{"_index":214,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localization",{"_index":5367,"title":{},"body":{"todo.html":{}}}],["localstorage",{"_index":553,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":488,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["lock.json",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["locking",{"_index":5061,"title":{},"body":{"index.html":{}}}],["logic",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["lookup",{"_index":1613,"title":{},"body":{"injectables/MetadataService.html":{}}}],["loop",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lucene",{"_index":726,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["luceneescapequery",{"_index":725,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["made",{"_index":5176,"title":{},"body":{"license.html":{}}}],["main",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["main_audio",{"_index":520,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["maincolor",{"_index":290,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":598,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["make",{"_index":2923,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":5089,"title":{},"body":{"license.html":{}}}],["management",{"_index":5357,"title":{},"body":{"todo.html":{}}}],["manifest.json",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":166,"title":{},"body":{"interfaces/Album.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2229,"title":{},"body":{"components/ShellComponent.html":{}}}],["map((tag",{"_index":154,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mapping",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["march",{"_index":2744,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["maskable",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["mat",{"_index":5464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1220,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":5437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1224,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1675,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2399,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2396,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":1147,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2419,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1221,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":1148,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":2876,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["matformfieldmodule",{"_index":2049,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":2147,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":2039,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":2146,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(math.random",{"_index":2046,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":2040,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":1916,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.max(0",{"_index":2162,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":1918,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.round(value",{"_index":647,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["maticon",{"_index":110,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticonbutton",{"_index":112,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticonmodule",{"_index":1223,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":2050,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["matlistmodule",{"_index":99,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenu",{"_index":103,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenucontent",{"_index":104,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenuitem",{"_index":105,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenumodule",{"_index":1721,"title":{},"body":{"components/PlayerComponent.html":{}}}],["matmenutrigger",{"_index":106,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matoptionmodule",{"_index":2457,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprogressbar",{"_index":125,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["matprogressspinnermodule",{"_index":2048,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2456,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2217,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2196,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslidermodule",{"_index":890,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matslidetogglechange",{"_index":1685,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1676,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["mattoolbarmodule",{"_index":1719,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltipmodule",{"_index":1720,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":2037,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":268,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":5253,"title":{},"body":{"license.html":{}}}],["md5",{"_index":1555,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["mdc",{"_index":3852,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["meaning",{"_index":5174,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":2106,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["meatadata",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1499,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":504,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["mediametadata(metadata",{"_index":1508,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1479,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasession",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["mediasessionaction",{"_index":1474,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1476,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1510,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1464,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":5027,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":5254,"title":{},"body":{"license.html":{}}}],["member",{"_index":5259,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["menus",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":5320,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1178,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["merged.description",{"_index":1196,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":1197,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1337,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1308,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["meta",{"_index":1528,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"todo.html":{}}}],["meta.coverurl.original",{"_index":1633,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl.original.startswith('blob",{"_index":1634,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl.thumb.startswith('blob",{"_index":1636,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1632,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1643,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":123,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1630,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":733,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1549,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1331,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:36",{"_index":1366,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":731,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1585,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["metadatacache.coverurl.thumb",{"_index":1589,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1587,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1598,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":128,"title":{"injectables/MetadataService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["metadataservice.processionpercent",{"_index":1425,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["metadatasettingscomponent",{"_index":369,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["metatags",{"_index":5448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meter",{"_index":5062,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":5407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1355,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["methods",{"_index":406,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["mic",{"_index":5362,"title":{},"body":{"todo.html":{}}}],["migrate",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["migrated",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["migrating",{"_index":2283,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2276,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["min",{"_index":2038,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2463,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["mindecibels",{"_index":269,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["miscellaneous",{"_index":4990,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":4098,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["mobile",{"_index":3976,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mobx",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modes",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":5134,"title":{},"body":{"license.html":{}}}],["module",{"_index":1282,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["modules",{"_index":2986,"title":{"modules.html":{}},"body":{"changelog.html":{},"modules.html":{}}}],["monochrome",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["monochrome.svg",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["monorepo",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["moral",{"_index":5187,"title":{},"body":{"license.html":{}}}],["more",{"_index":664,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["motabass",{"_index":5353,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":1770,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":1776,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":5157,"title":{},"body":{"license.html":{}}}],["moved",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["mp3",{"_index":921,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":926,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mtb",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":5445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":706,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":761,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1550,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzreleasegroup",{"_index":734,"title":{"interfaces/MusicbrainzReleaseGroup.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzresponse",{"_index":738,"title":{"interfaces/MusicbrainzResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":746,"title":{"injectables/MusicbrainzService.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":791,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Color.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":672,"title":{},"body":{"interfaces/Chainable.html":{}}}],["nan",{"_index":201,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["narrowing",{"_index":2294,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":5219,"title":{},"body":{"license.html":{}}}],["native",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["nativebrowserfileloaderservice",{"_index":847,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigates",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["navigateto",{"_index":2202,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2203,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigation",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["navigator.getgamepads",{"_index":1064,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1507,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1511,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1502,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1497,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1506,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1505,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2719,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2720,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":825,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nearby",{"_index":2149,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["nearly",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":5336,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":5178,"title":{},"body":{"license.html":{}}}],["neu",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":159,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["newsize",{"_index":296,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["next",{"_index":1440,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1451,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1275,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2704,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ng",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["ng11",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["ng15",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["ngafterviewinit",{"_index":964,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngarraypipesmodule",{"_index":97,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ngclass",{"_index":1722,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2293,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2296,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":978,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":216,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngoptimizedimage",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["ngx",{"_index":91,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":90,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1081,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":1551,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["node_modules",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["nodes",{"_index":537,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["non",{"_index":5288,"title":{},"body":{"license.html":{}}}],["none",{"_index":522,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"changelog.html":{}}}],["notable",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["notes.md",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":1963,"title":{},"body":{"injectables/PlayerService.html":{}}}],["notification",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["november",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["now",{"_index":2673,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["npm",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["npmrc",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["nrwl",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["nrwl/nx",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":1090,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(a.track",{"_index":200,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(axisindex",{"_index":1055,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(b.track",{"_index":204,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(buttonindex",{"_index":1053,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(duration",{"_index":1494,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number_",{"_index":903,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["numbers",{"_index":206,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["nx",{"_index":3064,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["obeservable",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":1594,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":5447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1600,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":5345,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1151,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":1182,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":1194,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2224,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2639,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":1189,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2642,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtaining",{"_index":5335,"title":{},"body":{"license.html":{}}}],["october",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["offers",{"_index":5314,"title":{},"body":{"license.html":{}}}],["offline",{"_index":5065,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":295,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":5412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":2161,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ogg",{"_index":923,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["ohne",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["older",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["oldsource",{"_index":605,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["onchanges",{"_index":2238,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ondestroy",{"_index":934,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":715,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["onfilesdropped",{"_index":1731,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onfilesdropped(files",{"_index":1748,"title":{},"body":{"components/PlayerComponent.html":{}}}],["oninit",{"_index":87,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1679,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1684,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onreload",{"_index":1732,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onsliderpositionchanged",{"_index":1733,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":1751,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1680,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1687,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1681,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1689,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1682,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1691,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":1734,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onvolumechange(value",{"_index":1753,"title":{},"body":{"components/PlayerComponent.html":{}}}],["open",{"_index":2244,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["openedstate",{"_index":2248,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":861,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2246,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["optimizations",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["optimize",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":2960,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":2571,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["optional",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":689,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":1173,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":1180,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":925,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["origin",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["original",{"_index":783,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"license.html":{}}}],["originalfn",{"_index":693,"title":{},"body":{"interfaces/Chainable.html":{}}}],["os",{"_index":5059,"title":{},"body":{"index.html":{}}}],["osc",{"_index":310,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2464,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":2921,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["oscilloscopepath",{"_index":5408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":287,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":309,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":5067,"title":{},"body":{"index.html":{}}}],["others",{"_index":5156,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":209,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["out",{"_index":1300,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["output",{"_index":951,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":2139,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":942,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":948,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":935,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlayerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":938,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":937,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":932,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":950,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":952,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:38",{"_index":949,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:48",{"_index":947,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:54",{"_index":945,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":931,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":930,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overrides",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["overtly",{"_index":5237,"title":{},"body":{"license.html":{}}}],["overview",{"_index":5346,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":662,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["overwritten",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["owner",{"_index":5114,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":5113,"title":{},"body":{"license.html":{}}}],["owners",{"_index":5120,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2686,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":2872,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["packages",{"_index":2901,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["packgr",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":4704,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["palette",{"_index":1614,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1668,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1669,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1662,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1663,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1670,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1671,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1664,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1665,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1666,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1667,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1660,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1661,"title":{},"body":{"injectables/MetadataService.html":{}}}],["panel",{"_index":2239,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2240,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2241,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2237,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2258,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2255,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2263,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2264,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2257,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2261,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2262,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2269,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2265,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2266,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2268,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2267,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2236,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":5205,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1351,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":673,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":5214,"title":{},"body":{"license.html":{}}}],["part",{"_index":4007,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["partial",{"_index":1161,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":5322,"title":{},"body":{"license.html":{}}}],["party",{"_index":5343,"title":{},"body":{"license.html":{}}}],["pass",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["passed",{"_index":2678,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":5308,"title":{},"body":{"license.html":{}}}],["path",{"_index":5475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":5414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":5477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":410,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":291,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1317,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1276,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["per",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["perform",{"_index":5183,"title":{},"body":{"license.html":{}}}],["performance",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["performance.now",{"_index":1123,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":5190,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5122,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":5330,"title":{},"body":{"license.html":{}}}],["permission",{"_index":882,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":5338,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":5234,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":2757,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["person",{"_index":5162,"title":{},"body":{"license.html":{}}}],["person's",{"_index":5195,"title":{},"body":{"license.html":{}}}],["persons",{"_index":5334,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":5194,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1265,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pictures",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["pin",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":120,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":2102,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":98,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{},"overview.html":{}}}],["pipetransform",{"_index":637,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1559,"title":{},"body":{"injectables/MetadataService.html":{}}}],["play",{"_index":411,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["play/pause",{"_index":1790,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playback",{"_index":536,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["player",{"_index":1718,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player'},{'name",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.component.html",{"_index":1723,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":1724,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":655,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":109,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":96,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1486,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":5481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/library",{"_index":5483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1696,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["player/player.types",{"_index":2329,"title":{},"body":{"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":371,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":108,"title":{"injectables/PlayerService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":1861,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playerservice.currenttime",{"_index":1862,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playerservice.repeat",{"_index":1865,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playing",{"_index":1487,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["playlist",{"_index":1426,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"todo.html":{}}}],["playlist'},{'name",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":2052,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":2053,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.findindex((track",{"_index":2134,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":2018,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":2015,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":1781,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":373,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.crc",{"_index":1994,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":1874,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":2059,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":2065,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":1875,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":1890,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":5050,"title":{},"body":{"index.html":{}}}],["playstate",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["playtrack",{"_index":1399,"title":{},"body":{"components/LibraryComponent.html":{}}}],["playtrack(track",{"_index":239,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["please",{"_index":667,"title":{},"body":{"interfaces/Chainable.html":{}}}],["plug",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["pluginnewanalysernode",{"_index":412,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["plugins",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":993,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["polfills",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["polyfills",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["pool",{"_index":2663,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":1915,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":5139,"title":{},"body":{"license.html":{}}}],["postcss",{"_index":2932,"title":{},"body":{"changelog.html":{}}}],["prdefinded",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["pre",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["precommit",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["prefertagembeddedpicture",{"_index":1513,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefetch",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":5428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preparations",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["present",{"_index":5327,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":5282,"title":{},"body":{"license.html":{}}}],["preset",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["pressedbuttonscaches",{"_index":1051,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prettier",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["prevents",{"_index":2280,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":1876,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":688,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":2346,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":2331,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":2307,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":765,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1710,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":5193,"title":{},"body":{"license.html":{}}}],["private",{"_index":138,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["prive",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["problems",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["process",{"_index":2676,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["processing",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["processionpercent",{"_index":1514,"title":{},"body":{"injectables/MetadataService.html":{}}}],["production",{"_index":2975,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":754,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1290,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promise.reject(new",{"_index":1287,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1293,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promote",{"_index":5147,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":5257,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":375,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2182,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"properties.html":{}}}],["props",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["protected",{"_index":5177,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":5199,"title":{},"body":{"license.html":{}}}],["protection",{"_index":5217,"title":{},"body":{"license.html":{}}}],["protobufjs",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":4075,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":5430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":5092,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":493,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["provideexperimentalzonelesschangedetection",{"_index":5418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":5431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":5419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":5425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":5433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":5417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":5086,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":5420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":5128,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":5192,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":5169,"title":{},"body":{"license.html":{}}}],["pure",{"_index":630,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":5099,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":5142,"title":{},"body":{"license.html":{}}}],["pwa",{"_index":5047,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quality",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["query",{"_index":728,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["queryparams",{"_index":1353,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["queue",{"_index":1964,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":5271,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["random",{"_index":2045,"title":{},"body":{"injectables/PlayerService.html":{}}}],["randomposition",{"_index":2013,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":2136,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["rate",{"_index":833,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["read",{"_index":668,"title":{},"body":{"interfaces/Chainable.html":{}}}],["readded",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["reader",{"_index":5072,"title":{},"body":{"index.html":{}}}],["readme",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":144,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":1573,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/UpdateService.html":{}}}],["real",{"_index":1646,"title":{},"body":{"injectables/MetadataService.html":{}}}],["realkeys",{"_index":1199,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":5277,"title":{},"body":{"license.html":{}}}],["record",{"_index":1352,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2632,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["recursive",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["redirectto",{"_index":5476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":5137,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["reenabled",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["refactored",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["refactorings",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":5091,"title":{},"body":{"license.html":{}}}],["regards",{"_index":5203,"title":{},"body":{"license.html":{}}}],["register",{"_index":1251,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":1172,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":1029,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":1038,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":1030,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":1042,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1213,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":5424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":5423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":1177,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registry",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["reinstall",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["reject",{"_index":1277,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1305,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1297,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":2738,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["relationship",{"_index":5085,"title":{},"body":{"license.html":{}}}],["release",{"_index":736,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["release:${luceneescapequery.escape(album",{"_index":763,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":757,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2711,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":5129,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":5123,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1857,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["remainder",{"_index":5300,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":5302,"title":{},"body":{"license.html":{}}}],["remember",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":1599,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverpicture",{"_index":82,"title":{"interfaces/RemoteCoverPicture.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":869,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["removed",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["renderer",{"_index":957,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":954,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rendering",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["renew",{"_index":1592,"title":{},"body":{"injectables/MetadataService.html":{}}}],["renovate",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["renovate.json",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":1871,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":714,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["replace",{"_index":1645,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["replaced",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["report",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["reporting",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":5350,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":5315,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":5181,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":5152,"title":{},"body":{"license.html":{}}}],["request",{"_index":881,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["request.reject(new",{"_index":1311,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1313,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe(draw",{"_index":2689,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1318,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["requestwakelock",{"_index":2718,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":5339,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":5266,"title":{},"body":{"license.html":{}}}],["resizeobserver",{"_index":2602,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2640,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1302,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(tags",{"_index":1304,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1393,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["respect",{"_index":5304,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":5332,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":5063,"title":{},"body":{"index.html":{}}}],["result",{"_index":218,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["result.map((tag",{"_index":222,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["result.matches",{"_index":2230,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":5097,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":1204,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["retained",{"_index":5188,"title":{},"body":{"license.html":{}}}],["return",{"_index":158,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":5136,"title":{},"body":{"license.html":{}}}],["revert",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["revocation",{"_index":5265,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["rgb(255",{"_index":1013,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0,0",{"_index":810,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["rid",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":2260,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["rights",{"_index":5108,"title":{},"body":{"license.html":{}}}],["root",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotation",{"_index":2666,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["rounding",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":2206,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":121,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["routeroutlet",{"_index":2197,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":5409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":5287,"title":{},"body":{"license.html":{}}}],["rule",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":3686,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":5486,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":102,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1446,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":119,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":118,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["sample",{"_index":832,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":308,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sandbox",{"_index":5071,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["saving",{"_index":5359,"title":{},"body":{"todo.html":{}}}],["scale",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":2320,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scientific",{"_index":5127,"title":{},"body":{"license.html":{}}}],["screen",{"_index":4930,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scroll",{"_index":2096,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollbehavior",{"_index":2153,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":2108,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":2148,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollposition",{"_index":2104,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":2097,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":2129,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":2132,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":2055,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scss",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":772,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["searchterm",{"_index":2056,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["seconds",{"_index":1895,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seeking",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["seekleft",{"_index":1735,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["seekleft(seconds",{"_index":1893,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":1755,"title":{},"body":{"components/PlayerComponent.html":{}}}],["seekright",{"_index":1736,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["seekright(seconds",{"_index":1896,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":1757,"title":{},"body":{"components/PlayerComponent.html":{}}}],["seekto",{"_index":1504,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["seektohandler(details",{"_index":2024,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":413,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["seektto",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1400,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":235,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1401,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":231,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selected",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["selectedalbum",{"_index":148,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":146,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":149,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selectnext",{"_index":1877,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":1878,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":1879,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":1900,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1402,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":237,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["self",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["semantics",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":2684,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":1094,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separate",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["separator",{"_index":5426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seperated",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["september",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["service/file",{"_index":907,"title":{},"body":{"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":702,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1330,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1368,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":5036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":129,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["service/metadata.service.ts",{"_index":1512,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:150",{"_index":1527,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1544,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1542,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:28",{"_index":1540,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:29",{"_index":1534,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:33",{"_index":1538,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:37",{"_index":1523,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:52",{"_index":1530,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:67",{"_index":1532,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":124,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":788,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":5038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":718,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:40",{"_index":1712,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":838,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":2801,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":1772,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":1773,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":1771,"title":{},"body":{"components/PlayerComponent.html":{}}}],["services/loader/loader.service",{"_index":2220,"title":{},"body":{"components/ShellComponent.html":{}}}],["services/media",{"_index":1928,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":1775,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":1927,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1500,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["session.service",{"_index":1929,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":5023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1467,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1477,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1482,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1484,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1480,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1472,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1466,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":511,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["set(filtered",{"_index":160,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["set.svg",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor(color",{"_index":2351,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1468,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1473,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2467,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2477,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2468,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2479,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":414,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1469,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1478,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2469,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2481,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2470,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2483,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2309,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":2312,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2310,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":2315,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2471,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2485,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":415,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setfrequencybandgain",{"_index":416,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setgap",{"_index":2472,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2487,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2473,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2489,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":417,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setmindb",{"_index":2474,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2491,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setoverlayclass",{"_index":2355,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setplaybackstate(state",{"_index":1509,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor(color",{"_index":2340,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":1880,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":1902,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1470,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1481,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2475,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2493,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1295,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["setting",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["settings",{"_index":552,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2192,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1677,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":2190,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1674,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2400,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":2302,"title":{},"body":{"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":1693,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":1692,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":1690,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1688,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:34",{"_index":1686,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":1683,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1673,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2191,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2193,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":377,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2406,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2407,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2638,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupvisualsworkerwithoptions",{"_index":5028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":5035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":418,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["several",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":5264,"title":{},"body":{"license.html":{}}}],["share",{"_index":5363,"title":{},"body":{"todo.html":{}}}],["sharereplay",{"_index":2219,"title":{},"body":{"components/ShellComponent.html":{}}}],["shas",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["shell",{"_index":2195,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell'},{'name",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2198,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2199,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":322,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":1167,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":1789,"title":{},"body":{"components/PlayerComponent.html":{}}}],["show",{"_index":1455,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{}}}],["showdelay",{"_index":5439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":857,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["showpicker",{"_index":856,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{}}}],["shows",{"_index":658,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2465,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":1872,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2249,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["sidenav",{"_index":2201,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["signal",{"_index":88,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["signal(0",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{}}}],["signal(44_100",{"_index":481,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(false",{"_index":474,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2495,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2500,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2508,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2510,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":2318,"title":{},"body":{"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2516,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2518,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2520,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2523,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1533,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":1920,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":1923,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2531,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1539,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1541,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1543,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2702,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.storageservice.retrieve('basegain",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(this.storageservice.retrieve('volume",{"_index":483,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(true",{"_index":477,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(undefined",{"_index":147,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["signals",{"_index":513,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["signalös",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":5225,"title":{},"body":{"license.html":{}}}],["simpler",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["simplified",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["sind",{"_index":1248,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1334,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["sizes",{"_index":1986,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":997,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2204,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2275,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":5411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":380,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":379,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["slider",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["sliders",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":743,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{}}}],["smaller",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["smooth",{"_index":2131,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2466,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":270,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["snyk",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["soll",{"_index":2446,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["sonarjs/pseudo",{"_index":2044,"title":{},"body":{"injectables/PlayerService.html":{}}}],["song",{"_index":1886,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["song.file.name",{"_index":2174,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.file.name).tolowercase().includes(term",{"_index":2075,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":2169,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":2170,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.crc",{"_index":2166,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.artist",{"_index":2076,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.crc",{"_index":1995,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song.metadata?.title",{"_index":2074,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":2175,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":2173,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":2171,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["soon",{"_index":1571,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sort",{"_index":183,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["sortable",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":5358,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["spark",{"_index":1554,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["sparkmd5",{"_index":1553,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sparkmd5.arraybuffer.hash(await",{"_index":1656,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spectrogram",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":2089,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["splashscreen",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1984,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stable",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":632,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["standing",{"_index":2907,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2726,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starts",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["startvisualization(getdatamethod",{"_index":2658,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":512,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":5275,"title":{},"body":{"license.html":{}}}],["statt",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["statutory",{"_index":5319,"title":{},"body":{"license.html":{}}}],["steps",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":298,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2576,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storageservice",{"_index":494,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["storagesettingscomponent",{"_index":382,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":167,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":5449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":5452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structures",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["stuff",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["style",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["stylelint",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":927,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":132,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":936,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styling",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1193,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":877,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":490,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"license.html":{}}}],["sublicensable",{"_index":5290,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2103,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":1152,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":5112,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1241,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1244,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":5223,"title":{},"body":{"license.html":{}}}],["successors",{"_index":5262,"title":{},"body":{"license.html":{}}}],["such",{"_index":5210,"title":{},"body":{"license.html":{}}}],["suche",{"_index":5356,"title":{},"body":{"todo.html":{}}}],["super",{"_index":1377,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["support",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["supported",{"_index":1501,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":5053,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":5312,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":5243,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":610,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["svg",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["svgo",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["swc/core",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["switch",{"_index":1864,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["switched",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["swupdate",{"_index":2420,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["swupdate.activateupdate().then",{"_index":2437,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2425,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntildestroyed(this.destroref)).subscribe((event",{"_index":2426,"title":{},"body":{"injectables/UpdateService.html":{}}}],["syntax",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":4646,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["tag",{"_index":171,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["tag.album",{"_index":173,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist",{"_index":155,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.coverurl",{"_index":177,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.year",{"_index":176,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tags",{"_index":798,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["tags.album",{"_index":756,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":755,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1628,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1619,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1621,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1547,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1267,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1272,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1269,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1625,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1626,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":703,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1264,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1627,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagswithoptionalbloburls",{"_index":221,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tagsworkerrequest",{"_index":796,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":797,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":1930,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":5283,"title":{},"body":{"license.html":{}}}],["target",{"_index":5364,"title":{},"body":{"todo.html":{}}}],["targetindex",{"_index":2133,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1238,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templates",{"_index":2912,"title":{},"body":{"changelog.html":{}}}],["templateurl",{"_index":130,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["temporarily",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["term",{"_index":2069,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["termination",{"_index":5268,"title":{},"body":{"license.html":{}}}],["terms",{"_index":5172,"title":{},"body":{"license.html":{}}}],["territories",{"_index":5251,"title":{},"body":{"license.html":{}}}],["test",{"_index":531,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":3687,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1333,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":789,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thebespokepixel/es",{"_index":2325,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["theme",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{}}}],["theme.types",{"_index":2326,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice",{"_index":332,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice.initializetheme",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["themesettingscomponent",{"_index":384,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":5221,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":288,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["this._audiocontext",{"_index":563,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.createanalyser",{"_index":591,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.resume",{"_index":611,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.state",{"_index":609,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement",{"_index":561,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":572,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":579,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":589,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":566,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":569,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":570,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":586,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":581,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":577,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.currenttime",{"_index":621,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.fastseek(position",{"_index":620,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.loop",{"_index":618,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.pause",{"_index":614,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.play",{"_index":612,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.src",{"_index":606,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiosourcenode",{"_index":562,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiosourcenode.connect(analyser",{"_index":592,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":593,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.clear",{"_index":604,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":596,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.foreach((analyser",{"_index":603,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":594,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._eqgainnode",{"_index":564,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[band",{"_index":555,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":623,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._gainnode",{"_index":565,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.asobservable",{"_index":515,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.next(true",{"_index":590,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._internalanalyzer",{"_index":2644,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":1188,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":2352,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.accentcolorpalette",{"_index":2353,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":1136,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...filedatas",{"_index":1992,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(file",{"_index":1968,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addtrackstoplaylist(...this.indexeddbtracks",{"_index":246,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(...tracks",{"_index":245,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(track",{"_index":251,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtracktoplaylist(track",{"_index":240,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.afterpausedorstopped",{"_index":2007,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":1990,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.alpha",{"_index":2513,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2556,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2627,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2540,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2546,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2544,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2542,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2653,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2652,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2683,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2412,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2688,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}/release",{"_index":766,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1359,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.askuserforupdate().then((update",{"_index":2436,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.currenttime",{"_index":1495,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2696,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2551,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1493,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":1969,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":2000,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1490,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1488,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":1914,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pause",{"_index":2006,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":1988,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2498,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2654,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":1976,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":2033,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":2031,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(this.audioservice.volume",{"_index":1830,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.audioservice.setvolume(value",{"_index":1831,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.audioservice.stop",{"_index":2008,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":1056,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":1109,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":1107,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":1098,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.barcount",{"_index":2503,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2560,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2621,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2645,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2648,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2647,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2646,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":559,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.breakpointobserver",{"_index":2223,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1347,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":1054,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":1105,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":1099,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":1113,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":1122,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":1095,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.canvas",{"_index":2605,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2633,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2611,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.capfalldown",{"_index":2506,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2564,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2504,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2562,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":1077,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":1076,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":1138,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":1071,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2299,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.colorconfig",{"_index":2625,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":2354,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":2343,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":1059,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":774,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":1110,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":1106,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":545,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1631,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1602,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(filedata",{"_index":1568,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.currentfolderhandle",{"_index":854,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":1913,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":1907,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.crc",{"_index":2001,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":1989,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(undefined",{"_index":2009,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":2011,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":2021,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":1993,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":1996,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":578,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.darkmode",{"_index":2356,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":2336,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1230,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":1808,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.default_deadspace",{"_index":1129,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":1041,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":1179,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1209,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1216,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1232,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2185,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2184,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1207,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":1061,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":1162,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":974,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":965,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":971,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":969,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drop.bind(this",{"_index":977,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":976,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":580,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues",{"_index":625,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[band",{"_index":557,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":622,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":627,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":1191,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1344,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1343,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":759,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2541,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2558,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fileinput",{"_index":1378,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1384,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1392,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1391,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1390,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1381,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1386,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1383,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1380,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.currentfolderhandle",{"_index":1824,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.fileloaderservice.init",{"_index":1823,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.fileloaderservice.openfiles",{"_index":1991,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.fileloaderservice.showpicker",{"_index":1840,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.files",{"_index":1394,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.files.map((file",{"_index":1388,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filestoprocess",{"_index":1536,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.set(filedatas.length",{"_index":1566,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.update((files",{"_index":1574,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filteredplaylist",{"_index":2115,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":758,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":1135,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":1115,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":1793,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":1854,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":1856,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":1855,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":1842,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":1843,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":1850,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":1849,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":1852,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":1846,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":1851,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":1847,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":1848,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":1853,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":1844,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":1845,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":1805,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":1794,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":1795,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":1814,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":1812,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":1819,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":1801,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":1817,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":1803,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":1810,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":1821,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":1797,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":1799,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2550,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2548,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2505,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2568,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getcolorobject(new",{"_index":2360,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.getmetadata(filedata",{"_index":1577,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":1767,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer?.files",{"_index":989,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1286,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlemessage",{"_index":1284,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.helpopen",{"_index":1206,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1214,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":1192,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":1174,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":1202,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":1195,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":1786,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":1787,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.hotkeysservice.register",{"_index":1788,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.id3tagsservice.extracttags(filedata.file",{"_index":1604,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":1809,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.indexeddbservice.add('metatags",{"_index":1629,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('metatags').topromise",{"_index":1707,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.update('dirhandle",{"_index":858,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.indexeddbtracks",{"_index":153,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.indexeddbtracks().filter((track",{"_index":243,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.indexeddbtracks.set(tagswithoptionalbloburls",{"_index":224,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.isautoscrollenabled",{"_index":2110,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":2111,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":1130,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":568,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":571,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":619,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(false",{"_index":585,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(true",{"_index":588,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying",{"_index":613,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(false",{"_index":587,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(true",{"_index":584,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(false",{"_index":583,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(true",{"_index":617,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.lastfm_api_key",{"_index":1357,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1609,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":988,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":973,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.linethickness",{"_index":2526,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2566,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1452,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loaderservice.show",{"_index":1450,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loadfiles",{"_index":1825,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.loadingcounter",{"_index":1460,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2303,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2557,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2561,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2565,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2563,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":2337,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2559,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2569,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2567,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2555,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('prefertagembeddedpicture",{"_index":1706,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2553,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('usetagembeddedpicture",{"_index":1704,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usetagscache",{"_index":1702,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usewebmetainfos",{"_index":1699,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2707,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mediasessionservice",{"_index":1937,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":1943,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":1940,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":1938,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":1945,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":1947,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":1949,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":1941,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":1978,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":1951,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.meta.addtag",{"_index":2349,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.meta.updatetag",{"_index":2350,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.metadataservice.addfilestolibrary(...filedatas",{"_index":1998,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.createobjecturlforembeddedpicture(tag",{"_index":223,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1705,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1703,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1701,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1698,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2545,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2554,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2619,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1610,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":1944,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1289,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2298,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2297,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2623,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2656,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":968,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":615,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.pendingrequests.clear",{"_index":1328,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1296,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1320,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1310,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1301,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1325,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1590,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice",{"_index":2072,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.addfilestoplaylist(...files.map((file",{"_index":1832,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.addtracktoplaylist(track",{"_index":258,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2512,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":2122,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.crc",{"_index":2164,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":2071,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist().length",{"_index":1764,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":1863,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.loadfiles",{"_index":1841,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.next",{"_index":1818,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.playpause",{"_index":1791,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":2165,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.previous",{"_index":1820,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.seekleft(value",{"_index":1827,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.seekright(value",{"_index":1828,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.selectnext",{"_index":1815,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":1813,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":1826,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.stop",{"_index":1796,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.togglerepeat",{"_index":1837,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.toggleshuffle",{"_index":1838,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playpause",{"_index":1939,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":2016,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":2020,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":2019,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.selectedtrack",{"_index":2005,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":2003,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1591,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":1117,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":1946,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":2341,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.primarycolorpalette",{"_index":2342,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.register",{"_index":1166,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":966,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":984,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":2028,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":2029,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":2034,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":2032,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2717,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2613,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2691,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate(['/player",{"_index":241,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.router.navigate([route",{"_index":2232,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":582,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.scrolltobottom",{"_index":2120,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":2128,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":2100,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":2123,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm().tolowercase",{"_index":2070,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.seekleft(10",{"_index":1948,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":1802,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.seekright(10",{"_index":1950,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":1804,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.seektohandler(details",{"_index":1952,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":616,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.selectedalbum",{"_index":182,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(album",{"_index":236,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(undefined",{"_index":233,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":162,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist.set(artist",{"_index":232,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":2004,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(song",{"_index":1999,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":2022,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(track",{"_index":238,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack.set(undefined",{"_index":234,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectsong(track",{"_index":1975,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setaccentcolor(colors.peakcolor",{"_index":2339,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setaccentcolor(this.accentcolor",{"_index":2335,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setoverlayclass",{"_index":2333,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setplaybackstate('none",{"_index":1492,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1491,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1489,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setprimarycolor(colors.maincolor",{"_index":2338,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setprimarycolor(this.primarycolor",{"_index":2334,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setseekposition(details.seektime",{"_index":2027,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":2023,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2614,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.showpicker",{"_index":1822,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.shuffle",{"_index":2012,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":2035,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":2231,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2543,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2552,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2655,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2657,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":1942,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2628,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.storageservice.retrieve('equalizergainvalues",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.swupdate",{"_index":2424,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2444,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2443,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.darkmode",{"_index":807,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":1970,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2402,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2413,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":1792,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":1171,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":1811,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglerepeat",{"_index":1800,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.toggleshuffle",{"_index":1798,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.totalfilestoprocess",{"_index":1537,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(0",{"_index":1575,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(filedatas.length",{"_index":1565,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.track()?.metadata?.covercolors?.darkmuted?.hex",{"_index":808,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.track()?.metadata?.covercolors?.lightmuted?.hex",{"_index":809,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.track()?.metadata?.coverurl?.original",{"_index":812,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1496,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.usetagembeddedpicture",{"_index":1588,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1584,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1607,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2634,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2637,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2635,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2636,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2607,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2612,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2697,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2705,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2706,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2549,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2529,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":526,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.wakelock",{"_index":2716,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2721,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":2724,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":1972,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":1974,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1278,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1285,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1283,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2609,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1306,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1323,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1322,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1324,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":5124,"title":{},"body":{"license.html":{}}}],["threads.js",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["through",{"_index":5154,"title":{},"body":{"license.html":{}}}],["throughout",{"_index":5102,"title":{},"body":{"license.html":{}}}],["thum",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["thumb",{"_index":780,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thumbnails",{"_index":721,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["time",{"_index":827,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["time.pipe",{"_index":817,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["time.ts",{"_index":5007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timed",{"_index":1299,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1294,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1271,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":802,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2674,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["tinycolor",{"_index":2324,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["tinycolor(hex",{"_index":2372,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(10",{"_index":2374,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(15",{"_index":2376,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(18",{"_index":2378,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(21",{"_index":2380,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(24",{"_index":2382,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(27",{"_index":2384,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(30",{"_index":2386,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(5",{"_index":2373,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(15",{"_index":2370,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(20",{"_index":2368,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(25",{"_index":2366,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(30",{"_index":2364,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(35",{"_index":2363,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(45",{"_index":2362,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(55",{"_index":2361,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(value",{"_index":2388,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":185,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":5459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":1774,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2233,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":529,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["todo.md",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["todos",{"_index":4316,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["toggle",{"_index":1695,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["togglehelpdialog",{"_index":1205,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2250,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":1737,"title":{},"body":{"components/PlayerComponent.html":{}}}],["togglerepeat",{"_index":1738,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["toggleshuffle",{"_index":1739,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["togglevisualmode",{"_index":2700,"title":{},"body":{"injectables/VisualsService.html":{}}}],["token",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["tolowercase().includes(term",{"_index":2077,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tools",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["tooltips",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":2251,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["tosignal",{"_index":2221,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2207,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1240,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["totalfilestoprocess",{"_index":1561,"title":{},"body":{"injectables/MetadataService.html":{}}}],["touppercase",{"_index":1243,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":95,"title":{"interfaces/Track.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["track();@let",{"_index":834,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track.album",{"_index":248,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.artist",{"_index":244,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.coverurl",{"_index":1429,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.crc",{"_index":264,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.filename",{"_index":1432,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.metadata",{"_index":1977,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":1981,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":1980,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.original",{"_index":1985,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.original",{"_index":1983,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":1979,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.crc",{"_index":2002,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["track.title",{"_index":1431,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.track",{"_index":1430,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackby",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["trackbyalbum",{"_index":1403,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum(index",{"_index":262,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyartist",{"_index":1404,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyartist(index",{"_index":261,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbycrc",{"_index":1405,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackbycrc(index",{"_index":263,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["tracking",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["trackmetadata",{"_index":708,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":181,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["trademark",{"_index":5307,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":5289,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2685,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":633,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":634,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["transitions",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["translate",{"_index":5185,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2572,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["treaty",{"_index":5230,"title":{},"body":{"license.html":{}}}],["tree",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trial",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["trials",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":631,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":217,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["ts",{"_index":1956,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["tsconfig",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":3136,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["tslint",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["ttry",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":1039,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":5368,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1958,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["types/node",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["typing",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["ubuntu",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":2126,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":301,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["um",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["unconditional",{"_index":5292,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":5240,"title":{},"body":{"license.html":{}}}],["und",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":199,"title":{},"body":{"interfaces/Album.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":5171,"title":{},"body":{"license.html":{}}}],["understands",{"_index":5341,"title":{},"body":{"license.html":{}}}],["uneeded",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["unfair",{"_index":5201,"title":{},"body":{"license.html":{}}}],["unicorn",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":168,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["uniquealbums",{"_index":161,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniqueartists",{"_index":150,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["unit",{"_index":5487,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":5078,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/Id3TagsService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1252,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":1198,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["unsubscribe",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":576,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["update.service",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["updated",{"_index":2127,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["updateinterval",{"_index":2679,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1471,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1483,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updates",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["updateservice",{"_index":334,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["updateservice.init",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["updating",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":653,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":5110,"title":{},"body":{"license.html":{}}}],["url",{"_index":694,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1280,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2608,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":607,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["url.createobjecturl(new",{"_index":1596,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.original",{"_index":1635,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.thumb",{"_index":1637,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1623,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":608,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["urls",{"_index":1595,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["urlsearchparams",{"_index":1354,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["usage",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":196,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["useclass",{"_index":5444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2281,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":5436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":883,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["usermediainput",{"_index":5361,"title":{},"body":{"todo.html":{}}}],["uses",{"_index":5054,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1515,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1516,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":5438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1517,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":2884,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["utc",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["v",{"_index":5207,"title":{},"body":{"license.html":{}}}],["v0.10.0",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["v0.11.0",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["v0.12.0",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["v0.13.0",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["v0.14.0",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["v0.15.0",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["v0.16.0",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["v0.17.0",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["v0.18.0",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["v0.19.0",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["v0.20.0",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["v0.21.0",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["v0.22.0",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["v0.23.0",{"_index":4914,"title":{},"body":{"changelog.html":{}}}],["v0.24.0",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["v0.25.0",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["v0.28.0",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["v0.29.0",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["v0.4.0",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["v0.5.0",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["v0.6.0",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["v0.7.0",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["v0.8.0",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["v0.9.0",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["v1.0.0",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["v1.0.1",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["v1.0.2",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["v1.10.0",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["v1.11.0",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["v1.11.1",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["v1.11.10",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["v1.11.11",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["v1.11.12",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["v1.11.2",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["v1.11.3",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["v1.11.4",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["v1.11.5",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["v1.11.6",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["v1.11.7",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["v1.11.8",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["v1.11.9",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["v1.12.0",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["v1.13.0",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["v1.14.0",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["v1.15.0",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["v1.16.0",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["v1.17.0",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["v1.18.0",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["v1.19.0",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["v1.2.2",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["v1.3.0",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["v1.4.0",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["v1.4.1",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["v1.6.1",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["v1.6.2",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["v1.6.3",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["v1.6.4",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["v1.7.1",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["v1.9.1",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["v10.0.0",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["v10.0.1",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["v10.0.2",{"_index":4262,"title":{},"body":{"changelog.html":{}}}],["v10.0.3",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["v10.0.4",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["v10.1.0",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["v10.2.0",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["v10.3.0",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["v10.3.1",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["v10.3.2",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["v11.0.0",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["v11.0.2",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["v11.1.0",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["v11.1.1",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["v11.1.2",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["v11.18.0",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["v11.2.0",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["v11.20.0",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["v11.22.0",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["v11.24.1",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["v11.3.0",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["v11.3.1",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["v11.30.1",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["v11.4.0",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["v11.4.1",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["v11.4.10",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["v11.4.11",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["v11.4.2",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["v11.4.3",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["v11.4.5",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["v11.4.6",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["v11.4.7",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["v11.4.8",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["v11.4.9",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["v11.5.0",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["v11.5.1",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["v11.5.10",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["v11.5.11",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["v11.5.12",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["v11.5.13",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["v11.5.14",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["v11.5.2",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["v11.5.3",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["v11.5.4",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["v11.5.5",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["v11.5.6",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["v11.5.7",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["v11.5.8",{"_index":4088,"title":{},"body":{"changelog.html":{}}}],["v11.5.9",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["v12",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["v12.0.0",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["v12.0.1",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["v12.0.10",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["v12.0.11",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["v12.0.12",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["v12.0.13",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["v12.0.14",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["v12.0.15",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["v12.0.16",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["v12.0.2",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["v12.0.3",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["v12.0.4",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["v12.0.5",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["v12.0.6",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["v12.0.7",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["v12.0.8",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["v12.0.9",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["v12.2.13",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["v12.2.5",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["v12.3.0",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["v12.6.2",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["v12.8.0",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["v12.9.0",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["v13",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["v13.0.0",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["v13.0.1",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["v13.0.10",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["v13.0.11",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["v13.0.12",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["v13.0.13",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["v13.0.16",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["v13.0.18",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["v13.0.19",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["v13.0.2",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["v13.0.20",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["v13.0.3",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["v13.0.5",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["v13.0.6",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["v13.0.7",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["v13.0.8",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["v13.0.9",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["v13.1.0",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["v13.1.1",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["v13.1.10",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["v13.1.11",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["v13.1.12",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["v13.1.2",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["v13.1.3",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["v13.1.4",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["v13.1.5",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["v13.1.6",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["v13.1.7",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["v13.1.8",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["v13.1.9",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["v13.10.1",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["v13.11.2",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["v13.11.4",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["v13.13.0",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["v13.14.2",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["v13.15.1",{"_index":3253,"title":{},"body":{"changelog.html":{}}}],["v13.2.0",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["v13.2.1",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["v13.2.2",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["v13.2.3",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["v13.2.4",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["v13.2.5",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["v13.2.6",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["v13.22.0",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["v13.24.2",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["v13.26.0",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["v13.28.0",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["v13.29.1",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["v13.29.3",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["v13.3.0",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["v13.3.1",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["v13.3.2",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["v13.3.3",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["v13.3.4",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["v13.3.5",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["v13.31.2",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["v13.32.0",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["v13.33.0",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["v13.34.0",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["v13.5.1",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["v13.7.2",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["v13.7.5",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["v14.0.0",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["v14.0.1",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["v14.0.10",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["v14.0.11",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["v14.0.12",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["v14.0.13",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["v14.0.2",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["v14.0.3",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["v14.0.4",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["v14.0.5",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["v14.0.6",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["v14.0.7",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["v14.0.8",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["v14.0.9",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["v14.1.0",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["v14.1.1",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["v14.1.10",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["v14.1.11",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["v14.1.12",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["v14.1.13",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["v14.1.14",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["v14.1.15",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["v14.1.16",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["v14.1.17",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["v14.1.18",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["v14.1.19",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["v14.1.2",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["v14.1.20",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["v14.1.23",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["v14.1.3",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["v14.1.4",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["v14.1.5",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["v14.1.6",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["v14.1.7",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["v14.1.8",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["v14.1.9",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["v15",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["v15.0.0",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["v15.0.1",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["v15.0.2",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["v15.0.3",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["v15.0.4",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["v15.0.5",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["v15.0.6",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["v15.0.7",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["v15.0.8",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["v15.0.9",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["v15.1.0",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["v15.1.1",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["v15.1.10",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["v15.1.11",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["v15.1.12",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["v15.1.13",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["v15.1.14",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["v15.1.16",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["v15.1.17",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["v15.1.2",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["v15.1.3",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["v15.1.4",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["v15.1.5",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["v15.1.6",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["v15.1.7",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["v15.1.8",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["v15.1.9",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["v15.4.4",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["v16.0.0",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["v16.0.1",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["v16.0.2",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["v16.0.3",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["v16.0.4",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["v16.0.5",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["v16.0.6",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["v17",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["v17.0.1",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["v17.0.10",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["v17.0.11",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["v17.0.12",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["v17.0.13",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["v17.0.14",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["v17.0.15",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["v17.0.16",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["v17.0.17",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["v17.0.18",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["v17.0.2",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["v17.0.3",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["v17.0.4",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["v17.0.5",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["v17.0.6",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["v17.0.7",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["v17.0.8",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["v17.0.9",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["v18",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["v18.0.0",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["v18.0.1",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["v18.1.0",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["v18.1.1",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["v18.16.5",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["v18.2.0",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["v18.2.2",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["v18.2.3",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["v18.2.4",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["v18.2.5",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["v18.2.6",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["v18.2.7",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["v19",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["v19.0.0",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["v19.0.1",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["v19.0.10",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["v19.0.2",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["v19.0.3",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["v19.0.4",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["v19.0.5",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["v19.0.6",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["v19.0.7",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["v19.0.8",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["v19.0.9",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["v19.1.0",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["v19.1.1",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["v19.2.0",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["v19.2.1",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["v19.2.10",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["v19.2.2",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["v19.2.3",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["v19.2.4",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["v19.2.5",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["v19.2.6",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["v19.2.7",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["v19.2.8",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["v19.2.9",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["v19.3.0",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["v19.4.0",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["v19.4.1",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["v19.4.10",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["v19.4.11",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["v19.4.12",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["v19.4.13",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["v19.4.14",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["v19.4.15",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["v19.4.2",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["v19.4.3",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["v19.4.4",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["v19.4.5",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["v19.4.6",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["v19.4.7",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["v19.4.8",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["v19.4.9",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["v19.5.0",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["v19.5.1",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["v19.5.3",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["v19.5.4",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["v2.0.2",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["v2.5.0",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["v2.5.3",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["v2.6.0",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["v2.6.1",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["v2.6.2",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["v2.6.3",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["v2.7.0",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["v2.8.1",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["v20.0.0",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["v20.0.1",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["v20.1.0",{"_index":2862,"title":{},"body":{"changelog.html":{}}}],["v20.1.1",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["v20.1.2",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["v20.1.3",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["v20.1.4",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["v20.2.0",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["v20.2.1",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["v20.2.2",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["v20.2.3",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["v20.2.4",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["v20.2.5",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["v20.2.6",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["v20.2.7",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["v20.2.8",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["v20.2.9",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["v20.8.6",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["v24",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["v3.0.3",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["v3.0.4",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["v3.0.5",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["v3.0.6",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["v3.0.7",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["v3.0.8",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["v3.0.9",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["v3.10.0",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["v3.11.0",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["v3.4.0",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["v3.4.1",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["v3.5.0",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["v3.5.1",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["v3.6.0",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["v3.7.0",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["v3.8.0",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["v3.8.1",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["v3.9.0",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["v4.2.0",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["v4.3.1",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["v4.4.0",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["v4.5.0",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["v4.6.0",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["v4.7.0",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["v5.1.0",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["v5.2.0",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["v5.2.1",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["v5.2.10",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["v5.2.11",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["v5.2.12",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["v5.2.2",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["v5.2.3",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["v5.2.4",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["v5.2.5",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["v5.2.6",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["v5.2.7",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["v5.2.8",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["v5.2.9",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["v5.48.0",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["v6.0.0",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["v6.0.1",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["v6.1.0",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["v6.1.1",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["v6.2.0",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["v6.2.1",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["v6.2.2",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["v6.2.3",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["v6.2.4",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["v6.2.5",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["v6.2.6",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["v6.3.0",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["v6.3.1",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["v6.4.0",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["v6.4.1",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["v6.5.0",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["v6.5.1",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["v6.5.2",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["v6.5.3",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["v6.5.4",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["v6.5.5",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["v6.5.6",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["v6.5.7",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["v6.5.8",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["v6.5.9",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["v6.6.0",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["v6.6.1",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["v6.6.2",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["v6.6.3",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["v6.6.4",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["v6.6.5",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["v6.6.6",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["v6.6.7",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["v6.7.0",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["v6.7.1",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["v6.7.2",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["v6.7.3",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["v6.7.4",{"_index":4471,"title":{},"body":{"changelog.html":{}}}],["v7.0.0",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["v7.0.1",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["v7.0.2",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["v7.0.3",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["v7.0.4",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["v7.0.5",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["v7.0.6",{"_index":4440,"title":{},"body":{"changelog.html":{}}}],["v7.1.0",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["v7.1.1",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["v7.13.1",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["v7.13.3",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["v7.13.4",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["v7.2.0",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["v8.0.0",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["v8.0.1",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["v8.0.3",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["v8.1.0",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["v8.1.1",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["v8.1.10",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["v8.1.2",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["v8.1.3",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["v8.1.4",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["v8.1.5",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["v8.1.6",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["v8.1.7",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["v8.1.8",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["v8.1.9",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["v8.26.1",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["v8.31.0",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["v8.4.21",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["v8.6.0",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["v9.0.0",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["v9.0.1",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["v9.0.10",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["v9.0.11",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["v9.0.2",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["v9.0.3",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["v9.0.4",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["v9.0.5",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["v9.0.6",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["v9.0.7",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["v9.0.8",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["v9.0.9",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["v9.1.0",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["v9.1.1",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["v9.1.2",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["v9.1.3",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["v9.2.0",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["v9.2.1",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["v9.2.2",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["v9.2.3",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["v9.2.4",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":904,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":641,"title":{},"body":{"pipes/BandPipe.html":{}}}],["value.tostring().slice(0",{"_index":639,"title":{},"body":{"pipes/BandPipe.html":{}}}],["var",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":5378,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables.scss",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["variant",{"_index":1835,"title":{},"body":{"components/PlayerComponent.html":{}}}],["various",{"_index":659,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verfügbar",{"_index":2445,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":5029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle",{"_index":853,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":880,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2430,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2428,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2439,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2432,"title":{},"body":{"injectables/UpdateService.html":{}}}],["versions",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["very",{"_index":2109,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vi",{"_index":5209,"title":{},"body":{"license.html":{}}}],["via",{"_index":5360,"title":{},"body":{"todo.html":{},"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":790,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["vibrant.from(url).getpalette",{"_index":1659,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1552,"title":{},"body":{"injectables/MetadataService.html":{}}}],["view",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":2086,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":2211,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('scrollviewport",{"_index":2081,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport",{"_index":2099,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":2138,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":2156,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":2105,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":2130,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":2163,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":2155,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":5224,"title":{},"body":{"license.html":{}}}],["virtual",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":985,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visible",{"_index":986,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":2137,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":2140,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":2879,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["visualizefrequencybars",{"_index":2577,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2582,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2578,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2584,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["visualizer.component.html",{"_index":2458,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2459,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":1779,"title":{},"body":{"components/PlayerComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":2088,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizer/visuals/visuals.service",{"_index":2087,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":386,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":303,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":299,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizers",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["visualizerworker",{"_index":2601,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2699,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals",{"_index":2869,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["visuals.types",{"_index":2593,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2539,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2536,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2535,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":289,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":389,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":2057,"title":{"injectables/VisualsService.html":{}},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":2172,"title":{},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":293,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["vm2",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":1834,"title":{},"body":{"components/PlayerComponent.html":{}}}],["volume",{"_index":405,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlayerComponent.html":{}}}],["volumeicon",{"_index":1727,"title":{},"body":{"components/PlayerComponent.html":{}}}],["voluntarily",{"_index":5166,"title":{},"body":{"license.html":{}}}],["vulnerabilities",{"_index":4886,"title":{},"body":{"changelog.html":{}}}],["w9jds/firebase",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["wait",{"_index":2116,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":5310,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5232,"title":{},"body":{"license.html":{}}}],["waives",{"_index":5241,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2709,"title":{},"body":{"injectables/WakelockService.html":{},"changelog.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2715,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":1926,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":5030,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["warns",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":5090,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["wav",{"_index":924,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["waveform",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["web",{"_index":5046,"title":{},"body":{"index.html":{},"properties.html":{}}}],["webmanifest",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["webpack",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["webstorage",{"_index":489,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"dependencies.html":{}}}],["webworker",{"_index":5354,"title":{},"body":{"todo.html":{}}}],["well",{"_index":5249,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1640,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2449,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":5141,"title":{},"body":{"license.html":{}}}],["whether",{"_index":5247,"title":{},"body":{"license.html":{}}}],["white",{"_index":1011,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["whitelist",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":1210,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window.showopenfilepicker",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":5121,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":5434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":5432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":5429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1463,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{},"license.html":{}}}],["withviewtransitions",{"_index":5435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":5115,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1274,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1279,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":5421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workers",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2929,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["works",{"_index":873,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":5103,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":5252,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["writes",{"_index":2279,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["writing",{"_index":5365,"title":{},"body":{"todo.html":{}}}],["wurde",{"_index":1102,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":81,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["yield",{"_index":1569,"title":{},"body":{"injectables/MetadataService.html":{}}}],["z",{"_index":1004,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zone",{"_index":2596,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["zoneless",{"_index":2853,"title":{},"body":{"changelog.html":{}}}],["zu",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["zugewiesen",{"_index":1082,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Album.html":{"url":"interfaces/Album.html","title":"interface - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { Router } from '@angular/router';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatProgressBar\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  private router = inject(Router);\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n\n  private readonly indexedDbTracks = signal([]);\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.indexedDbTracks()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.indexedDbTracks();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.year.localeCompare(b.year));\n  });\n\n  readonly tracks = computed(() => {\n    let filtered = this.indexedDbTracks();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('metatags'));\n      const tagsWithOptionalBlobUrls = result.map((tag) => {\n        return this.metadataService.createObjectUrlForEmbeddedPicture(tag);\n      });\n\n      this.indexedDbTracks.set(tagsWithOptionalBlobUrls || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.indexedDbTracks().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.indexedDbTracks());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    const tracks = this.indexedDbTracks().filter((track) => track.album === album.name);\n    await this.addTracksToPlaylist(...tracks);\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    await this.addTracksToPlaylist(track);\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByCrc(index: number, track: IndexedDbTrackMetadata): string {\n    return track.crc;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  templateUrl: './app.component.html',\n  imports: [ShellComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    const updateService = inject(UpdateService);\n    const iconRegistry = inject(MatIconRegistry);\n    const sanitizer = inject(DomSanitizer);\n    const themeService = inject(ThemeService);\n\n    updateService.init();\n\n    themeService.initializeTheme();\n\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    iconRegistry.addSvgIcon('logo', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._audioSourceNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      analyser.disconnect();\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      analyser.disconnect();\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true,\n  standalone: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand, ...arguments_: unknown[]): string {\n    if (!value) {\n      return '';\n    }\n\n    if (value = 1000 && value = 10_000) {\n      return value.toString().slice(0, 2) + 'K';\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate',\n  standalone: true\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | undefined): string {\n    if (!value) {\n      return '0';\n    }\n    const bitrate = Math.round(value / 1000);\n    return `${bitrate} kb/s`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Color {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtImage.html":{"url":"interfaces/CoverArtImage.html","title":"interface - CoverArtImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            front\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            thumbnails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        front\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        front:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnails:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtResponse.html":{"url":"interfaces/CoverArtResponse.html","title":"interface - CoverArtResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            images\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         CoverArtImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverArtImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            TimePipe\n                            BitratePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Readonly\n                                coverUrl\n                            \n                            \n                                    Readonly\n                                track\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.track()?.metadata?.coverColors?.darkMuted?.hex\n      : this.track()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.track()?.metadata?.coverUrl?.original)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        track\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, input } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\nimport { Track } from '../player.types';\nimport { BitratePipe } from './bitrate.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [TimePipe, BitratePipe]\n})\nexport class CoverDisplayComponent {\n  private themeService = inject(ThemeService);\n\n  readonly track = input.required();\n\n  readonly coverUrl = computed(() => this.track()?.metadata?.coverUrl?.original);\n\n  readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.track()?.metadata?.coverColors?.darkMuted?.hex\n      : this.track()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = track();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = track();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirHandleEntry.html":{"url":"interfaces/DirHandleEntry.html","title":"interface - DirHandleEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirHandleEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:     FileSystemDirectoryHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemDirectoryHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService extends FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  async init() {\n    const entry = await firstValueFrom(this.indexedDbService.getByID('dirHandle', 1));\n    if (entry) {\n      const granted = await verifyPermission(entry.handle);\n      if (granted) {\n        this.currentFolderHandle = entry.handle;\n      }\n    }\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle = handle;\n      await this.indexedDbService.update('dirHandle', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    if (this.currentFolderHandle) {\n      return getAudioFilesFromDirHandle(this.currentFolderHandle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-equalizer\n            \n\n\n            \n                imports\n                \n                            MatSliderModule\n                            BandPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                BANDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { AudioService, FREQUENCY_BANDS } from '../audio.service';\nimport { BandPipe } from './band.pipe';\nimport { MatSliderModule } from '@angular/material/slider';\n\n@Component({\n  selector: 'mtb-equalizer',\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  imports: [MatSliderModule, BandPipe],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  audioService = inject(AudioService);\n\n  BANDS = FREQUENCY_BANDS;\n\n  displayFunction(value: number): string {\n    const number_ = value.toFixed(1);\n    return number_ + ' dB';\n  }\n}\n\n    \n\n    \n        \n  \n    @for (band of BANDS; track band; let i = $index) {\n      \n        \n          {{ band | band }}\n          \n        \n      \n    }\n\n    \n      \n        GAIN\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for (band of BANDS; track band; let i = $index) {                        {{ band | band }}                            }                  GAIN                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EqualizerGainValues.html":{"url":"interfaces/EqualizerGainValues.html","title":"interface - EqualizerGainValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EqualizerGainValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [band: number]:        number\n\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._audioSourceNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      analyser.disconnect();\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      analyser.disconnect();\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ALLOWED_MIMETYPES = [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n];\n\nexport const ALLOWED_EXTENSIONS = ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4'];\n\nexport interface FileData {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Readonly\n                                filesDroped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(['*/*'])\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filesDroped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer?.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (let index = 0; index \n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                init\n                            \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileData } from './file-loader.helpers';\n\nexport abstract class FileLoaderService {\n  abstract currentFolderHandle?: FileSystemDirectoryHandle;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n  abstract init(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                            \n                                buttonActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ButtonGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private checkIntervals: number[] = [];\n  private pressedButtonsCaches: ActionCache[][] = [];\n  private activeAxesCaches: ActionCache[][] = [];\n\n  buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-hotkeys-help-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _pause\n                            \n                            \n                                defaults\n                            \n                            \n                                    Optional\n                                dialogRef\n                            \n                            \n                                helpOpen\n                            \n                            \n                                hotkeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    element: this.document\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hotkeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private worker: Worker;\n  private nextId = 0;\n  private pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexedDbTrackMetadata.html":{"url":"interfaces/IndexedDbTrackMetadata.html","title":"interface - IndexedDbTrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IndexedDbTrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TrackMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FileLoaderService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:27\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:46\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                        \n                            \n                                Inherited from         FileLoaderService\n\n                            \n                        \n                    \n                        \n                                Defined in         FileLoaderService:11\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService extends FileLoaderService {\n  private fileInput!: HTMLInputElement;\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  private files: File[] = [];\n\n  constructor() {\n    super();\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  async init() {}\n\n  async openFiles(): Promise {\n    return this.files.map((file) => ({ file }));\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            NgArrayPipesModule\n                            MatMenu\n                            MatMenuContent\n                            MatMenuItem\n                            MatMenuTrigger\n                            MatIcon\n                            MatIconButton\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            SafePipe\n                            MatProgressBar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                selectedAlbum\n                            \n                            \n                                    Readonly\n                                selectedArtist\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                uniqueAlbums\n                            \n                            \n                                    Readonly\n                                uniqueArtists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAlbumToPlaylist\n                            \n                            \n                                    Async\n                                addArtistToPlaylist\n                            \n                            \n                                    Async\n                                addTracksToPlaylist\n                            \n                            \n                                    Async\n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                playTrack\n                            \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                trackByAlbum\n                            \n                            \n                                trackByArtist\n                            \n                            \n                                trackByCrc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAlbumToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAlbumToPlaylist(album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addArtistToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addArtistToPlaylist(artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTracksToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbTracks\n                                            \n                                                        IndexedDbTrackMetadata[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTrackToPlaylist(track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAlbum\n                        \n                    \n                \n            \n            \n                \ntrackByAlbum(index: number, album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByArtist\n                        \n                    \n                \n            \n            \n                \ntrackByArtist(index: number, artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByCrc\n                        \n                    \n                \n            \n            \n                \ntrackByCrc(index: number, track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedAlbum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedArtist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.indexedDbTracks();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueAlbums\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.indexedDbTracks();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.year.localeCompare(b.year));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueArtists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const filtered = this.indexedDbTracks()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { Router } from '@angular/router';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatProgressBar\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  private router = inject(Router);\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n\n  private readonly indexedDbTracks = signal([]);\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.indexedDbTracks()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.indexedDbTracks();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.year.localeCompare(b.year));\n  });\n\n  readonly tracks = computed(() => {\n    let filtered = this.indexedDbTracks();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('metatags'));\n      const tagsWithOptionalBlobUrls = result.map((tag) => {\n        return this.metadataService.createObjectUrlForEmbeddedPicture(tag);\n      });\n\n      this.indexedDbTracks.set(tagsWithOptionalBlobUrls || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.indexedDbTracks().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.indexedDbTracks());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    const tracks = this.indexedDbTracks().filter((track) => track.album === album.name);\n    await this.addTracksToPlaylist(...tracks);\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    await this.addTracksToPlaylist(track);\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByCrc(index: number, track: IndexedDbTrackMetadata): string {\n    return track.crc;\n  }\n}\n\n    \n\n    \n        @if (metadataService.processionPercent() \n}\n\n\n  \n    \n      \n        \n          (All)\n          \n            \n              \n             \n        \n          {{ artist }}\n          \n            \n              \n            \n          \n        \n      \n    \n    \n    \n      \n        Add to Playlist\n      \n    \n  \n\n  \n    \n      \n        (All)\n        \n          \n            @if (album && album.coverUrl) {\n              \n            }\n          \n          {{ album.name }}\n          {{ album.year }}\n          \n            \n              \n            \n          \n        \n      \n    \n    \n    \n      \n        Add to Playlist\n      \n    \n  \n\n  \n    \n      \n        \n          \n            @if (track && track.coverUrl) {\n              \n            }\n          \n          @if (selectedAlbum()) {\n            {{ track.track ? track.track + '. ' : '' }}{{ track.title || track.fileName }}\n          } @else {\n            {{ track.title || track.fileName }}\n          }\n          \n            \n              \n            \n          \n        \n      \n    \n    \n    \n      \n        Add to Playlist\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (metadataService.processionPercent() }                              (All)                                                                   {{ artist }}                                                                                                  Add to Playlist                                (All)                              @if (album && album.coverUrl) {                          }                    {{ album.name }}          {{ album.year }}                                                                                                  Add to Playlist                                                      @if (track && track.coverUrl) {                          }                    @if (selectedAlbum()) {            {{ track.track ? track.track + \\'. \\' : \\'\\' }}{{ track.title || track.fileName }}          } @else {            {{ track.title || track.fileName }}          }                                                                                                  Add to Playlist            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                processionPercent\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToLibrary\n                            \n                            \n                                createObjectUrlForEmbeddedPicture\n                            \n                            \n                                    Async\n                                createTrackFromFile\n                            \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToLibrary\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToLibrary(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AsyncGenerator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createObjectUrlForEmbeddedPicture\n                        \n                    \n                \n            \n            \n                \ncreateObjectUrlForEmbeddedPicture(meta: TrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meta\n                                            \n                                                            TrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TrackMetadata\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTrackFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTrackFromFile(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processionPercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { crc32 } from '@allex/crc32';\nimport { computed, inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata, type Track, TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\nimport { FileData } from '../file-loader-service/file-loader.helpers';\n\n// import * as SparkMD5 from 'spark-md5';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private id3TagsService = inject(Id3TagsService);\n  private lastfmMetadataService = inject(LastfmMetadataService);\n  private musicbrainzService = inject(MusicbrainzService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  private readonly totalFilesToProcess = signal(0);\n  private readonly filesToProcess = signal(0);\n  readonly processionPercent = computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  });\n\n  async *addFilesToLibrary(...fileDatas: FileData[]): AsyncGenerator {\n    if (fileDatas?.length) {\n      this.totalFilesToProcess.set(fileDatas.length);\n      this.filesToProcess.set(fileDatas.length);\n      for (const fileData of fileDatas.values()) {\n        const track = await this.createTrackFromFile(fileData);\n        if (track) {\n          yield track; // Yield each track as soon as it's ready\n        }\n        this.filesToProcess.update((files) => files - 1);\n      }\n      this.totalFilesToProcess.set(0);\n    }\n  }\n\n  async createTrackFromFile(fileData: FileData): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.getMetadata(fileData);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: fileData.file,\n      fileHandle: fileData.fileHandle,\n      metadata: metadata\n    };\n  }\n\n  async getMetadata(fileData: FileData): Promise {\n    // console.time('hash');\n    const crc = generateFileHash(fileData.file);\n    // console.timeEnd('hash');\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('metatags', crc));\n\n      if (metadataCache) {\n        if (\n          metadataCache.embeddedPicture &&\n          this.useTagEmbeddedPicture() &&\n          (metadataCache.coverUrl.thumb === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())\n        ) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    // console.time('id3tags');\n    const tags = await this.id3TagsService.extractTags(fileData.file);\n    // console.timeEnd('id3tags');\n    if (!tags) {\n      // if no tags\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverPicture | undefined;\n\n    if (this.useWebMetainfos()) {\n      if (tags.artist && tags.album) {\n        // console.time('webcover');\n        coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n        if (!coverUrls) {\n          coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n        }\n        // console.timeEnd('webcover');\n      } else {\n        // console.warn('Missing tags for lookup');\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n\n    if (coverUrls?.original) {\n      // console.time('vibrant');\n      palette = await extractColorsWithNodeVibrant(coverUrls.original);\n      // console.timeEnd('vibrant');\n    } else if (tags.picture) {\n      // console.time('vibrant');\n      const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n      palette = await extractColorsWithNodeVibrant(objectUrl);\n      URL.revokeObjectURL(objectUrl);\n      // console.timeEnd('vibrant');\n    }\n\n    const metadata: IndexedDbTrackMetadata = {\n      crc: crc,\n      fileName: fileData.file.name,\n      fileHandle: fileData.fileHandle,\n      coverUrl: coverUrls ?? { thumb: this.PLACEHOLDER_URL, original: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await this.indexedDBService.add('metatags', metadata).toPromise();\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (meta.coverUrl.original === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      if (meta.coverUrl.original.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.original);\n      }\n      if (meta.coverUrl.thumb.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.thumb);\n      }\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nfunction generateFileHash(file: File): string {\n  // TODO: replace with real file hashing? https://stackoverflow.com/questions/20917710/fast-file-hashing-of-large-files\n  const hashString: string = file.name + file.type + file.size + file.lastModified;\n  return crc32(hashString, 'hex') as string;\n}\n//\n// async function generateFileHashMD5(file: File): Promise {\n//   return SparkMD5.ArrayBuffer.hash(await file.arrayBuffer());\n// }\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  const palette = await Vibrant.from(url).getPalette();\n  return {\n    vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n    darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n    lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n    muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n    darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n    lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  templateUrl: './metadata-settings.component.html',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule]\n})\nexport class MetadataSettingsComponent {\n  metadataService = inject(MetadataService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n    this.localStorageService.store('useWebMetainfos', event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n    this.localStorageService.store('useTagsCache', event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('useTagEmbeddedPicture', event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('preferTagEmbeddedPicture', event.checked);\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('metatags').toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzReleaseGroup.html":{"url":"interfaces/MusicbrainzReleaseGroup.html","title":"interface - MusicbrainzReleaseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzReleaseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            first-release-date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first-release-date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first-release-date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzResponse.html":{"url":"interfaces/MusicbrainzResponse.html","title":"interface - MusicbrainzResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            release-groups\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release-groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release-groups:         MusicbrainzReleaseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MusicbrainzReleaseGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FileLoaderService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:20\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:40\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:30\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                        \n                            \n                                Inherited from         FileLoaderService\n\n                            \n                        \n                    \n                        \n                                Defined in         FileLoaderService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService extends FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  async init() {\n    const entry = await firstValueFrom(this.indexedDbService.getByID('dirHandle', 1));\n    if (entry) {\n      const granted = await verifyPermission(entry.handle);\n      if (granted) {\n        this.currentFolderHandle = entry.handle;\n      }\n    }\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle = handle;\n      await this.indexedDbService.update('dirHandle', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    if (this.currentFolderHandle) {\n      return getAudioFilesFromDirHandle(this.currentFolderHandle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-player\n            \n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                                VisualizerComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                            NgClass\n                                FileDropOverlayComponent\n                            TimePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                isPlaylistEmpty\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                            \n                                    Async\n                                onReload\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.component.ts:52\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onReload\n                        \n                    \n                \n            \n            \n                \n                        \n                    onReload()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaylistEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentPlaylist().length === 0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:156\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { ALLOWED_MIMETYPES } from './file-loader-service/file-loader.helpers';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { PlayerService } from './player.service';\nimport { HotkeysService } from '../services/hotkeys/hotkeys.service';\nimport { GamepadService } from '../services/gamepad/gamepad.service';\nimport { GamepadAxes, GamepadButtons } from '../services/gamepad/gamepad.types';\nimport { TitleService } from '../services/title.service';\nimport { AudioService } from './audio.service';\nimport { TimePipe } from './time.pipe';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { VisualizerComponent } from './visualizer/visualizer.component';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgClass } from '@angular/common';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  selector: 'mtb-player',\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    PlaylistComponent,\n    MatButtonModule,\n    MatIconModule,\n    CoverDisplayComponent,\n    VisualizerComponent,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatSliderModule,\n    MatMenuModule,\n    NgClass,\n    FileDropOverlayComponent,\n    TimePipe\n  ]\n})\nexport default class PlayerComponent implements OnInit, OnDestroy {\n  playerService = inject(PlayerService);\n  private titleService = inject(TitleService);\n  private gamepadService = inject(GamepadService, { optional: true });\n  private hotkeysService = inject(HotkeysService, { optional: true });\n  private fileLoaderService = inject(FileLoaderService);\n  audioService = inject(AudioService);\n\n  readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  constructor() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n  }\n\n  async ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showPicker());\n    }\n  }\n\n  async onReload() {\n    await this.fileLoaderService.init();\n    return this.fileLoaderService.currentFolderHandle ? this.loadFiles() : this.showPicker();\n  }\n\n  readonly isPlaylistEmpty = computed(() => this.playerService.currentPlaylist().length === 0);\n\n  onSliderPositionChanged(value: number) {\n    if (value !== null) {\n      this.playerService.setSeekPosition(value);\n    }\n  }\n\n  seekLeft(value: number) {\n    this.playerService.seekLeft(value + 10);\n  }\n\n  seekRight(value: number) {\n    this.playerService.seekRight(value + 10);\n  }\n\n  toggleMute() {\n    // TODO: implement\n  }\n\n  increaseVolume(value: number) {\n    this.audioService.setVolume(this.audioService.volume() + value / 100);\n  }\n\n  decreaseVolume(value: number) {\n    this.audioService.setVolume(this.audioService.volume() - value / 100);\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files.map((file) => ({ file })));\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol  this.getVolumeIconForLevel(this.audioService.volume()));\n\n  toggleRepeat() {\n    this.playerService.toggleRepeat();\n  }\n\n  toggleShuffle() {\n    this.playerService.toggleShuffle();\n  }\n\n  formatLabel(value: number): string {\n    return formatSecondsAsClock(value, false);\n  }\n\n  async showPicker() {\n    await this.fileLoaderService.showPicker();\n    return this.loadFiles();\n  }\n\n  async loadFiles() {\n    return this.playerService.loadFiles();\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n}\n\n    \n\n    \n        \n  @if (isPlaylistEmpty()) {\n    \n       Reload last directory\n    \n  }\n\n\n\n  \n\n\n\n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n\n\n  \n    \n      \n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (isPlaylistEmpty()) {           Reload last directory      }        @if (audioService.isPlaying()) {          } @else {          }                                      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:39\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \naddTrackToPlaylist(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:204\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:257\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:261\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:222\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:240\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:275\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:294\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n  private audioService = inject(AudioService);\n  private localStorageService = inject(LocalStorageService);\n  private fileLoaderService = inject(FileLoaderService);\n  private metadataService = inject(MetadataService);\n  private themeService = inject(ThemeService);\n  private wakelockService = inject(WakelockService, { optional: true });\n  private mediaSessionService = inject(MediaSessionService, { optional: true });\n\n  private destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n        for (const fileHandle of launchParameters.files) {\n          const file = await fileHandle.getFile();\n          if (ALLOWED_MIMETYPES.includes(file.type)) {\n            await this.addFilesToPlaylist(file);\n          }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.original ? [{ src: track.metadata.coverUrl.original, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const fileDatas: FileData[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...fileDatas);\n  }\n\n  addTrackToPlaylist(song: Track) {\n    if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.crc === song.metadata?.crc)) {\n      this.currentPlaylist.update((playlist) => [...playlist, song]);\n    }\n  }\n\n  async addFilesToPlaylist(...fileDatas: FileData[]) {\n    for await (const track of this.metadataService.addFilesToLibrary(...fileDatas)) {\n      this.addTrackToPlaylist(track);\n    }\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  selectSong(song: Track) {\n    this.selectedTrack.set(song);\n  }\n\n  async playPauseTrack(track: Track) {\n    if (this.audioService.isLoading()) {\n      return;\n    }\n\n    if (this.currentlyLoadedTrack()?.metadata?.crc === track.metadata?.crc) {\n      await this.playPause();\n      return;\n    }\n    await this.playTrack(track);\n  }\n\n  async playPause() {\n    if (this.audioService.isLoading() || !this.currentlyLoadedTrack()) {\n      if (this.selectedTrack()) {\n        await this.playTrack(this.selectedTrack());\n      }\n      return;\n    }\n    if (this.audioService.isPaused()) {\n      await this.audioService.play();\n      await this.afterPlayLoaded();\n    } else {\n      this.audioService.pause();\n      await this.afterPausedOrStopped();\n    }\n  }\n\n  async stop() {\n    if (this.audioService.isLoading() || !this.currentlyLoadedTrack()) {\n      return;\n    }\n    this.audioService.stop();\n    this.currentlyLoadedTrack.set(undefined);\n    await this.afterPausedOrStopped();\n  }\n\n  async next(): Promise {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // eslint-disable-next-line sonarjs/pseudo-random\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            MatInput\n                            FormsModule\n                            MatProgressBar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                filteredPlaylist\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                scrollViewport\n                            \n                            \n                                    Readonly\n                                searchTerm\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByCrc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:66\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByCrc\n                        \n                    \n                \n            \n            \n                \ntrackByCrc(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const term = this.searchTerm().toLowerCase();\n    if (!term) return this.playerService.currentPlaylist();\n\n    return (\n      this.playerService\n        .currentPlaylist()\n        // search in title, artist and file name\n        .filter((song) => (song.metadata?.title || song.file.name).toLowerCase().includes(term) || (song.metadata?.artist || '').toLowerCase().includes(term))\n    );\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scrollViewport\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('scrollViewport')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { VisualsService } from '../visualizer/visuals/visuals.service';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { MatInput } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Component({\n  selector: 'mtb-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    MatInput,\n    FormsModule,\n    MatProgressBar\n  ]\n})\nexport class PlaylistComponent {\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  visualsService = inject(VisualsService);\n  metadataService = inject(MetadataService);\n  private destroRef = inject(DestroyRef);\n\n  readonly searchTerm = signal('');\n\n  readonly filteredPlaylist = computed(() => {\n    const term = this.searchTerm().toLowerCase();\n    if (!term) return this.playerService.currentPlaylist();\n\n    return (\n      this.playerService\n        .currentPlaylist()\n        // search in title, artist and file name\n        .filter((song) => (song.metadata?.title || song.file.name).toLowerCase().includes(term) || (song.metadata?.artist || '').toLowerCase().includes(term))\n    );\n  });\n\n  readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 140;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.filteredPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n      const searchTerm = this.searchTerm();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack && !searchTerm) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.filteredPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.filteredPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.crc === currentTrack.metadata?.crc);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByCrc(index: number, song: Track): string {\n    return song.metadata.crc;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ filteredPlaylist().length }} entries\n\n\n\n\n\n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying && visualsService.visualMode() !== 'off') {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n@if (metadataService.processionPercent() \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (searchTerm()) {                }  {{ filteredPlaylist().length }} entries                    @if (song && song.metadata && song.metadata.coverUrl) {                            }        @let songPlaying = isPlaying(song)();        @if (songPlaying && visualsService.visualMode() !== \\'off\\') {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }      @if (metadataService.processionPercent() }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverPicture.html":{"url":"interfaces/RemoteCoverPicture.html","title":"interface - RemoteCoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            original\n                                        \n                                \n                                \n                                        \n                                            thumb\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        original\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumb:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-settings\n            \n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  selector: 'mtb-settings',\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss',\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent]\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isHandset\n                            \n                            \n                                loaderService\n                            \n                            \n                                    Readonly\n                                sidenav\n                            \n                            \n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('drawer')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'mtb-shell',\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss',\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatButtonModule, MatProgressSpinnerModule, RouterOutlet]\n})\nexport class ShellComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  titleService = inject(TitleService);\n  loaderService = inject(LoaderService);\n  private router = inject(Router);\n\n  private isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n      @if (loaderService.isLoading()) {\n        \n      }\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                buttonTooltip\n                            \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        buttonTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  templateUrl: './storage-settings.component.html',\n  imports: [MatCardModule, MatButtonModule]\n})\nexport class StorageSettingsComponent {\n  private localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { TinyColor } from '@thebespokepixel/es-tinycolor';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Color } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  private primaryColor = FALLBACK_PRIMARY_COLOR;\n\n  private accentColor = FALLBACK_ACCENT_COLOR;\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  primaryColorPalette: Color[] = [];\n  accentColorPalette: Color[] = [];\n\n  initializeTheme() {\n    this.setOverlayClass();\n    this.setPrimaryColor(this.primaryColor);\n    this.setAccentColor(this.accentColor);\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n    this.localStorageService.store('darkMode', darkMode);\n    this.setOverlayClass();\n  }\n\n  setColors(colors: ColorConfig) {\n    this.setPrimaryColor(colors.mainColor);\n    this.setAccentColor(colors.peakColor);\n  }\n\n  private setPrimaryColor(color?: string) {\n    this.primaryColor = color || FALLBACK_PRIMARY_COLOR;\n    this.primaryColorPalette = this.computeColors(this.primaryColor);\n\n    for (const clr of this.primaryColorPalette) {\n      document.documentElement.style.setProperty(`--theme-primary-${clr.name}`, clr.hex);\n    }\n\n    this.meta.addTag({ name: 'theme-color', content: this.primaryColor }, true);\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor });\n  }\n\n  private setAccentColor(color?: string) {\n    this.accentColor = color || FALLBACK_ACCENT_COLOR;\n    this.accentColorPalette = this.computeColors(this.accentColor);\n\n    for (const clr of this.accentColorPalette) {\n      document.documentElement.style.setProperty(`--theme-accent-${clr.name}`, clr.hex);\n    }\n  }\n\n  private setOverlayClass() {\n    if (this.darkMode()) {\n      document.documentElement.style.setProperty('--app-color-scheme', 'dark');\n    } else {\n      document.documentElement.style.setProperty('--app-color-scheme', 'light');\n    }\n  }\n\n  private computeColors(hex: string): Color[] {\n    return [\n      this.getColorObject(new TinyColor(hex).lighten(55), '0'),\n      this.getColorObject(new TinyColor(hex).lighten(45), '10'),\n      this.getColorObject(new TinyColor(hex).lighten(35), '20'),\n      this.getColorObject(new TinyColor(hex).lighten(30), '25'),\n      this.getColorObject(new TinyColor(hex).lighten(25), '30'),\n      this.getColorObject(new TinyColor(hex).lighten(20), '35'),\n      this.getColorObject(new TinyColor(hex).lighten(15), '40'),\n      this.getColorObject(new TinyColor(hex), '50'),\n      this.getColorObject(new TinyColor(hex).darken(5), '60'),\n      this.getColorObject(new TinyColor(hex).darken(10), '70'),\n      this.getColorObject(new TinyColor(hex).darken(15), '80'),\n      this.getColorObject(new TinyColor(hex).darken(18), '90'),\n      this.getColorObject(new TinyColor(hex).darken(21), '95'),\n      this.getColorObject(new TinyColor(hex).darken(24), '98'),\n      this.getColorObject(new TinyColor(hex).darken(27), '99'),\n      this.getColorObject(new TinyColor(hex).darken(30), '100')\n    ];\n  }\n\n  private getColorObject(value: TinyColor, name: string): Color {\n    const color = new TinyColor(value);\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name: name,\n      hex: color.toHexString(false),\n      darkContrast: color.getBrightness() > lightnessLimit\n      // darkContrast: c.isLight()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  templateUrl: './theme-settings.component.html',\n  imports: [MatCardModule, MatCheckboxModule]\n})\nexport class ThemeSettingsComponent {\n  themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true,\n  standalone: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            crc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private swUpdate = inject(SwUpdate);\n  private dialog = inject(MatDialog);\n  private destroRef = inject(DestroyRef);\n\n  constructor() {\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroRef)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alpha\n                            \n                            \n                                analyser\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Readonly\n                                gap\n                            \n                            \n                                    Readonly\n                                lineThickness\n                            \n                            \n                                localStorageService\n                            \n                            \n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Readonly\n                                smoothing\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LocalStorageService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule]\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  private gamepadService = inject(GamepadService, { optional: true });\n  audioService = inject(AudioService);\n  playerService = inject(PlayerService);\n  visualsService = inject(VisualsService);\n  localStorageService = inject(LocalStorageService);\n\n  readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                analyser\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                mode\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({})\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('bars')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ thickness: 2 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]',\n  standalone: true\n})\nexport class VisualsDirective implements OnDestroy {\n  // private zone = inject(NgZone);\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i  {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                wakelock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        wakelock\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WakeLockSentinel\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  wakelock?: WakeLockSentinel;\n\n  constructor() {}\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\nGenerated by auto-changelog.\nv20.2.9\n\nchore: update Angular and related dependencies to latest versions 9ea103a\n\nv20.2.8\n\n17 March 2025\n\n\nfeat: refactor progress tracking to use MetadataService and improve track rendering with trackBy functions, use generator for addFilesToLibrary ea0dd16\nfix: fix settings persistence, support etag embedded cover pictures again 5effed4\nfeat: update cover display to use background image for album covers and improve styling 7fa33e8\n\nv20.2.7\n\n16 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.34.0 #541\nfeat: add progress bar for file processing and enhance artist/album display in library, add an add all artist button, show track number and year in library, remove console warns, remember filename in metadata 7353f84\nRelease 20.2.7 dfa400c\n\nv20.2.6\n\n15 March 2025\n\n\nRelease 20.2.6 34663be\nfix: correct formatting in .npmrc for registry configuration f37d715\n\nv20.2.5\n\n15 March 2025\n\n\nRelease 20.2.5 452f074\n\nv20.2.4\n\n15 March 2025\n\n\nRelease 20.2.4 7d3846a\n\nv20.2.3\n\n15 March 2025\n\n\nRelease 20.2.3 0107dc5\nfeat: enhance file handling by introducing FileData interface and updating related services, save file handles in indexed db, fix library and add context menu to tracks c3bb2d1\nfeat: implement virtual scrolling for artists, albums, and tracks; add menus for album and track actions, add (All) option, doubleclick adds and navigates eb5338b\n\nv20.2.2\n\n15 March 2025\n\n\nchore(deps): update Angular and related dependencies to latest versions f0442a7\nRelease 20.2.2 f3f93f6\n\nv20.2.1\n\n11 March 2025\n\n\nfix(deps): update dependency music-metadata to v11.0.2 #540\nchore(deps): update typescript-eslint monorepo to v8.26.1 #529\nRelease 20.2.1 c6dff5e\n\nv20.2.0\n\n11 March 2025\n\n\nfeat: scroll to track when playing starts and its not in view b9445d4\nfeat: remove polyfills from project configuration a0517fe\nfeat: add search functionality to playlist with input field and filtering logic b925747\n\nv20.1.4\n\n11 March 2025\n\n\nrefactor: replace BaseSubscribingClass with DestroyRef 72be3d3\nRelease 20.1.4 5e77b33\nfeat: add view transitions to router configuration b2dcbb8\n\nv20.1.3\n\n9 March 2025\n\n\nfeat: enhance ID3 tags extraction and improve metadata handling, refactorings a11eb42\nRelease 20.1.3 305aec6\n\nv20.1.2\n\n9 March 2025\n\n\nRelease 20.1.2 ba13cfe\nrefactor: change to zoneless change detection 3f668a5\n\nv20.1.1\n\n9 March 2025\n\n\nfeat: update typography settings and optimize font loading in HTML 722901c\nRelease 20.1.1 858ff56\n\nv20.1.0\n\n9 March 2025\n\n\nRelease 20.1.0 d78443f\nfeat: refactor cover and playlist components for improved performance, performance hack für visuals f1580e8\nchore: update dependencies in package.json and package-lock.json 9e95c2d\n\nv20.0.1\n\n9 March 2025\n\n\nfeat: updated to material 3 theme, fixed dark mode handling 9b0ad09\nfeat: implement circular waveform visualization and initialize bark scale mapping 46e627b\nfeat: optimize image loading in cover and playlist components using NgOptimizedImage 79c83aa\n\nv20.0.0\n\n8 March 2025\n\n\nfeat: enhance ESLint configuration with Angular rules and TypeScript support 2b942c4\nRelease 20.0.0 d641392\nfeat: update ESLint configuration with TypeScript and SonarJS support, add custom rule overrides ef11066\n\nv19.5.4\n\n8 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.33.0 #539\nRelease 19.5.4 86a63af\nchore: update dependencies and add eslint packages c9dcf09\nfeat:  nearly complete signal refactoring also fixing long standing bugs f3a3520\n\nv19.5.3\n\n2 March 2025\n\n\nfeat: use @let syntax in templates, better VisualizerOptions types b7bb801\nRelease 19.5.3 eac8dd6\n\nv19.5.1\n\n2 March 2025\n\n\nRelease 19.5.1 8ebff84\nfeat: add circular visualization modes for frequency bars and oscilloscope 4e27dea\nfix: make gamepad and wakelock services optional to improve compatibility bb8466d\n\nv19.5.0\n\n2 March 2025\n\n\nRelease 19.5.0 3f2c562\nfix: fix file drop overlay not working as expected 94b7001\nfix: add postcss-html dependency to package.json and package-lock.json 85d2a14\n\nv19.4.15\n\n2 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.32.0 #532\nchore: update dependencies to latest versions b0d0fe4\nRelease 19.4.15 a2b1db1\nfix: update HTML components to self-closing tags 7785053\n\nv19.4.14\n\n27 February 2025\n\n\nchore: update Angular and related dependencies to version 19.2.x d8a2bf9\nRelease 19.4.14 0c889a3\n\nv19.4.13\n\n24 February 2025\n\n\nchore(deps): update actions/upload-artifact action to v4 #527\nRelease 19.4.13 9fb4192\nfix: eslint unicorn autofixes f154aed\nfeat: enhance visuals worker by optimizing data structures and pre-calculating arrays fee270f\n\nv19.4.12\n\n24 February 2025\n\n\nRelease 19.4.12 6c63788\nrefactor: remove unused dependencies 12a71dd\n\nv19.4.11\n\n23 February 2025\n\n\nRelease 19.4.11 d505863\nfix: update ESLint configuration inputs and production exclusions 6bfb6ba\n\nv19.4.10\n\n23 February 2025\n\n\nRelease 19.4.10 17e4083\n\nv19.4.9\n\n23 February 2025\n\n\nRelease 19.4.9 cf13446\nrefactor: us prive functions instead of modules c31aaa6\n\nv19.4.8\n\n23 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.31.2 #522\nrefactor: update ESLint configuration to use ES module syntax and cleanup deps 4dbf4b8\nRelease 19.4.8 0f45127\nchore: update project configuration and add dotenv-cli dependency 063d395\n\nv19.4.7\n\n23 February 2025\n\n\nRelease 19.4.7 4d9ca69\nchore: update HTML templates and ESLint configuration for consistency 33bb6c8\n\nv19.4.6\n\n23 February 2025\n\n\nchore(deps): update Angular and ESLint dependencies to latest versions 00d5b5e\nRelease 19.4.6 ab5a0f8\n\nv19.4.5\n\n4 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.3 #511\nchore(deps): update @swc/core, @types/node, and @typescript-eslint packages to latest versions 4df45ed\nRelease 19.4.5 f52095f\n\nv19.4.4\n\n2 February 2025\n\n\nchore: deps 76ace70\nRelease 19.4.4 072caca\n\nv19.4.3\n\n27 January 2025\n\n\nchore: deps a04aa39\nRelease 19.4.3 e844d5d\n\nv19.4.2\n\n24 January 2025\n\n\nchore: deps d50fcd7\nRelease 19.4.2 2e2cf66\n\nv19.4.1\n\n21 January 2025\n\n\nchore: deps c3062ed\nRelease 19.4.1 e96ef56\nchore: mise 7b8cdeb\n\nv19.4.0\n\n17 January 2025\n\n\nchore: deps 37fa04d\nRelease 19.4.0 155e1fd\nchore: readme, mise, deps 726da93\n\nv19.3.0\n\n14 January 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.1 #483\nchore: update to latest node-vibrant f306ca1\nRelease 19.3.0 ca87d69\n\nv19.2.10\n\n11 January 2025\n\n\nchore: deps a280f97\nRelease 19.2.10 15dded8\n\nv19.2.9\n\n3 January 2025\n\n\nRelease 19.2.9 bd67275\n\nv19.2.8\n\n14 December 2024\n\n\nRelease 19.2.8 af0ef42\n\nv19.2.7\n\n14 December 2024\n\n\nRelease 19.2.7 7d9d809\n\nv19.2.6\n\n11 December 2024\n\n\nchore: deps c042ae8\nchore: updated config to latest nx defaults 0a9aedc\nchore: updated config to latest nx defaults a555517\n\nv19.2.5\n\n7 December 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.28.0 #473\nRevert \"fix: disable npm caching\" f908dd2\nfix: disable npm caching 1a33b93\nRelease 19.2.5 4a42a18\n\nv19.2.4\n\n7 December 2024\n\n\nchore: deps 1a65661\nRelease 19.2.4 a19a09f\n\nv19.2.3\n\n21 November 2024\n\n\nRelease 19.2.3 dc45fe1\nfeat: migrate to application executor 0325a08\n\nv19.2.2\n\n21 November 2024\n\n\nfix: stylelint fixes 2500235\nRelease 19.2.2 b416bff\n\nv19.2.1\n\n21 November 2024\n\n\nRelease 19.2.1 8cab1e2\nfix: migrate jest and eslint to inferred plugins ee8b31b\n\nv19.2.0\n\n21 November 2024\n\n\nchore: input signal migration f8cbc65\nRelease 19.2.0 c363f4e\nfix: pass sampleRate 56a3899\n\nv19.1.1\n\n21 November 2024\n\n\nchore(deps): update angular monorepo to v19 #466\nchore(deps): update w9jds/firebase-action action to v13.26.0 #465\nchore(deps): update angularmaterial monorepo to v19 #467\nchore(config): migrate config renovate.json #468\nchore: use ng-packgr-lite builds, fix jest-preset-angular config b599685\nfix: revert ng-packgr temporarily bb34f11\nRelease 19.1.1 ada6807\n\nv19.1.0\n\n21 November 2024\n\n\nchore: ng 19 0ba1f5d\nRelease 19.1.0 d2765b8\nchore: remove console time 7b38580\n\nv19.0.10\n\n9 November 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.24.2 #460\nfix(deps): update dependency tslib to v2.8.1 #457\nRelease 19.0.10 1333d05\n\nv19.0.9\n\n9 November 2024\n\n\nchore: updates e42b61f\nRelease 19.0.9 fc998b4\n\nv19.0.8\n\n15 October 2024\n\n\nRelease 19.0.8 e4b565b\nfix: do webpack build again 10bf971\n\nv19.0.7\n\n15 October 2024\n\n\nRelease 19.0.7 308bd9f\nfix: use browser-esbuild executor fe4ebfa\n\nv19.0.6\n\n15 October 2024\n\n\nRelease 19.0.6 953bf76\nfix: use browser-esbuild executor a12f9c3\n\nv19.0.5\n\n15 October 2024\n\n\nfix(deps): update dependency tslib to v2.7.0 #450\nchore(deps): update dependency ubuntu to v24 #455\nchore(deps): update w9jds/firebase-action action to v13.22.0 #448\nRelease 19.0.5 592ac3b\n\nv19.0.4\n\n15 October 2024\n\n\nRelease 19.0.4 27acba5\nchore: eslint update (config todo) 97ccbb6\n\nv19.0.3\n\n15 October 2024\n\n\nchore: migrate to inject() 43a40a4\nfix: removed unused angular imports a0e7ce7\nRelease 19.0.3 972b1ee\n\nv19.0.2\n\n15 October 2024\n\n\nRelease 19.0.2 b8ad144\n\nv19.0.1\n\n15 October 2024\n\n\nRelease 19.0.1 7528cd4\n\nv19.0.0\n\n15 October 2024\n\n\nRelease 19.0.0 2bb5430\n\nv18.2.7\n\n15 October 2024\n\n\nchore(deps): updates ad57b9c\nRelease 18.2.7 8448134\nchange to application executor e2e1eb4\n\nv18.2.6\n\n26 August 2024\n\n\ndeps 0174ddf\nRelease 18.2.6 f0ae911\n\nv18.2.5\n\n15 August 2024\n\n\nsignals for coverdisplay, add item to playlist on by one d489b64\nRelease 18.2.5 4a66bde\n\nv18.2.4\n\n15 August 2024\n\n\nRelease 18.2.4 bbda480\nfix: big layout 8d61f2e\n\nv18.2.3\n\n15 August 2024\n\n\nchore: nx update ec1f94a\nRelease 18.2.3 72fa061\n\nv18.2.2\n\n15 August 2024\n\n\nanalyze and report esbuild bundles d597302\nRelease 18.2.2 681d4cd\nanalyze and report esbuild bundles 8626722\n\nv18.2.0\n\n15 August 2024\n\n\nfix test css class, select first in playlist after load when none selected 7a838a9\nRelease 18.2.0 38d27f1\n\nv18.1.1\n\n15 August 2024\n\n\nfeat: better axis handling for gamepad 4d47689\nmore signalös 019de24\nRelease 18.1.1 0f8e394\n\nv18.1.0\n\n15 August 2024\n\n\nRelease 18.1.0 ff778a5\nfeat: removed mobx, use signals for many things 5824006\n\nv18.0.1\n\n15 August 2024\n\n\nchore(deps): update, import types with import type e252172\nchore(deps): update e7aa58d\nRelease 18.0.1 7560dfa\n\nv18.0.0\n\n10 August 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.15.1 #438\nRelease 18.0.0 0858a77\nfix(eslint): older unused imports plugin cdb5380\n\nv17.0.18\n\n10 August 2024\n\n\nchore(deps): update 6878f22\nRelease 17.0.17 027ad79\nRelease 17.0.18 6756668\n\nv17.0.17\n\n10 August 2024\n\n\nUpdate w9jds/firebase-action action to v13.14.2 #431\nchore(deps): update 592cb7a\nRelease 17.0.17 2db5dc7\n\nv17.0.16\n\n29 July 2024\n\n\nmusic-metadata 10 7f90220\nRelease 17.0.16 80d5e14\nremoved webpack 908f395\n\nv17.0.15\n\n29 July 2024\n\n\ndeps ffe5da9\ndeps 469a890\nRelease 17.0.15 80553e8\n\nv17.0.14\n\n11 July 2024\n\n\ndeps 389407a\nRelease 17.0.14 30fec73\n\nv17.0.13\n\n7 July 2024\n\n\nUpdate dependency @typescript-eslint/utils to v8.0.0-alpha.40 #369\nUpdate w9jds/firebase-action action to v13.13.0 #423\ndeps 2389739\nRelease 17.0.13 4040b59\ndeps a0c15a4\n\nv17.0.12\n\n4 July 2024\n\n\ndeps 892689d\nRelease 17.0.12 af8a6b4\n\nv17.0.11\n\n23 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.4 #419\ndeps babdb9f\nRelease 17.0.11 5273759\n\nv17.0.10\n\n23 June 2024\n\n\ndeps 05a441e\nRelease 17.0.10 3e7b9a4\n\nv17.0.9\n\n12 June 2024\n\n\nRelease 17.0.9 a948ad5\ndeps, webstorage update 0e6195d\n\nv17.0.8\n\n12 June 2024\n\n\ndeps, webstorage update 1e660c9\nRelease 17.0.8 64a34dc\n\nv17.0.7\n\n9 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.2 #409\nUpdate dependency tslib to v2.6.3 #411\nRelease 17.0.7 2bb0e78\n\nv17.0.6\n\n9 June 2024\n\n\nnx + deps a1da736\nRelease 17.0.6 41e632f\n\nv17.0.5\n\n25 May 2024\n\n\nUpdate angularmaterial monorepo to v18 #402\nRelease 17.0.4 549bfa1\nRelease 17.0.5 ea932ef\n\nv17.0.4\n\n25 May 2024\n\n\nUpdate angular monorepo to v18 #401\nUpdate w9jds/firebase-action action to v13.10.1 #395\nRelease 17.0.4 f591692\nswitched to node 22 4f70846\n\nv17.0.3\n\n25 May 2024\n\n\nRelease 17.0.3 cb19d50\nenabled eventCoalescing e6fc6eb\n\nv17.0.2\n\n25 May 2024\n\n\nRelease 17.0.2 96bcdfc\nfixed theme 3ce805f\n\nv17.0.1\n\n25 May 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.5 #390\nng 18 7fcd244\nfixed eslint 2346f13\nnx update 4164d59\n\nv16.0.6\n\n28 April 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.2 #381\ndeps 308b3e5\nRelease 16.0.6 3233ed1\naudit fix 2f67e34\n\nv16.0.5\n\n14 April 2024\n\n\ndeps 84ac04c\nRelease 16.0.5 1a30a33\n\nv16.0.4\n\n7 April 2024\n\n\nRelease 16.0.4 5bab2a7\n\nv16.0.3\n\n16 March 2024\n\n\nRelease 16.0.3 0338bd7\nnew browserlist 013e987\nonly include Buffer in Node Polfills d7b3ea2\n\nv16.0.2\n\n16 March 2024\n\n\nRelease 16.0.2 0629b20\nfixed nx cloud token 870e50b\n\nv16.0.1\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.5.1 #372\nRelease 16.0.1 fe15d24\nfixed nx cloud token 6d2a8fe\n\nv16.0.0\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.3.1 #368\ndeps updated 11ae344\nnx update 0b2a071\nangular update c35bc38\n\nv15.1.17\n\n24 February 2024\n\n\nRelease 15.1.17 f18fa1f\n\nv15.1.16\n\n24 February 2024\n\n\nRelease 15.1.16 d2e1df8\n\nv15.1.14\n\n10 February 2024\n\n\nUpdate nrwl/nx-set-shas action to v4 #362\nUpdate w9jds/firebase-action action to v13.2.1 #358\nRelease 15.1.14 09eba6b\nRevert \"try nx agents\" 90e9f96\ntry nx agents 7362da7\n\nv15.1.13\n\n10 February 2024\n\n\ndeps cace929\nRelease 15.1.13 04dca08\nremoved last modules 0486e25\n\nv15.1.12\n\n4 February 2024\n\n\nnx update ccbf388\nRelease 15.1.12 7a8645a\n\nv15.1.11\n\n28 January 2024\n\n\nUpdate w9jds/firebase-action action to v13.1.0 #338\nUpdate actions/cache action to v4 #343\nRelease 15.1.11 1e340e1\n\nv15.1.10\n\n28 January 2024\n\n\ndeps 64d30e1\nRelease 15.1.10 a9a8e68\n\nv15.1.9\n\n20 January 2024\n\n\nRelease 15.1.9 8596088\n\nv15.1.8\n\n10 January 2024\n\n\nstylelint fixes ac02523\nRelease 15.1.8 4c8c0ad\nlint fixes 764711a\n\nv15.1.7\n\n9 January 2024\n\n\ndeps 362d9db\nRelease 15.1.7 92d89c3\n\nv15.1.6\n\n28 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #312\nRelease 15.1.6 339bd87\n\nv15.1.5\n\n28 December 2023\n\n\ndeps 4ef0700\nRelease 15.1.5 8ee0628\n\nv15.1.4\n\n15 December 2023\n\n\ndeps 998ad7c\nRelease 15.1.4 5c1346d\n\nv15.1.3\n\n10 December 2023\n\n\nRelease 15.1.3 d0b8d34\ndeps 6966d17\nnx update 678aef6\n\nv15.1.2\n\n8 December 2023\n\n\nfix seeking with slider, @switch statt @if 9934470\nRelease 15.1.2 1ebb626\n\nv15.1.1\n\n8 December 2023\n\n\nRelease 15.1.1 586ef29\nfix deploy f36895a\n\nv15.1.0\n\n8 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #310\noptimizations and typing f5c6154\noptimizations 05ddceb\noptimized icon set converter 6bd60c5\n\nv15.0.9\n\n8 December 2023\n\n\ndeps 02d4bfb\ntsconfig refactoring 7445539\nRelease 15.0.9 58fb13b\n\nv15.0.8\n\n30 November 2023\n\n\ntsconfig refactoring 275e54d\nRelease 15.0.8 f3351c2\n\nv15.0.7\n\n30 November 2023\n\n\nUpdate w9jds/firebase-action action to v12.9.0 #301\nRelease 15.0.7 7e45969\n\nv15.0.6\n\n30 November 2023\n\n\nRelease 15.0.6 063950a\ndeps 7522583\n\nv15.0.5\n\n13 November 2023\n\n\ndeps, prettier cbc6e41\nRelease 15.0.5 3bccffb\n\nv15.0.4\n\n10 November 2023\n\n\nRelease 15.0.4 1c4c67e\n\nv15.0.3\n\n10 November 2023\n\n\nRelease 15.0.3 90df676\n\nv15.0.2\n\n10 November 2023\n\n\nRelease 15.0.2 29878bc\neslint flat config 8c297a1\n\nv15.0.1\n\n10 November 2023\n\n\nNEW control flow syntax 84e91e3\nRelease 15.0.1 9dfd762\nstyleUrl instead of urls aefd739\n\nv15.0.0\n\n9 November 2023\n\n\nUpdate angular monorepo to v17 (major) #288\nUpdate angularmaterial monorepo to v17 (major) #289\nUpdate w9jds/firebase-action action to v12.8.0 #286\nUpdate actions/setup-node action to v4 #287\nRelease 15.0.0 7f1e3c1\nUpdate angular monorepo to v17 43d9b1f\nnodejs 20 builds 6f6ac17\n\nv14.1.23\n\n9 November 2023\n\n\nnx update a358906\nRelease 14.1.23 55f3319\nnx update dbc354f\n\nv14.1.20\n\n14 October 2023\n\n\nRelease 14.1.20 8d072f1\n\nv14.1.19\n\n14 October 2023\n\n\nUpdate dependency @types/node to v20.8.6 #242\nUpdate w9jds/firebase-action action to v12.6.2 #272\nRelease 14.1.19 314f02a\nRelease 14.1.18 7cf10f9\n\nv14.1.18\n\n14 October 2023\n\n\nRelease 14.1.18 a8bb04b\n\nv14.1.17\n\n14 October 2023\n\n\nRelease 14.1.17 7a66d5a\n\nv14.1.16\n\n14 October 2023\n\n\nRelease 14.1.16 4ec2e90\n\nv14.1.15\n\n7 October 2023\n\n\nRelease 14.1.15 3f73f6e\n\nv14.1.14\n\n7 October 2023\n\n\nRelease 14.1.14 db2122c\n\nv14.1.13\n\n7 October 2023\n\n\nRelease 14.1.13 a3ae7df\n\nv14.1.12\n\n7 October 2023\n\n\nRelease 14.1.12 0d0dfcb\n\nv14.1.11\n\n7 October 2023\n\n\nRelease 14.1.11 5aecee8\n\nv14.1.10\n\n7 October 2023\n\n\nRelease 14.1.10 d200e57\n\nv14.1.9\n\n23 September 2023\n\n\nRelease 14.1.9 29f1cbe\nupdated from deprecated SwUpdate props bef3e3e\n\nv14.1.8\n\n23 September 2023\n\n\nupdated from deprecated SwUpdate props 2f592f3\nRelease 14.1.8 07d6959\n\nv14.1.7\n\n23 September 2023\n\n\ndeps 1ffd91e\nRelease 14.1.7 6fc1434\n\nv14.1.6\n\n23 September 2023\n\n\nRelease 14.1.6 8b184a4\n\nv14.1.5\n\n21 September 2023\n\n\nRelease 14.1.5 4695772\nfix build fc633d2\n\nv14.1.4\n\n7 September 2023\n\n\nBump protobufjs and google-gax #261\nUpdate dependency tslib to v2.6.2 #262\nUpdate actions/checkout action to v4 #264\nRelease 14.1.4 a6386d2\nfix build b7303ed\n\nv14.1.3\n\n7 September 2023\n\n\nBump word-wrap from 1.2.3 to 1.2.4 #250\nUpdate dependency tslib to v2.6.1 #251\nRelease 14.1.3 9ce5e31\n\nv14.1.2\n\n3 August 2023\n\n\nRelease 14.1.2 8f60273\n\nv14.1.1\n\n7 July 2023\n\n\nUpdate dependency tslib to v2.6.0 #241\nBump @grpc/grpc-js and google-gax #240\nUpdate w9jds/firebase-action action to v12 #235\nRelease 14.1.1 f78467f\nprettier 3ff6d19\n\nv14.1.0\n\n7 July 2023\n\n\nprettier 3 + precommit hooks cd5831f\nRelease 14.1.0 d612735\nprettier 08b1238\n\nv14.0.13\n\n17 June 2023\n\n\nRelease 14.0.13 a10893b\nremoved unused type polyfills af2926f\n\nv14.0.12\n\n17 June 2023\n\n\nRelease 14.0.12 ea688e0\n\nv14.0.11\n\n17 June 2023\n\n\nRelease 14.0.11 32c3f4d\n\nv14.0.10\n\n17 June 2023\n\n\ndeps 8c90a58\nRelease 14.0.10 1d0b823\n\nv14.0.9\n\n8 June 2023\n\n\ndeps fdad632\nRelease 14.0.9 331bb8f\n\nv14.0.8\n\n3 June 2023\n\n\nBump vm2 from 3.9.17 to 3.9.19 #220\nUpdate dependency tslib to v2.5.3 #223\nRelease 14.0.8 8b9fdf5\n\nv14.0.7\n\n3 June 2023\n\n\nuse run-many for tests 97d68d0\nRelease 14.0.7 c82e02b\n\nv14.0.6\n\n3 June 2023\n\n\ndeps 752aa76\nRelease 14.0.6 f038069\n\nv14.0.5\n\n13 May 2023\n\n\ndeps 28cff25\nRelease 14.0.5 20cf16a\n\nv14.0.4\n\n6 May 2023\n\n\nremoved unused js file 5ffbd62\nRelease 14.0.4 7fb56e0\n\nv14.0.3\n\n6 May 2023\n\n\nUpdate dependency jest-preset-angular to v13.1.0 #208\nUpdate dependency @types/node to v18.16.5 #206\nRelease 14.0.3 cdf04e9\ne2e fixed 2708806\n\nv14.0.2\n\n6 May 2023\n\n\nUpdate w9jds/firebase-action action to v11.30.1 #207\ne2e fixed and removed separate project 74e7c83\nRelease 14.0.1 f386a36\nRelease 14.0.2 1081f8e\n\nv14.0.1\n\n6 May 2023\n\n\ne2e fixed and removed separate project d0cd94f\nRelease 14.0.1 bb4e0ce\n\nv14.0.0\n\n6 May 2023\n\n\nnx 16, angular 16, deps 826cbe5\nRelease 14.0.0 ec067ee\nmusic metadata removed 2eb6cae\n\nv13.3.5\n\n13 April 2023\n\n\nBump vm2 #200\nUpdate dependency music-metadata to v7.13.4 #195\nRelease 13.3.5 845189d\n\nv13.3.4\n\n13 April 2023\n\n\nRelease 13.3.4 eab1d35\n\nv13.3.3\n\n10 April 2023\n\n\nRelease 13.3.3 0129566\n\nv13.3.2\n\n25 March 2023\n\n\nRelease 13.3.2 5a92c07\n\nv13.3.1\n\n25 March 2023\n\n\nRelease 13.3.1 42a58d9\n\nv13.3.0\n\n18 March 2023\n\n\nUpdate w9jds/firebase-action action to v11.24.1 #181\ndeps + sidenav fixes e11e3bd\nRelease 13.3.0 3acc7bf\n\nv13.2.6\n\n15 March 2023\n\n\ndeps 0dc096d\nRelease 13.2.6 6d67484\n\nv13.2.5\n\n5 March 2023\n\n\nstandalone bootstrap 6aed158\nRelease 13.2.5 4c272db\n\nv13.2.4\n\n5 March 2023\n\n\nBump http-cache-semantics from 4.1.0 to 4.1.1 #170\nBump cacheable-request from 10.2.5 to 10.2.7 #171\nUpdate dependency tslib to v2.5.0 #164\nRelease 13.2.4 392b41d\ndeps a4b6dab\n\nv13.2.3\n\n5 March 2023\n\n\nRelease 13.2.3 f54702d\n\nv13.2.2\n\n5 March 2023\n\n\nRelease 13.2.2 d9677d0\n\nv13.2.1\n\n22 February 2023\n\n\ndeps 1730f16\nRelease 13.2.1 ba634aa\nuse nx for all 51a51dd\n\nv13.2.0\n\n22 February 2023\n\n\nUpdate w9jds/firebase-action action to v11.22.0 #172\nRelease 13.2.0 4035819\nstandalone migration steps 1 and 2 32e3ad6\nstandalone migration steps 1 and 2 a40c9e8\n\nv13.1.12\n\n22 February 2023\n\n\nRelease 13.1.12 53818e8\n\nv13.1.11\n\n28 January 2023\n\n\ndeps b4d909a\nRelease 13.1.11 d8bf0e7\n\nv13.1.10\n\n22 January 2023\n\n\nRelease 13.1.10 1c7fa4e\n\nv13.1.9\n\n20 January 2023\n\n\ndeps 4781958\nRelease 13.1.9 505e77f\n\nv13.1.8\n\n15 January 2023\n\n\nRelease 13.1.8 580c58d\n\nv13.1.7\n\n15 January 2023\n\n\nUpdate dependency music-metadata to v7.13.3 #150\ndeps 8b6bfeb\nRelease 13.1.7 d516e97\n\nv13.1.6\n\n13 January 2023\n\n\nRelease 13.1.6 166c79d\ndeps 8ec046f\n\nv13.1.5\n\n7 January 2023\n\n\nlayout fixes f3f4ae7\nRelease 13.1.5 eaa27a6\n\nv13.1.4\n\n7 January 2023\n\n\nRelease 13.1.4 49d8293\nfixed e2e 33d73d9\n\nv13.1.3\n\n7 January 2023\n\n\nUpdate dependency firebase-tools to v11.20.0 #147\nUpdate dependency postcss to v8.4.21 #146\nUpdate dependency eslint-config-prettier to v8.6.0 #139\nUpdate angularmaterial monorepo to v15.0.4 #144\nUpdate dependency husky to v8.0.3 #140\nUpdate w9jds/firebase-action action to v11.18.0 #131\nUpdate dependency cypress to v12.3.0 #141\nUpdate nrwl monorepo to v15.4.4 #135\nUpdate dependency eslint to v8.31.0 #138\nUpdate typescript-eslint monorepo to v5.48.0 #58\nUpdate dependency music-metadata to v7.13.1 #142\nRelease 13.1.3 5302fb4\ndeps 801cd46\nmdc migration, vertical sliders, icons size directive removed ffa9bb5\n\nv13.1.2\n\n30 December 2022\n\n\nRelease 13.1.2 c339811\n\nv13.1.1\n\n23 December 2022\n\n\nvisualizers plug their own analyser cea2824\nunsubscribe and disconnect analysers 6a8d3be\nRelease 13.1.1 72575f6\n\nv13.1.0\n\n23 December 2022\n\n\nRelease 13.1.0 1989419\nrenamed song to track, us playState obeservable for better input and CD handling 47b6776\n\nv13.0.20\n\n23 December 2022\n\n\ntransparency control for visuals 7445cc4\nRelease 13.0.20 62cfee7\n\nv13.0.19\n\n23 December 2022\n\n\nstandalone components 620afb8\nno max db slider, mindb range changed, better default f7913c1\nRelease 13.0.19 9280e3a\n\nv13.0.18\n\n22 December 2022\n\n\nRelease 13.0.18 4c16c1e\n\nv13.0.16\n\n22 December 2022\n\n\nRelease 13.0.16 77707fb\n\nv13.0.13\n\n22 December 2022\n\n\nRelease 13.0.13 6f12a37\n\nv13.0.12\n\n19 December 2022\n\n\nremoved d3, use bark scale for bar spectrogram 2bcfefb\nRelease 13.0.12 e336db1\n\nv13.0.11\n\n18 December 2022\n\n\nmerged readme 3f449ec\nRelease 13.0.11 47e3527\nbadges 5f1d097\n\nv13.0.10\n\n17 December 2022\n\n\nRelease 13.0.10 62c64c5\nmoved style to component 006b52c\ntodo 28548eb\n\nv13.0.9\n\n17 December 2022\n\n\nfixed audioContext resume, added gain to eq cb797bc\nRelease 13.0.9 8c56320\n\nv13.0.8\n\n17 December 2022\n\n\nRelease 13.0.8 6f1cdb4\n\nv13.0.7\n\n17 December 2022\n\n\nRelease 13.0.7 d895f0f\n\nv13.0.6\n\n17 December 2022\n\n\nRelease 13.0.6 17266a3\n\nv13.0.5\n\n17 December 2022\n\n\nUpdate angularmaterial monorepo to v15 (major) #108\nRelease 13.0.5 ddab2f3\nremoved uneeded ts-ignores a1a074f\nUpdate angularmaterial monorepo to v15 a4de6d4\n\nv13.0.3\n\n17 December 2022\n\n\nRelease 13.0.3 7f8ad27\nuse config file without .json endings bfd4685\n\nv13.0.2\n\n17 December 2022\n\n\nrefactored type imports and fixed offscreencanvas types 067bbea\nRelease 13.0.2 292ed5a\ncustom typings moved to folders c3208e7\n\nv13.0.1\n\n17 December 2022\n\n\nRelease 13.0.1 667c54e\nfixed debug version bf7b3a9\nfixed debug version 6cee32d\n\nv13.0.0\n\n16 December 2022\n\n\nRelease 13.0.0 b3905a0\nfixed playlist bulk loading 834f706\n\nv12.0.16\n\n16 December 2022\n\n\nRelease 12.0.16 1de2a3c\nfixed playlist bulk loading 8e7ecec\n\nv12.0.15\n\n16 December 2022\n\n\nRelease 12.0.15 5a7054c\nfixed test 9eb089c\n\nv12.0.14\n\n16 December 2022\n\n\nabstacted all audio stuff in audio service 403737f\neq auf mobile funkt auf mobile, flex layout refactoring eccaa4a\nreplaced angular-flex-layout with css 03a0491\n\nv12.0.13\n\n15 December 2022\n\n\nmaterial 15 migration dc55360\nRelease 12.0.13 37f76dc\nsimpler lib 86be7eb\n\nv12.0.12\n\n15 December 2022\n\n\nlibrary ohne filter 8dfc611\nRelease 12.0.12 6d26668\n\nv12.0.11\n\n14 December 2022\n\n\nRelease 12.0.11 635e855\ndeps, eslintrc, vibrant-wasm entfernt 431a9ad\n\nv12.0.10\n\n12 December 2022\n\n\nRelease 12.0.10 f954f07\nappend audioElement to document ce588f9\n\nv12.0.9\n\n12 December 2022\n\n\nseperated audio part into AudioService 0f8326e\nsimplified init of audio 869dddb\nRelease 12.0.9 17a1677\n\nv12.0.8\n\n11 December 2022\n\n\nfixed smaller things, no prdefinded samplerate 986dd30\nRelease 12.0.8 6b9ff38\ntodo 2bdc500\n\nv12.0.7\n\n11 December 2022\n\n\nRelease 12.0.7 a0aa269\nmoved init of seekto handler to constructor 2434ec6\n\nv12.0.6\n\n11 December 2022\n\n\nRelease 12.0.6 14768e6\n\nv12.0.5\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 8738efc\nRelease 12.0.4 fee5161\nRelease 12.0.5 23061dd\n\nv12.0.4\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 81bb449\nRelease 12.0.4 025a430\nUpdate TODO.md 009b48d\n\nv12.0.3\n\n11 December 2022\n\n\nRelease 12.0.3 c398655\n\nv12.0.2\n\n11 December 2022\n\n\nRelease 12.0.2 2bfabd0\n\nv12.0.1\n\n11 December 2022\n\n\nmoved id3tags extraction to worker 9b11a20\nRelease 12.0.1 6c27523\nUpdate devcontainer.json b286be9\n\nv12.0.0\n\n10 December 2022\n\n\nRelease 12.0.0 6ee2324\nadded deps vibrant-wasm and custom webpack config to ttry threads.js 8337321\ncustom webpack config for threads.js workers (still not working, disabled) 55e56b8\n\nv11.5.14\n\n7 December 2022\n\n\nstylelint fixes and config 52d642b\nRelease 11.5.14 b5dfb18\n\nv11.5.13\n\n7 December 2022\n\n\nRelease 11.5.13 a867afe\nstylelint fixes and config 122856c\n\nv11.5.12\n\n7 December 2022\n\n\nRelease 11.5.12 c4668f1\nmusic meatadata, file-drop-overlay as standalone component 2e5b003\nprovide all services in root ca80a43\n\nv11.5.11\n\n7 December 2022\n\n\nRelease 11.5.11 930dc28\n\nv11.5.10\n\n7 December 2022\n\n\ndeps a552ea9\nRelease 11.5.10 d29b113\n\nv11.5.9\n\n6 December 2022\n\n\nRelease 11.5.9 18a45bd\ntags + eslint rule 864d7e1\n\nv11.5.8\n\n6 December 2022\n\n\ndep graph in gh pages, release-it config erweitert um neu generierte dateien mit zu committen 73bd100\nlibs cleanup 59f4ac4\nRelease 11.5.8 24e4c9a\n\nv11.5.7\n\n6 December 2022\n\n\nlibs cleanup 60dbedc\nRelease 11.5.7 2d68f3b\n\nv11.5.6\n\n6 December 2022\n\n\nremoved all dummy tests 7defe9b\nRelease 11.5.6 d1b4f51\nrun tests in github actions 14148e0\n\nv11.5.5\n\n6 December 2022\n\n\nRelease 11.5.5 73b9b59\n\nv11.5.4\n\n6 December 2022\n\n\ncompodoc reenabled 7c00473\nsvgo updated 19bf065\nRelease 11.5.4 8df3910\n\nv11.5.3\n\n6 December 2022\n\n\ncompodoc reenabled 540fdd8\nRelease 11.5.3 7c5bbe5\n\nv11.5.2\n\n5 December 2022\n\n\ncompodoc reenabled 2ce3664\ncompodoc reenabled b7be438\ncompodoc reenabled 29f2b37\n\nv11.5.1\n\n5 December 2022\n\n\nautofix unused imports, removed tslint 71bd586\nautofix unused imports 6d6f310\nRelease 11.5.1 77091b9\n\nv11.5.0\n\n5 December 2022\n\n\nbetter thum quality, bigger coverart in playlist, tooltips, better button color handling bffc736\nRelease 11.5.0 670b3af\n\nv11.4.11\n\n5 December 2022\n\n\nRelease 11.4.11 e615145\n\nv11.4.10\n\n5 December 2022\n\n\nreinstall 418b524\nRelease 11.4.10 eaf46cf\n\nv11.4.9\n\n5 December 2022\n\n\nRelease 11.4.9 3e58c71\n\nv11.4.8\n\n5 December 2022\n\n\nRelease 11.4.8 a409033\nservices in app integriert 1857720\n\nv11.4.7\n\n5 December 2022\n\n\nremoved storybook 9d81efd\nservices in app integriert ce621ee\nmoved visuals lib to app e992cb4\n\nv11.4.6\n\n5 December 2022\n\n\nRelease 11.4.6 f9c93ce\n\nv11.4.5\n\n5 December 2022\n\n\nRelease 11.4.5 839a546\n\nv11.4.3\n\n5 December 2022\n\n\nRelease 11.4.3 50b7005\n\nv11.4.2\n\n5 December 2022\n\n\nRelease 11.4.2 0674adf\n\nv11.4.1\n\n5 December 2022\n\n\nRelease 11.4.1 7ccbc95\n\nv11.4.0\n\n5 December 2022\n\n\nrefactored libs to app, fixed time slider 133059f\nRelease 11.4.0 68d9939\n\nv11.3.1\n\n4 December 2022\n\n\nRelease 11.3.1 7493e98\nprevent lib crossing 3fbfb97\n\nv11.3.0\n\n4 December 2022\n\n\nRelease 11.3.0 ecf45e6\nbetter color usage 965f5d8\nbetter color usage f209ddb\n\nv11.2.0\n\n4 December 2022\n\n\ndeps, better default colors 569161e\nRelease 11.2.0 efc9aad\n\nv11.1.2\n\n4 December 2022\n\n\nRelease 11.1.2 8d47dd4\nfixed visualizer color updating too late e99d4f2\n\nv11.1.1\n\n4 December 2022\n\n\nRelease 11.1.1 287138c\n\nv11.1.0\n\n4 December 2022\n\n\noptimized musicbrainz requests, fixed embedded cover handling 7bebf2d\nRelease 11.1.0 707a0cb\n\nv11.0.0\n\n4 December 2022\n\n\nfixed several metadata related problems, setting for use of embedded tag covers 1745489\nRelease 11.0.0 6c219df\ntodo chromaprint-wasm 2c0f612\n\nv10.3.2\n\n1 December 2022\n\n\nRelease 10.3.2 6fdfa5a\n\nv10.3.1\n\n1 December 2022\n\n\nRelease 10.3.1 05b4ddd\nupdated firebase hosting config and actions for deployment f201082\nupdated firebase hosting config and actions for deployment 0c91659\n\nv10.3.0\n\n1 December 2022\n\n\nRelease 10.3.0 50dbff9\nupdated firebase hosting config and actions for deployment 1455d32\n\nv10.2.0\n\n30 November 2022\n\n\nRelease 10.2.0 7593825\nupdated firebase hosting config and actions for deployment b80e2ea\n\nv10.1.0\n\n30 November 2022\n\n\nupdated firebase hosting config and actions for deployment 02bde5d\nRelease 10.1.0 ffc8723\nupdated github actions 86bda79\n\nv10.0.4\n\n30 November 2022\n\n\ncypress migration to 11 16d8b1b\nRelease 10.0.4 6bf609d\nupdate nodejs to 18 for github actions 16925cf\n\nv10.0.3\n\n30 November 2022\n\n\ngot rid of variables.scss ad7e0f1\nRelease 10.0.3 63f69d0\n\nv10.0.2\n\n30 November 2022\n\n\nRelease 10.0.2 2a99961\n\nv10.0.1\n\n30 November 2022\n\n\nRelease 10.0.1 a9a9c0b\n\nv10.0.0\n\n30 November 2022\n\n\nng15 521e049\nng 15 cleanup, mobx update 0f6c72b\nmaterial 14 1e96bc3\n\nv9.2.4\n\n19 March 2022\n\n\nupdated deps eaeb47a\nRelease 9.2.4 61721ca\njb env 4bdbceb\n\nv9.2.3\n\n19 December 2021\n\n\nupdates 5061051\nRelease 9.2.3 a7f82ab\n\nv9.2.2\n\n9 December 2021\n\n\nupdates 2427749\nRelease 9.2.2 934d323\n\nv9.2.1\n\n20 November 2021\n\n\nRelease 9.2.1 60d5b05\n\nv9.2.0\n\n20 November 2021\n\n\nUpdate dependency @angular/cdk to v12.2.13 #21\nPin dependencies #20\nUpdate dependency ng-packagr to v12.2.5 #17\nUpdate dependency @angular/material to v12.2.13 #15\nUpdate angular monorepo to v12.2.13 #13\nConfigure Renovate #11\nnx 13.2 02e548c\nRelease 9.2.0 22ec300\nmain branch 63600c3\n\nv9.1.3\n\n16 November 2021\n\n\nnx update, nx-stylelint, nx-compodoc f06b116\nRelease 9.1.3 de5bda9\n\nv9.1.2\n\n20 October 2021\n\n\nupdates 8268a8b\nRelease 9.1.2 ab89f63\ntodos e486f52\n\nv9.1.1\n\n4 October 2021\n\n\nprevent duplicates in playlist, drag handle on avatar b6729e6\nRelease 9.1.1 eff95d0\n\nv9.1.0\n\n4 October 2021\n\n\nfile handling api with origin trial d3bca3a\nRelease 9.1.0 6cab435\n\nv9.0.11\n\n2 October 2021\n\n\nupdates 397399b\nRelease 9.0.11 96dbdf6\n\nv9.0.10\n\n5 September 2021\n\n\nRelease 9.0.10 112db1a\n\nv9.0.9\n\n5 September 2021\n\n\nRelease 9.0.9 9458a12\n\nv9.0.8\n\n19 August 2021\n\n\nRelease 9.0.8 cd620b6\n\nv9.0.7\n\n19 August 2021\n\n\nRelease 9.0.7 600f7e6\n\nv9.0.6\n\n19 August 2021\n\n\nRelease 9.0.6 c08196a\ndeps 6b5e613\n\nv9.0.5\n\n19 August 2021\n\n\nRelease 9.0.5 c51af5f\n\nv9.0.4\n\n19 August 2021\n\n\ndeps 43463ab\nRelease 9.0.4 cf00688\n\nv9.0.3\n\n24 July 2021\n\n\ndeps, nx-cloud ada5e83\nRelease 9.0.3 bb4a1a8\n\nv9.0.2\n\n24 July 2021\n\n\ndeps, nx-cloud 5cbeb5b\nRelease 9.0.2 49a76e8\n\nv9.0.1\n\n24 July 2021\n\n\ndeps b99bf0c\nRelease 9.0.1 cbab637\n\nv9.0.0\n\n9 July 2021\n\n\nfixed release-it 8d3ed72\nRelease 9.0.0 5467c6f\n\nv8.1.10\n\n9 July 2021\n\n\nRelease 8.1.10 be90110\n\nv8.1.9\n\n9 July 2021\n\n\nfixed release-it a90639a\nRelease 8.1.9 6d52ad4\n\nv8.1.8\n\n9 July 2021\n\n\nts 4.4, media session types intergrated in ts, deps fd45c70\nRelease 8.1.8 ff7cdad\n\nv8.1.7\n\n8 July 2021\n\n\nRelease 8.1.7 0bde446\n\nv8.1.6\n\n8 July 2021\n\n\ndeps 128a3c3\nRelease 8.1.6 d64a3c3\n\nv8.1.5\n\n2 July 2021\n\n\nRelease 8.1.5 ef22e4a\nlayout fixed dbb788d\n\nv8.1.4\n\n2 July 2021\n\n\nrefactored scss to @use, fixed build 6b0ec83\nRelease 8.1.4 ebab8da\n\nv8.1.3\n\n2 July 2021\n\n\nRelease 8.1.3 0843a41\n\nv8.1.2\n\n2 July 2021\n\n\nfixed types 07de52a\nRelease 8.1.2 00b47ed\n\nv8.1.1\n\n2 July 2021\n\n\nmigrated to eslint and per project config 4feefcd\nRelease 8.1.1 7762874\n\nv8.1.0\n\n26 June 2021\n\n\nupdates e2a0794\nRelease 8.1.0 86a18bb\n\nv8.0.1\n\n26 May 2021\n\n\nRelease 8.0.1 52bf10d\n\nv8.0.0\n\n26 May 2021\n\n\nRelease 7.1.1 c78b2bf\nRelease 8.0.0 2f0d555\n\nv7.2.0\n\n26 May 2021\n\n\nRelease 7.2.0 73ed2ca\nupdates 774ffed\n\nv7.1.1\n\n26 May 2021\n\n\nupdates 2a427ed\nRelease 7.1.1 b73ce66\n\nv7.1.0\n\n9 May 2021\n\n\n30fps visualizer, sortable playlist cd2a934\nRelease 7.1.0 8377116\n\nv7.0.6\n\n9 May 2021\n\n\nRelease 7.0.6 84a2466\nbitrate rounding cbef1c8\n\nv7.0.5\n\n9 May 2021\n\n\nRelease 7.0.5 9c56a21\n\nv7.0.4\n\n9 May 2021\n\n\nbetter title display 51154fe\nRelease 7.0.4 72dafd7\n\nv7.0.3\n\n9 May 2021\n\n\ndeps e36192c\nRelease 7.0.3 7553170\ntodos 51e219a\n\nv7.0.2\n\n9 May 2021\n\n\nfixed navigation 9767ad0\nRelease 7.0.2 59f1df2\n\nv7.0.1\n\n9 May 2021\n\n\nmetadata settings and ui cleanup 3797092\nRelease 6.7.3 6841a21\nRelease 7.0.0 0d76c85\n\nv7.0.0\n\n9 May 2021\n\n\nmetadata settings and ui cleanup b2b5088\nRelease 7.0.0 8c47814\n\nv6.7.4\n\n7 May 2021\n\n\nRelease 6.7.4 2ab7cc1\ncypress studio activated 4eac2a7\ncypress studio activated 6bc0773\n\nv6.7.3\n\n7 May 2021\n\n\nRelease 6.7.3 6841a21\nignore iml e5de213\n\nv6.7.2\n\n5 May 2021\n\n\ngithub actions with node_modules cache 4f91524\nRelease 6.7.2 07ec810\n\nv6.7.1\n\n5 May 2021\n\n\ncypress updated and window.showOpenFilePicker overwritten 32570e0\nRelease 6.7.1 fd18536\n\nv6.7.0\n\n4 May 2021\n\n\ndev deps dc41223\nRelease 6.7.0 f34b7cf\n\nv6.6.7\n\n25 April 2021\n\n\nfixed cypress tests and mobx 00399df\nRelease 6.6.7 bd0ddc3\n\nv6.6.6\n\n25 April 2021\n\n\nRelease 6.6.6 d690072\n\nv6.6.5\n\n25 April 2021\n\n\nRelease 6.6.5 ea63800\n\nv6.6.4\n\n25 April 2021\n\n\ndeps and husky updated 120476b\nRelease 6.6.4 20110c3\n\nv6.6.3\n\n20 April 2021\n\n\nRelease 6.6.3 ee83304\nreadme badges 09ae300\n\nv6.6.2\n\n15 April 2021\n\n\nRelease 6.6.2 e933c61\n\nv6.6.1\n\n15 April 2021\n\n\nRelease 6.6.1 221781e\n\nv6.6.0\n\n14 April 2021\n\n\nRelease 6.6.0 d254989\n\nv6.5.9\n\n11 March 2021\n\n\ndependencies 2119d47\nRelease 6.5.9 c64cd79\n\nv6.5.8\n\n4 March 2021\n\n\nRelease 6.5.8 f401a49\n\nv6.5.7\n\n4 March 2021\n\n\nRelease 6.5.7 49b1735\n\nv6.5.6\n\n4 February 2021\n\n\nRelease 6.5.6 045b043\n\nv6.5.5\n\n1 February 2021\n\n\nRelease 6.5.5 f4324a4\n\nv6.5.4\n\n29 January 2021\n\n\nfixed test 0038838\nRelease 6.5.4 8c75c5f\n\nv6.5.3\n\n28 January 2021\n\n\nRelease 6.5.3 13bf8e2\n\nv6.5.2\n\n21 January 2021\n\n\nRelease 6.5.2 1c876b6\nfixed build d2f46f8\n\nv6.5.1\n\n21 January 2021\n\n\nupdates 120f02a\nRelease 6.5.1 46c60ce\n\nv6.5.0\n\n14 January 2021\n\n\nRelease 6.5.0 e4ec6c1\n\nv6.4.1\n\n14 January 2021\n\n\nchangelog d629a20\nRelease 6.4.1 3d1f63c\n\nv6.4.0\n\n14 January 2021\n\n\nremoved token 51304c2\nRelease 6.4.0 756dc90\n\nv6.3.1\n\n14 January 2021\n\n\nRelease 6.3.1 e727ac0\n\nv6.3.0\n\n14 January 2021\n\n\nrelease-it 5321e86\nRelease 6.3.0 db48fe2\n\nv6.2.6\n\n14 January 2021\n\n\nrelease v6.2.6 ae202ad\n\nv6.2.5\n\n14 January 2021\n\n\nrelease v6.2.5 c20efb2\n\nv6.2.4\n\n14 January 2021\n\n\nci cd 8da74bb\nrelease v6.2.4 f12cad8\n\nv6.2.3\n\n12 January 2021\n\n\nrelease v6.2.3 78fcf7a\n\nv6.2.2\n\n20 December 2020\n\n\nnrwl 11 b2ed530\nrelease v6.2.2 73050ff\n\nv6.2.1\n\n15 December 2020\n\n\nnrwl 11 f1f709b\nrelease v6.2.1 5101ea6\nnrwl 11 8a371a0\n\nv6.2.0\n\n12 December 2020\n\n\nrelease v6.2.0 ef650c5\n\nv6.1.1\n\n8 December 2020\n\n\nrelease v6.1.1 e6660e2\n\nv6.1.0\n\n3 December 2020\n\n\nrelease v6.1.0 f8b7451\n\nv6.0.1\n\n21 November 2020\n\n\nrelease v6.0.1 c0d5ae4\n\nv6.0.0\n\n21 November 2020\n\n\nng11 0960760\nprettier ab98677\nrelease v6.0.0 79d861d\n\nv5.2.12\n\n28 October 2020\n\n\nrelease v5.2.12 40cc765\n\nv5.2.11\n\n28 October 2020\n\n\nrelease v5.2.11 c0c9413\n\nv5.2.10\n\n28 October 2020\n\n\nrelease v5.2.10 f4928f5\n\nv5.2.9\n\n28 October 2020\n\n\nrelease v5.2.9 04b4812\n\nv5.2.8\n\n28 October 2020\n\n\nrelease v5.2.8 4c8f851\n\nv5.2.7\n\n28 October 2020\n\n\nrelease v5.2.7 b65204b\n\nv5.2.6\n\n28 October 2020\n\n\nrelease v5.2.6 f24dcc7\n\nv5.2.5\n\n28 October 2020\n\n\nrelease v5.2.5 6c6f88c\nprettier b20fd36\n\nv5.2.4\n\n28 October 2020\n\n\nMediaSession service 5742e12\nrelease v5.2.4 5059439\n\nv5.2.3\n\n27 October 2020\n\n\nrelease v5.2.3 d4abfdc\n\nv5.2.2\n\n27 October 2020\n\n\nrelease v5.2.2 478c88a\n\nv5.2.1\n\n26 October 2020\n\n\nrelease v5.2.1 e218808\n\nv5.2.0\n\n23 October 2020\n\n\nrelease v5.2.0 62f7474\nreload button be57fa9\n\nv5.1.0\n\n23 October 2020\n\n\nsimplified dir handle save, fixed test f278040\nrelease v5.1.0 9767a1a\n\nv5.0.0\n\n23 October 2020\n\n\nsave latest directory handle to indexeddb 597ee4f\nrelease v5.0.0 5a61397\n\nv4.7.0\n\n23 October 2020\n\n\nrelease v4.7.0 c86decf\n\nv4.6.0\n\n23 October 2020\n\n\ntypes added for mediasession and file-system bfd28ec\nrelease v4.6.0 e4d8e7c\n\nv4.5.0\n\n23 October 2020\n\n\nfix media reporting 220c7f4\nrelease v4.5.0 337a109\n\nv4.4.0\n\n23 October 2020\n\n\nupdates und native file stable changes 939f6b8\nrelease v4.4.0 77c544b\n\nv4.3.1\n\n12 October 2020\n\n\nrelease v4.3.1 3a9067b\n\nv4.3.0\n\n12 October 2020\n\n\nrelease v4.3.0 7def043\nanalyzer report 4a4b1c4\n\nv4.2.0\n\n12 October 2020\n\n\nrelease v4.2.0 866de3e\n\nv4.1.0\n\n6 October 2020\n\n\nrelease v4.1.0 98a793b\n\nv4.0.0\n\n6 October 2020\n\n\nrelease v4.0.0 d38c534\n\nv3.11.0\n\n6 October 2020\n\n\nrelease v3.11.0 2a4184c\n\nv3.10.0\n\n6 October 2020\n\n\nrelease v3.10.0 d562368\n\nv3.9.0\n\n6 October 2020\n\n\ntoggle to disable extraction of color from cover art a84cb97\nrelease v3.9.0 748a302\n\nv3.8.1\n\n6 October 2020\n\n\nrelease v3.8.1 bda90a4\n\nv3.8.0\n\n5 October 2020\n\n\nrelease v3.8.0 c73a2ce\n\nv3.7.0\n\n20 September 2020\n\n\nrelease v3.7.0 61eb69b\n\nv3.6.0\n\n9 September 2020\n\n\nrelease v3.6.0 22da5c7\n\nv3.5.1\n\n2 September 2020\n\n\nrelease v3.5.1 70990de\n\nv3.5.0\n\n2 September 2020\n\n\nrelease v3.5.0 3ccea4c\n\nv3.4.1\n\n30 August 2020\n\n\nrelease v3.4.1 5ed4032\n\nv3.4.0\n\n30 August 2020\n\n\noptimize loading of service worker and caching 5cec62d\nrelease v3.4.0 1385586\n\nv3.3.0\n\n30 August 2020\n\n\noptimize bundles 6cd086c\nrelease v3.3.0 27fdc57\noptimize loading of service worker f1cad4d\n\nv3.2.1\n\n23 August 2020\n\n\nrelease v3.2.1 bb4ded8\nicons compressed c550911\n\nv3.2.0\n\n23 August 2020\n\n\nstart page a7cf166\nrelease v3.2.0 14a5bd3\nlang and description in webmanifest 1e4fd87\n\nv3.1.2\n\n23 August 2020\n\n\nrelease v3.1.2 69ed6f4\n\nv3.1.1\n\n23 August 2020\n\n\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 800fdae\nrelease v3.1.1 7440340\n\nv3.1.0\n\n23 August 2020\n\n\ndeps 3597f8b\nnx 10.1 20050dc\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 0cec276\n\nv3.0.9\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest 8d5f783\nrelease v3.0.9 f3a09c7\n\nv3.0.8\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest b708169\nrelease v3.0.8 7a1bbe5\n\nv3.0.7\n\n21 August 2020\n\n\nrelease v3.0.7 1a92061\n\nv3.0.6\n\n21 August 2020\n\n\nrelease v3.0.6 f31886e\n\nv3.0.5\n\n21 August 2020\n\n\nrelease v3.0.5 e7c9ada\n\nv3.0.4\n\n21 August 2020\n\n\nrelease v3.0.4 20d1b8b\n\nv3.0.3\n\n21 August 2020\n\n\nrelease v3.0.2 ea1fc76\nrelease v3.0.3 f4f50ef\n\nv3.0.2\n\n21 August 2020\n\n\nrelease v3.0.2 bc4e4dc\n\nv3.0.1\n\n21 August 2020\n\n\nrelease v3.0.1 339d07b\n\nv3.0.0\n\n21 August 2020\n\n\nrelease v3.0.0 57f591d\nrelease v2.0.0 6a6ec18\nrelease v1.19.0 d6210df\n\nv2.0.2\n\n21 August 2020\n\n\nrelease v2.0.2 7b491de\n\nv2.0.1\n\n21 August 2020\n\n\nrelease v2.0.1 b820bf4\n\nv2.0.0\n\n21 August 2020\n\n\nreadded polyfills, prefetch, manifest.json, splashscreen e102482\nrelease v2.0.0 c3d7490\n\nv1.18.0\n\n21 August 2020\n\n\nrelease v1.18.0 5aed853\n\nv1.17.0\n\n21 August 2020\n\n\nrelease v1.17.0 901f502\n\nv1.16.0\n\n21 August 2020\n\n\nrelease v1.16.0 5af2ad7\n\nv1.15.0\n\n21 August 2020\n\n\nrelease v1.15.0 abccf03\n\nv1.14.0\n\n21 August 2020\n\n\nrelease v1.14.0 339af30\n\nv1.13.0\n\n21 August 2020\n\n\nrelease v1.13.0 fb05c12\n\nv1.12.0\n\n21 August 2020\n\n\nrelease v1.12.0 67a17ee\n\nv1.11.12\n\n21 August 2020\n\n\nrelease v1.11.12 bba9cb0\n\nv1.11.11\n\n21 August 2020\n\n\nrelease v1.11.11 ba2a28a\n\nv1.11.10\n\n21 August 2020\n\n\nrelease v1.11.10 b7e8f76\n\nv1.11.9\n\n21 August 2020\n\n\nrelease v1.11.9 52afb10\n\nv1.11.8\n\n21 August 2020\n\n\nrelease v1.11.8 e6d7fd2\n\nv1.11.7\n\n21 August 2020\n\n\nrelease v1.11.7 c2c0b8f\n\nv1.11.6\n\n21 August 2020\n\n\nrelease v1.11.6 91d4a54\n\nv1.11.5\n\n21 August 2020\n\n\nrelease v1.11.5 822ff08\n\nv1.11.4\n\n21 August 2020\n\n\nrelease v1.11.4 8c9c5c3\n\nv1.11.3\n\n21 August 2020\n\n\nrelease v1.11.3 8aabc76\n\nv1.11.2\n\n21 August 2020\n\n\nrelease v1.11.2 71e1d6c\n\nv1.11.1\n\n21 August 2020\n\n\nrelease v1.11.1 ed57248\nremove commonjs whitelist entry ad6497d\n\nv1.11.0\n\n19 August 2020\n\n\ndeps and polyfills removed 3e8e5d0\nrelease v1.11.0 289ec3d\ndisable zone for requestAnimationFrame 422fc8e\n\nv1.10.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\nrelease v1.10.0 f9c114e\nrelease v1.9.1 6b2d8b8\n\nv1.9.1\n\n17 August 2020\n\n\nrelease v1.9.0 68e8dc6\nrelease v1.9.1 d5cd7ea\n\nv1.9.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\n\nv1.8.0\n\n17 August 2020\n\n\nrelease v1.8.0 7484f35\nCreate LICENSE f69d368\nRename LICENSE to LICENSE.md 3773370\n\nv1.7.3\n\n30 July 2020\n\n\ndeps a00ccd1\nrelease v1.7.3 47842e1\nnode 14 build f5ee0e6\n\nv1.7.2\n\n24 July 2020\n\n\nrelease v1.7.2 101bbd0\n\nv1.7.1\n\n24 July 2020\n\n\nrelease v1.7.1 28465d6\n\nv1.7.0\n\n24 July 2020\n\n\nrelease v1.7.0 b5f68a1\n\nv1.6.4\n\n24 July 2020\n\n\nrelease v1.6.4 646c494\n\nv1.6.3\n\n24 July 2020\n\n\nrelease v1.6.3 17ed8a6\n\nv1.6.2\n\n18 July 2020\n\n\ndeps 667f875\nRevert \"support for seeking to position on android notification\" f2cfbcc\nrelease v1.6.2 85eb0ba\n\nv1.6.1\n\n10 July 2020\n\n\ndeps 228ee85\nrelease v1.6.1 949055a\n\nv1.6.0\n\n3 July 2020\n\n\nsupport for seeking to position on android notification 9fa1a37\nrelease v1.6.0 4f1794f\n\nv1.5.0\n\n3 July 2020\n\n\ndeps und position reporting to browser 7a6f294\nrelease v1.5.0 f076ced\n\nv1.4.1\n\n26 June 2020\n\n\nangular.json schema und allowedCommonJsDeps 654bac2\nrelease v1.4.1 250d7f9\n\nv1.4.0\n\n26 June 2020\n\n\ndeps fix 4e72fcd\nng 10 update b6bd950\nadded missing decorator 8515368\n\nv1.3.0\n\n4 June 2020\n\n\nnew icons for visualization modes a8073a9\nrelease v1.3.0 b241b46\n\nv1.2.2\n\n28 May 2020\n\n\ndeps 87adc2c\nrelease v1.2.2 abc0b07\n\nv1.2.1\n\n20 May 2020\n\n\ndeps be025cd\nrelease v1.2.1 0b30a9f\n\nv1.2.0\n\n10 May 2020\n\n\nname changes, native file service refactored 170ea47\nrelease v1.2.0 cb01a92\nname changes, native file service refactored 8264f64\n\nv1.1.0\n\n8 May 2020\n\n\nrelease v1.1.0 a2a4811\nopen folders recursive 1c9fedf\n\nv1.0.5\n\n8 May 2020\n\n\nrelease v1.0.5 1604161\n\nv1.0.4\n\n5 May 2020\n\n\nfix: package.json, package-lock.json & .snyk to reduce vulnerabilities #2\nrelease v1.0.4 8e2ff5a\n\nv1.0.3\n\n2 May 2020\n\n\nrelease v1.0.3 8e36da3\n\nv1.0.2\n\n2 May 2020\n\n\nrelease v1.0.2 6926167\n\nv1.0.1\n\n2 May 2020\n\n\nrelease v1.0.1 194199c\n\nv1.0.0\n\n2 May 2020\n\n\nremoved electron, added compodoc 22afab3\nrelease v1.0.0 18cab80\nUpdate README.md 0e060af\n\nv0.29.0\n\n25 April 2020\n\n\nrelease v0.29.0 669facb\n\nv0.28.0\n\n25 April 2020\n\n\ndeps 9d2ef7e\nrelease v0.28.0 eaf70a8\n\nv0.25.0\n\n15 April 2020\n\n\nrelease v0.25.0 0581767\n\nv0.24.0\n\n15 April 2020\n\n\nrelease v0.24.0 a457b9c\ndeps linting formating b04ce8b\nUpdate NOTES.md 0903cd2\n\nv0.23.0\n\n4 April 2020\n\n\nci d954540\nrelease v0.23.0 95902bb\nci 53a8631\n\nv0.22.0\n\n4 April 2020\n\n\nrelease v0.22.0 f0f7618\n\nv0.21.0\n\n31 March 2020\n\n\ndependencies e34b732\nreadme e7032e1\nfile extensions list 53749c8\n\nv0.20.0\n\n30 March 2020\n\n\nrelease v0.20.0 572a9f8\n\nv0.19.0\n\n30 March 2020\n\n\nrelease v0.19.0 72075fe\nscreen wakelock when playing, navigation fixed especially for mobile ae93b7a\norigin trials for native file system and wakelock api a5849e4\n\nv0.18.0\n\n29 March 2020\n\n\nrelease v0.18.0 fefaba0\nprevent browser history 097fe6b\n\nv0.17.0\n\n29 March 2020\n\n\nprevent browser history 80b42ce\nrelease v0.17.0 4e9a327\n\nv0.16.0\n\n29 March 2020\n\n\ndeps f1b02b7\nrelease v0.16.0 5fe0756\n\nv0.15.0\n\n29 March 2020\n\n\ndeps 092dc60\nnx tags 6782ecd\nrelease v0.15.0 0cabcad\n\nv0.14.0\n\n24 March 2020\n\n\nrelease v0.14.0 dd93cb1\n\nv0.13.0\n\n24 March 2020\n\n\nrelease v0.13.0 162acda\n\nv0.12.0\n\n24 March 2020\n\n\nrelease v0.12.0 79fee74\n\nv0.11.0\n\n24 March 2020\n\n\nrelease v0.11.0 828148a\n\nv0.10.0\n\n24 March 2020\n\n\nrelease v0.10.0 35a78e4\n\nv0.9.0\n\n24 March 2020\n\n\nrelease v0.9.0 2011e46\n\nv0.8.0\n\n24 March 2020\n\n\nrelease v0.8.0 02c06cb\n\nv0.7.0\n\n24 March 2020\n\n\nrelease v0.7.0 75fc12c\n\nv0.6.0\n\n24 March 2020\n\n\nrelease v0.6.0 184a834\n\nv0.5.0\n\n24 March 2020\n\n\nrelease v0.5.0 ab311db\n\nv0.4.0\n\n24 March 2020\n\n\nrelease v0.4.0 42f56c1\nfixed visuals cefa1f1\nplay rewrite and project preparations 1098d6a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @allex/crc32 : ^1.0.4\n        \n            @angular/animations : 19.2.3\n        \n            @angular/cdk : 19.2.6\n        \n            @angular/common : 19.2.3\n        \n            @angular/compiler : 19.2.3\n        \n            @angular/core : 19.2.3\n        \n            @angular/forms : 19.2.3\n        \n            @angular/material : 19.2.6\n        \n            @angular/platform-browser : 19.2.3\n        \n            @angular/platform-browser-dynamic : 19.2.3\n        \n            @angular/router : 19.2.3\n        \n            @angular/service-worker : 19.2.3\n        \n            @thebespokepixel/es-tinycolor : ^3.1.0\n        \n            date-fns : ^4.1.0\n        \n            lucene-escape-query : ^1.0.1\n        \n            music-metadata : 11.0.2\n        \n            ngx-date-fns : 12.0.0\n        \n            ngx-indexed-db : 19.4.3\n        \n            ngx-pipes : 3.2.2\n        \n            ngx-webstorage : 19.0.1\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            spark-md5 : ^3.0.2\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../helpers-time.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/helpers-time.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    41 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.2.9\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : MIT\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs:\n\nuse webworker for node-vibrant\nAudio-File explorer + Suche\nPlaylist management (Sorting, Saving)\nVisuals via UserMediaInput from mic or system\nShare target\nWriting Meta-Tags\nFullscreen/Multiwindow Mode\nLocalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \"60\" | \"170\" | \"310\" | \"600\" | \"1000\" | \"3000\" | \"6000\" | \"12000\" | \"14000\" | \"16000\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../app.config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../audio.service.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideExperimentalZonelessChangeDetection(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideAnimations(),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'metadataCache',\n  version: 2,\n  objectStoresMeta: [\n    {\n      store: 'metatags',\n      storeConfig: { keyPath: 'crc', autoIncrement: false },\n      storeSchema: [\n        { name: 'crc', keypath: 'crc', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'dirHandle',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/audio.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FrequencyBand[]\n\n                    \n                \n                \n                    \n                        Default value : [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
